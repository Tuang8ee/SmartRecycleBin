

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Apr 18 23:36:23 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.36
    39                           ; Generated 28/01/2022 GMT
    40                           ; 
    41                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F877A Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009C                     	;# 
   184  009D                     	;# 
   185  009E                     	;# 
   186  009F                     	;# 
   187  010C                     	;# 
   188  010D                     	;# 
   189  010E                     	;# 
   190  010F                     	;# 
   191  018C                     	;# 
   192  018D                     	;# 
   193                           
   194                           	psect	idataBANK0
   195  0F31                     __pidataBANK0:
   196                           
   197                           ;initializer for _SW2
   198  0F31  3405               	retlw	5
   199  0F32  3400               	retlw	0
   200  0F33  3405               	retlw	5
   201                           
   202                           ;initializer for _SW1
   203  0F34  3405               	retlw	5
   204  0F35  3400               	retlw	0
   205  0F36  3404               	retlw	4
   206                           
   207                           ;initializer for _IR_Sensor_2
   208  0F37  3405               	retlw	5
   209  0F38  3400               	retlw	0
   210  0F39  3401               	retlw	1
   211                           
   212                           ;initializer for _IR_Sensor_1
   213  0F3A  3405               	retlw	5
   214  0F3B  3400               	retlw	0
   215  0F3C  3400               	retlw	0
   216                           
   217                           ;initializer for _Motor_0
   218  0F3D  3406               	retlw	6
   219  0F3E  3400               	retlw	0
   220  0F3F  3400               	retlw	0
   221                           
   222                           ;initializer for _BUZZER
   223  0F40  3406               	retlw	6
   224  0F41  3400               	retlw	0
   225  0F42  3401               	retlw	1
   226                           
   227                           ;initializer for _LED2
   228  0F43  3406               	retlw	6
   229  0F44  3400               	retlw	0
   230  0F45  3402               	retlw	2
   231                           
   232                           ;initializer for _LED1
   233  0F46  3406               	retlw	6
   234  0F47  3400               	retlw	0
   235  0F48  3403               	retlw	3
   236                           
   237                           ;initializer for _UltraSonic_2
   238  0F49  3405               	retlw	5
   239  0F4A  3400               	retlw	0
   240  0F4B  3402               	retlw	2
   241  0F4C  3405               	retlw	5
   242  0F4D  3400               	retlw	0
   243  0F4E  3403               	retlw	3
   244                           
   245                           	psect	idataBANK1
   246  07C2                     __pidataBANK1:
   247                           
   248                           ;initializer for _UltraSonic_1
   249  07C2  3406               	retlw	6
   250  07C3  3400               	retlw	0
   251  07C4  3404               	retlw	4
   252  07C5  3406               	retlw	6
   253  07C6  3400               	retlw	0
   254  07C7  3405               	retlw	5
   255                           
   256                           ;initializer for _Motor_4
   257  07C8  3407               	retlw	7
   258  07C9  3400               	retlw	0
   259  07CA  3401               	retlw	1
   260  07CB  3407               	retlw	7
   261  07CC  3400               	retlw	0
   262  07CD  3400               	retlw	0
   263  07CE  3409               	retlw	9
   264  07CF  3400               	retlw	0
   265  07D0  3402               	retlw	2
   266  07D1  3409               	retlw	9
   267  07D2  3400               	retlw	0
   268  07D3  3401               	retlw	1
   269                           
   270                           ;initializer for _Motor_3
   271  07D4  3408               	retlw	8
   272  07D5  3400               	retlw	0
   273  07D6  3401               	retlw	1
   274  07D7  3408               	retlw	8
   275  07D8  3400               	retlw	0
   276  07D9  3400               	retlw	0
   277  07DA  3407               	retlw	7
   278  07DB  3400               	retlw	0
   279  07DC  3403               	retlw	3
   280  07DD  3407               	retlw	7
   281  07DE  3400               	retlw	0
   282  07DF  3402               	retlw	2
   283                           
   284                           ;initializer for _Motor_2
   285  07E0  3408               	retlw	8
   286  07E1  3400               	retlw	0
   287  07E2  3404               	retlw	4
   288  07E3  3408               	retlw	8
   289  07E4  3400               	retlw	0
   290  07E5  3405               	retlw	5
   291  07E6  3408               	retlw	8
   292  07E7  3400               	retlw	0
   293  07E8  3406               	retlw	6
   294  07E9  3408               	retlw	8
   295  07EA  3400               	retlw	0
   296  07EB  3407               	retlw	7
   297                           
   298                           ;initializer for _Motor_1
   299  07EC  3407               	retlw	7
   300  07ED  3400               	retlw	0
   301  07EE  3404               	retlw	4
   302  07EF  3407               	retlw	7
   303  07F0  3400               	retlw	0
   304  07F1  3405               	retlw	5
   305  07F2  3407               	retlw	7
   306  07F3  3400               	retlw	0
   307  07F4  3406               	retlw	6
   308  07F5  3407               	retlw	7
   309  07F6  3400               	retlw	0
   310  07F7  3407               	retlw	7
   311                           
   312                           	psect	strings
   313  0800                     __pstrings:
   314  0800                     stringtab:
   315  0800                     __stringtab:
   316                           
   317                           ;	String table - string pointers are 1 byte each
   318  0800  1BFF               	btfsc	btemp+1,7
   319  0801  280A               	ljmp	stringcode
   320  0802  1383               	bcf	3,7
   321  0803  187F               	btfsc	btemp+1,0
   322  0804  1783               	bsf	3,7
   323  0805  0800               	movf	0,w
   324  0806  0A84               	incf	4,f
   325  0807  1903               	skipnz
   326  0808  0AFF               	incf	btemp+1,f
   327  0809  0008               	return
   328  080A                     stringcode:
   329  080A                     stringdir:
   330  080A  3008               	movlw	high stringdir
   331  080B  008A               	movwf	10
   332  080C  0804               	movf	4,w
   333  080D  0A84               	incf	4,f
   334  080E  0782               	addwf	2,f
   335  080F                     __stringbase:
   336  080F  3400               	retlw	0
   337  0810                     __end_of__stringtab:
   338  0810                     _dpowers:
   339  0810  3401               	retlw	1
   340  0811  3400               	retlw	0
   341  0812  340A               	retlw	10
   342  0813  3400               	retlw	0
   343  0814  3464               	retlw	100
   344  0815  3400               	retlw	0
   345  0816  34E8               	retlw	232
   346  0817  3403               	retlw	3
   347  0818  3410               	retlw	16
   348  0819  3427               	retlw	39
   349  081A                     __end_of_dpowers:
   350  000C                     _PIR1	set	12
   351  001F                     _ADCON0	set	31
   352  0019                     _TXREG	set	25
   353  0018                     _RCSTA	set	24
   354  0011                     _TMR2	set	17
   355  0012                     _T2CON	set	18
   356  000B                     _INTCON	set	11
   357  0005                     _PORTA	set	5
   358  0009                     _PORTE	set	9
   359  0008                     _PORTD	set	8
   360  0007                     _PORTC	set	7
   361  0006                     _PORTB	set	6
   362  0064                     _TXIF	set	100
   363  0061                     _TMR2IF	set	97
   364  0091                     _T2CKPS1	set	145
   365  0092                     _TMR2ON	set	146
   366  008C                     _PIE1	set	140
   367  009F                     _ADCON1	set	159
   368  0099                     _SPBRG	set	153
   369  0098                     _TXSTA	set	152
   370  0089                     _TRISE	set	137
   371  0088                     _TRISD	set	136
   372  0087                     _TRISC	set	135
   373  0086                     _TRISB	set	134
   374  0085                     _TRISA	set	133
   375  04C1                     _TRMT	set	1217
   376  0461                     _TMR2IE	set	1121
   377  081A                     STR_1:
   378  081A  3452               	retlw	82	;'R'
   379  081B  3445               	retlw	69	;'E'
   380  081C  3453               	retlw	83	;'S'
   381  081D  3445               	retlw	69	;'E'
   382  081E  3454               	retlw	84	;'T'
   383  081F  343A               	retlw	58	;':'
   384  0820  3420               	retlw	32	;' '
   385  0821  344F               	retlw	79	;'O'
   386  0822  344B               	retlw	75	;'K'
   387  0823  340A               	retlw	10
   388  0824  3400               	retlw	0
   389  0825  3400               	retlw	0
   390  0826                     STR_3:
   391  0826  3444               	retlw	68	;'D'
   392  0827  343A               	retlw	58	;':'
   393  0828  3425               	retlw	37	;'%'
   394  0829  3464               	retlw	100	;'d'
   395  082A  3463               	retlw	99	;'c'
   396  082B  346D               	retlw	109	;'m'
   397  082C  340A               	retlw	10
   398  082D  3400               	retlw	0
   399  082E  3400               	retlw	0
   400  081A                     
   401                           	psect	cinit
   402  000F                     start_initialization:	
   403                           ; #config settings
   404                           
   405  000F                     __initialization:
   406                           
   407                           ; Initialize objects allocated to BANK1
   408  000F  1383               	bcf	3,7	;select IRP bank0
   409  0010  30D6               	movlw	low (__pdataBANK1+54)
   410  0011  00FD               	movwf	btemp+-1
   411  0012  3007               	movlw	high __pidataBANK1
   412  0013  00FE               	movwf	btemp
   413  0014  30C2               	movlw	low __pidataBANK1
   414  0015  00FF               	movwf	btemp+1
   415  0016  30A0               	movlw	low __pdataBANK1
   416  0017  0084               	movwf	4
   417  0018  120A  158A  26EF  120A  118A  	fcall	init_ram0
   418                           
   419                           ; Initialize objects allocated to BANK0
   420  001D  3068               	movlw	low (__pdataBANK0+30)
   421  001E  00FD               	movwf	btemp+-1
   422  001F  300F               	movlw	high __pidataBANK0
   423  0020  00FE               	movwf	btemp
   424  0021  3031               	movlw	low __pidataBANK0
   425  0022  00FF               	movwf	btemp+1
   426  0023  304A               	movlw	low __pdataBANK0
   427  0024  0084               	movwf	4
   428  0025  120A  158A  26EF   	fcall	init_ram0
   429                           
   430                           ; Clear objects allocated to BANK1
   431  0028  1683               	bsf	3,5	;RP0=1, select bank1
   432  0029  01D6               	clrf	__pbssBANK1& (0+127)
   433  002A  01D7               	clrf	(__pbssBANK1+1)& (0+127)
   434  002B  01D8               	clrf	(__pbssBANK1+2)& (0+127)
   435  002C  01D9               	clrf	(__pbssBANK1+3)& (0+127)
   436  002D  01DA               	clrf	(__pbssBANK1+4)& (0+127)
   437  002E  01DB               	clrf	(__pbssBANK1+5)& (0+127)
   438  002F  01DC               	clrf	(__pbssBANK1+6)& (0+127)
   439  0030  01DD               	clrf	(__pbssBANK1+7)& (0+127)
   440  0031  01DE               	clrf	(__pbssBANK1+8)& (0+127)
   441  0032  01DF               	clrf	(__pbssBANK1+9)& (0+127)
   442                           
   443                           ; Clear objects allocated to BANK0
   444  0033  1283               	bcf	3,5	;RP0=0, select bank0
   445  0034  01E8               	clrf	__pbssBANK0& (0+127)
   446  0035  01E9               	clrf	(__pbssBANK0+1)& (0+127)
   447  0036  01EA               	clrf	(__pbssBANK0+2)& (0+127)
   448  0037  01EB               	clrf	(__pbssBANK0+3)& (0+127)
   449  0038  01EC               	clrf	(__pbssBANK0+4)& (0+127)
   450  0039  01ED               	clrf	(__pbssBANK0+5)& (0+127)
   451  003A                     end_of_initialization:	
   452                           ;End of C runtime variable initialization code
   453                           
   454  003A                     __end_of__initialization:
   455  003A  0183               	clrf	3
   456  003B  120A  118A  283E   	ljmp	_main	;jump to C main() function
   457                           
   458                           	psect	bssBANK0
   459  0068                     __pbssBANK0:
   460  0068                     _timeReset_flag:
   461  0068                     	ds	2
   462  006A                     _timeSysTick:
   463  006A                     	ds	4
   464                           
   465                           	psect	dataBANK0
   466  004A                     __pdataBANK0:
   467  004A                     _SW2:
   468  004A                     	ds	3
   469  004D                     _SW1:
   470  004D                     	ds	3
   471  0050                     _IR_Sensor_2:
   472  0050                     	ds	3
   473  0053                     _IR_Sensor_1:
   474  0053                     	ds	3
   475  0056                     _Motor_0:
   476  0056                     	ds	3
   477  0059                     _BUZZER:
   478  0059                     	ds	3
   479  005C                     _LED2:
   480  005C                     	ds	3
   481  005F                     _LED1:
   482  005F                     	ds	3
   483  0062                     _UltraSonic_2:
   484  0062                     	ds	6
   485                           
   486                           	psect	bssBANK1
   487  00D6                     __pbssBANK1:
   488  00D6                     main@F1081:
   489  00D6                     	ds	10
   490                           
   491                           	psect	dataBANK1
   492  00A0                     __pdataBANK1:
   493  00A0                     _UltraSonic_1:
   494  00A0                     	ds	6
   495  00A6                     _Motor_4:
   496  00A6                     	ds	12
   497  00B2                     _Motor_3:
   498  00B2                     	ds	12
   499  00BE                     _Motor_2:
   500  00BE                     	ds	12
   501  00CA                     _Motor_1:
   502  00CA                     	ds	12
   503                           
   504                           	psect	inittext
   505  0EEB                     init_fetch0:	
   506                           ;	Called with low address in FSR and high address in W
   507                           
   508  0EEB  087E               	movf	126,w
   509  0EEC  008A               	movwf	10
   510  0EED  087F               	movf	127,w
   511  0EEE  0082               	movwf	2
   512  0EEF                     init_ram0:	
   513                           ;Called with:
   514                           ;	high address of idata address in btemp 
   515                           ;	low address of idata address in btemp+1 
   516                           ;	low address of data in FSR
   517                           ;	high address + 1 of data in btemp-1
   518                           
   519  0EEF  26EB  120A  158A   	fcall	init_fetch0
   520  0EF2  0080               	movwf	0
   521  0EF3  0A84               	incf	4,f
   522  0EF4  0804               	movf	4,w
   523  0EF5  067D               	xorwf	125,w
   524  0EF6  1903               	btfsc	3,2
   525  0EF7  3400               	retlw	0
   526  0EF8  0AFF               	incf	127,f
   527  0EF9  1903               	btfsc	3,2
   528  0EFA  0AFE               	incf	126,f
   529  0EFB  2EEF               	goto	init_ram0
   530                           
   531                           	psect	cstackCOMMON
   532  0070                     __pcstackCOMMON:
   533  0070                     ?_Timer2_Interrupt_Init:
   534  0070                     ?_UART_WriteChar:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?_MCU_Config:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ?_Motor_Stop:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ?_Motor_Forward_Start:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ?_Motor_Reverse_Start:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ?_TIM2:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ??_TIM2:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?_main:	
   556                           ; 1 bytes @ 0x0
   557                           
   558                           
   559                           ; 1 bytes @ 0x0
   560  0070                     	ds	2
   561  0072                     ?_GPIO_Write:
   562  0072                     ?_GPIO_Read:	
   563                           ; 1 bytes @ 0x2
   564                           
   565  0072                     ??_Timer2_Interrupt_Init:	
   566                           ; 1 bytes @ 0x2
   567                           
   568  0072                     ??_UART_WriteChar:	
   569                           ; 1 bytes @ 0x2
   570                           
   571  0072                     ?_strlen:	
   572                           ; 1 bytes @ 0x2
   573                           
   574  0072                     ?___lwdiv:	
   575                           ; 2 bytes @ 0x2
   576                           
   577  0072                     ?___aldiv:	
   578                           ; 2 bytes @ 0x2
   579                           
   580  0072                     ?___llmod:	
   581                           ; 4 bytes @ 0x2
   582                           
   583  0072                     UART_WriteChar@data:	
   584                           ; 4 bytes @ 0x2
   585                           
   586  0072                     GPIO_Write@GPIO_Port:	
   587                           ; 1 bytes @ 0x2
   588                           
   589  0072                     GPIO_Read@GPIO_Port:	
   590                           ; 2 bytes @ 0x2
   591                           
   592  0072                     ___lwdiv@divisor:	
   593                           ; 2 bytes @ 0x2
   594                           
   595  0072                     strlen@s:	
   596                           ; 2 bytes @ 0x2
   597                           
   598  0072                     ___aldiv@divisor:	
   599                           ; 2 bytes @ 0x2
   600                           
   601  0072                     ___llmod@divisor:	
   602                           ; 4 bytes @ 0x2
   603                           
   604                           
   605                           ; 4 bytes @ 0x2
   606  0072                     	ds	2
   607  0074                     ??_strlen:
   608  0074                     GPIO_Write@Pin:	
   609                           ; 1 bytes @ 0x4
   610                           
   611  0074                     GPIO_Read@Pin:	
   612                           ; 1 bytes @ 0x4
   613                           
   614  0074                     ___lwdiv@dividend:	
   615                           ; 1 bytes @ 0x4
   616                           
   617  0074                     strlen@cp:	
   618                           ; 2 bytes @ 0x4
   619                           
   620                           
   621                           ; 2 bytes @ 0x4
   622  0074                     	ds	1
   623  0075                     ??_GPIO_Read:
   624  0075                     GPIO_Write@GPIO_State:	
   625                           ; 1 bytes @ 0x5
   626                           
   627                           
   628                           ; 1 bytes @ 0x5
   629  0075                     	ds	1
   630  0076                     ??_GPIO_Write:
   631  0076                     ?_UART_Writes:	
   632                           ; 1 bytes @ 0x6
   633                           
   634  0076                     ??___lwdiv:	
   635                           ; 1 bytes @ 0x6
   636                           
   637  0076                     GPIO_Read@GPIO_State:	
   638                           ; 1 bytes @ 0x6
   639                           
   640  0076                     UART_Writes@data:	
   641                           ; 1 bytes @ 0x6
   642                           
   643  0076                     ___aldiv@dividend:	
   644                           ; 2 bytes @ 0x6
   645                           
   646  0076                     ___llmod@dividend:	
   647                           ; 4 bytes @ 0x6
   648                           
   649                           
   650                           ; 4 bytes @ 0x6
   651  0076                     	ds	1
   652  0077                     ___lwdiv@quotient:
   653                           
   654                           ; 2 bytes @ 0x7
   655  0077                     	ds	1
   656  0078                     ??_Motor_Stop:
   657  0078                     ?_UltraSonicSensor_Read:	
   658                           ; 1 bytes @ 0x8
   659                           
   660  0078                     UART_Writes@len:	
   661                           ; 4 bytes @ 0x8
   662                           
   663  0078                     UltraSonicSensor_Read@system_tick:	
   664                           ; 1 bytes @ 0x8
   665                           
   666                           
   667                           ; 1 bytes @ 0x8
   668  0078                     	ds	1
   669  0079                     ??_UART_Writes:
   670  0079                     ___lwdiv@counter:	
   671                           ; 1 bytes @ 0x9
   672                           
   673                           
   674                           ; 1 bytes @ 0x9
   675  0079                     	ds	1
   676  007A                     ??___aldiv:
   677  007A                     ??___llmod:	
   678                           ; 1 bytes @ 0xA
   679                           
   680  007A                     ??___lwmod:	
   681                           ; 1 bytes @ 0xA
   682                           
   683  007A                     UART_Writes@i:	
   684                           ; 1 bytes @ 0xA
   685                           
   686                           
   687                           ; 1 bytes @ 0xA
   688  007A                     	ds	1
   689  007B                     Motor_Stop@motor_handle:
   690  007B                     ___llmod@counter:	
   691                           ; 1 bytes @ 0xB
   692                           
   693  007B                     ___lwmod@counter:	
   694                           ; 1 bytes @ 0xB
   695                           
   696                           
   697                           ; 1 bytes @ 0xB
   698  007B                     	ds	1
   699                           
   700                           	psect	cstackBANK0
   701  0020                     __pcstackBANK0:
   702  0020                     ??_Motor_Forward_Start:
   703  0020                     ??_Motor_Reverse_Start:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0020                     ??_UltraSonicSensor_Read:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0020                     ?___lwmod:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0020                     ___aldiv@counter:	
   713                           ; 2 bytes @ 0x0
   714                           
   715  0020                     ___lwmod@divisor:	
   716                           ; 1 bytes @ 0x0
   717                           
   718                           
   719                           ; 2 bytes @ 0x0
   720  0020                     	ds	1
   721  0021                     ___aldiv@sign:
   722                           
   723                           ; 1 bytes @ 0x1
   724  0021                     	ds	1
   725  0022                     Motor_Forward_Start@motor_handle:
   726  0022                     Motor_Reverse_Start@motor_handle:	
   727                           ; 1 bytes @ 0x2
   728                           
   729  0022                     ___lwmod@dividend:	
   730                           ; 1 bytes @ 0x2
   731                           
   732  0022                     ___aldiv@quotient:	
   733                           ; 2 bytes @ 0x2
   734                           
   735                           
   736                           ; 4 bytes @ 0x2
   737  0022                     	ds	2
   738  0024                     ?_sprintf:
   739  0024                     sprintf@f:	
   740                           ; 2 bytes @ 0x4
   741                           
   742  0024                     UltraSonicSensor_Read@buff_time:	
   743                           ; 1 bytes @ 0x4
   744                           
   745                           
   746                           ; 4 bytes @ 0x4
   747  0024                     	ds	2
   748  0026                     ?_UART_BASE_Init:
   749  0026                     UART_BASE_Init@baud:	
   750                           ; 1 bytes @ 0x6
   751                           
   752                           
   753                           ; 4 bytes @ 0x6
   754  0026                     	ds	2
   755  0028                     UltraSonicSensor_Read@sensor:
   756                           
   757                           ; 1 bytes @ 0x8
   758  0028                     	ds	1
   759  0029                     ??_sprintf:
   760                           
   761                           ; 1 bytes @ 0x9
   762  0029                     	ds	1
   763  002A                     ??_UART_BASE_Init:
   764                           
   765                           ; 1 bytes @ 0xA
   766  002A                     	ds	2
   767  002C                     sprintf@ap:
   768                           
   769                           ; 1 bytes @ 0xC
   770  002C                     	ds	1
   771  002D                     sprintf@flag:
   772                           
   773                           ; 1 bytes @ 0xD
   774  002D                     	ds	1
   775  002E                     ??_MCU_Config:
   776  002E                     sprintf@prec:	
   777                           ; 1 bytes @ 0xE
   778                           
   779                           
   780                           ; 1 bytes @ 0xE
   781  002E                     	ds	1
   782  002F                     sprintf@val:
   783                           
   784                           ; 2 bytes @ 0xF
   785  002F                     	ds	2
   786  0031                     sprintf@sp:
   787                           
   788                           ; 1 bytes @ 0x11
   789  0031                     	ds	1
   790  0032                     sprintf@c:
   791                           
   792                           ; 1 bytes @ 0x12
   793  0032                     	ds	1
   794  0033                     ??_main:
   795                           
   796                           ; 1 bytes @ 0x13
   797  0033                     	ds	4
   798  0037                     main@TX_Str:
   799                           
   800                           ; 10 bytes @ 0x17
   801  0037                     	ds	10
   802  0041                     main@systick_flag:
   803                           
   804                           ; 4 bytes @ 0x21
   805  0041                     	ds	4
   806  0045                     main@moto:
   807                           
   808                           ; 1 bytes @ 0x25
   809  0045                     	ds	1
   810  0046                     main@d:
   811                           
   812                           ; 4 bytes @ 0x26
   813  0046                     	ds	4
   814                           
   815                           	psect	maintext
   816  003E                     __pmaintext:	
   817 ;;
   818 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   819 ;;
   820 ;; *************** function _main *****************
   821 ;; Defined at:
   822 ;;		line 7 in file "Source/main.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;		None
   825 ;; Auto vars:     Size  Location     Type
   826 ;;  TX_Str         10   23[BANK0 ] unsigned char [10]
   827 ;;  d               4   38[BANK0 ] unsigned long 
   828 ;;  systick_flag    4   33[BANK0 ] unsigned long 
   829 ;;  moto            1   37[BANK0 ] unsigned char 
   830 ;; Return value:  Size  Location     Type
   831 ;;                  1    wreg      void 
   832 ;; Registers used:
   833 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   834 ;; Tracked objects:
   835 ;;		On entry : B00/0
   836 ;;		On exit  : 300/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   839 ;;      Params:         0       0       0       0       0
   840 ;;      Locals:         0      19       0       0       0
   841 ;;      Temps:          0       4       0       0       0
   842 ;;      Totals:         0      23       0       0       0
   843 ;;Total ram usage:       23 bytes
   844 ;; Hardware stack levels required when called: 4
   845 ;; This function calls:
   846 ;;		_GPIO_Read
   847 ;;		_GPIO_Write
   848 ;;		_MCU_Config
   849 ;;		_Motor_Forward_Start
   850 ;;		_Motor_Reverse_Start
   851 ;;		_UART_Writes
   852 ;;		_UltraSonicSensor_Read
   853 ;;		___llmod
   854 ;;		_sprintf
   855 ;;		_strlen
   856 ;; This function is called by:
   857 ;;		Startup code after reset
   858 ;; This function uses a non-reentrant model
   859 ;;
   860                           
   861  003E                     _main:	
   862                           ;psect for function _main
   863                           
   864                           
   865                           ;Source/main.c: 9:     unsigned long int systick_flag = 0;
   866                           
   867                           ;incstack = 0
   868                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   869  003E  3000               	movlw	0
   870  003F  00C4               	movwf	main@systick_flag+3
   871  0040  3000               	movlw	0
   872  0041  00C3               	movwf	main@systick_flag+2
   873  0042  3000               	movlw	0
   874  0043  00C2               	movwf	main@systick_flag+1
   875  0044  3000               	movlw	0
   876  0045  00C1               	movwf	main@systick_flag
   877                           
   878                           ;Source/main.c: 10:     MCU_Config();
   879  0046  120A  118A  21E3  120A  118A  	fcall	_MCU_Config
   880                           
   881                           ;Source/main.c: 11:     UART_Writes("RESET: OK\n\0", strlen("RESET: OK\n\0"));
   882  004B  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   883  004C  00F6               	movwf	UART_Writes@data
   884  004D  3080               	movlw	128
   885  004E  00F7               	movwf	UART_Writes@data+1
   886  004F  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   887  0050  00F2               	movwf	strlen@s
   888  0051  3080               	movlw	128
   889  0052  00F3               	movwf	strlen@s+1
   890  0053  120A  158A  274F  120A  118A  	fcall	_strlen
   891  0058  0872               	movf	?_strlen,w
   892  0059  00B3               	movwf	??_main
   893  005A  0833               	movf	??_main,w
   894  005B  00F8               	movwf	UART_Writes@len
   895  005C  120A  158A  2714  120A  118A  	fcall	_UART_Writes
   896                           
   897                           ;Source/main.c: 13:     char moto = 0;
   898  0061  1283               	bcf	3,5	;RP0=0, select bank0
   899  0062  01C5               	clrf	main@moto
   900                           
   901                           ;Source/main.c: 14:     char TX_Str[10] = "";
   902  0063  3037               	movlw	main@TX_Str& (0+255)
   903  0064  0084               	movwf	4
   904  0065  300A               	movlw	10
   905  0066  00FF               	movwf	127
   906  0067                     u1370:
   907  0067  1383               	bcf	3,7	;select IRP bank0
   908  0068  0180               	clrf	0
   909  0069  0A84               	incf	4,f
   910  006A  0BFF               	decfsz	127,f
   911  006B  2867               	goto	u1370
   912  006C                     l1700:
   913                           
   914                           ;Source/main.c: 16:     {;Source/main.c: 17:         if(GPIO_Read(SW1.Port, SW1.Pin))
   915  006C  084D               	movf	_SW1,w
   916  006D  00F2               	movwf	GPIO_Read@GPIO_Port
   917  006E  084E               	movf	_SW1+1,w
   918  006F  00F3               	movwf	GPIO_Read@GPIO_Port+1
   919  0070  084F               	movf	_SW1+2,w
   920  0071  00B3               	movwf	??_main
   921  0072  0833               	movf	??_main,w
   922  0073  00F4               	movwf	GPIO_Read@Pin
   923  0074  120A  158A  26FC  120A  118A  	fcall	_GPIO_Read
   924  0079  3A00               	xorlw	0
   925  007A  1D03               	btfss	3,2
   926  007B  288C               	goto	l1706
   927  007C  289E               	goto	l1708
   928  007D                     l1704:
   929                           
   930                           ;Source/main.c: 20:             {;Source/main.c: 21:                 _delay((unsigned lo
      +                          ng)(((unsigned long)80)*(20000000/4000.0)));
   931  007D  3003               	movlw	3
   932  007E  1283               	bcf	3,5	;RP0=0, select bank0
   933  007F  1303               	bcf	3,6	;RP1=0, select bank0
   934  0080  00B5               	movwf	??_main+2
   935  0081  3008               	movlw	8
   936  0082  00B4               	movwf	??_main+1
   937  0083  3076               	movlw	118
   938  0084  00B3               	movwf	??_main
   939  0085                     u1497:
   940  0085  0BB3               	decfsz	??_main,f
   941  0086  2885               	goto	u1497
   942  0087  0BB4               	decfsz	??_main+1,f
   943  0088  2885               	goto	u1497
   944  0089  0BB5               	decfsz	??_main+2,f
   945  008A  2885               	goto	u1497
   946  008B  0000               	nop
   947  008C                     l1706:
   948                           
   949                           ;Source/main.c: 19:             while(GPIO_Read(SW1.Port, SW1.Pin))
   950  008C  1283               	bcf	3,5	;RP0=0, select bank0
   951  008D  1303               	bcf	3,6	;RP1=0, select bank0
   952  008E  084D               	movf	_SW1,w
   953  008F  00F2               	movwf	GPIO_Read@GPIO_Port
   954  0090  084E               	movf	_SW1+1,w
   955  0091  00F3               	movwf	GPIO_Read@GPIO_Port+1
   956  0092  084F               	movf	_SW1+2,w
   957  0093  00B3               	movwf	??_main
   958  0094  0833               	movf	??_main,w
   959  0095  00F4               	movwf	GPIO_Read@Pin
   960  0096  120A  158A  26FC  120A  118A  	fcall	_GPIO_Read
   961  009B  3A00               	xorlw	0
   962  009C  1D03               	skipz
   963  009D  287D               	goto	l1704
   964  009E                     l1708:
   965                           
   966                           ;Source/main.c: 24:         if(timeSysTick % 100000 <= 50000)
   967  009E  3000               	movlw	0
   968  009F  00F5               	movwf	___llmod@divisor+3
   969  00A0  3001               	movlw	1
   970  00A1  00F4               	movwf	___llmod@divisor+2
   971  00A2  3086               	movlw	134
   972  00A3  00F3               	movwf	___llmod@divisor+1
   973  00A4  30A0               	movlw	160
   974  00A5  00F2               	movwf	___llmod@divisor
   975  00A6  086D               	movf	_timeSysTick+3,w	;volatile
   976  00A7  00F9               	movwf	___llmod@dividend+3
   977  00A8  086C               	movf	_timeSysTick+2,w	;volatile
   978  00A9  00F8               	movwf	___llmod@dividend+2
   979  00AA  086B               	movf	_timeSysTick+1,w	;volatile
   980  00AB  00F7               	movwf	___llmod@dividend+1
   981  00AC  086A               	movf	_timeSysTick,w	;volatile
   982  00AD  00F6               	movwf	___llmod@dividend
   983  00AE  120A  118A  26C7  120A  118A  	fcall	___llmod
   984  00B3  0875               	movf	?___llmod+3,w
   985  00B4  1D03               	btfss	3,2
   986  00B5  28DE               	goto	l1716
   987  00B6  0874               	movf	?___llmod+2,w
   988  00B7  1D03               	btfss	3,2
   989  00B8  28DE               	goto	l1716
   990  00B9  30C3               	movlw	195
   991  00BA  0273               	subwf	?___llmod+1,w
   992  00BB  1D03               	skipz
   993  00BC  28C1               	goto	u1403
   994  00BD  3051               	movlw	81
   995  00BE  0272               	subwf	?___llmod,w
   996  00BF  1D03               	skipz
   997  00C0  28C1               	goto	u1403
   998  00C1                     u1403:
   999  00C1  1803               	btfsc	3,0
  1000  00C2  28DE               	goto	l1716
  1001                           
  1002                           ;Source/main.c: 25:         {;Source/main.c: 27:             if(moto == 0)
  1003  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  1004  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  1005  00C5  0845               	movf	main@moto,w
  1006  00C6  1D03               	btfss	3,2
  1007  00C7  28F7               	goto	l1722
  1008                           
  1009                           ;Source/main.c: 28:             {;Source/main.c: 30:                 Motor_Reverse_Start
      +                          (Motor_2);
  1010  00C8  30BE               	movlw	(low (_Motor_2| 0))& (0+255)
  1011  00C9  120A  118A  274F  120A  118A  	fcall	_Motor_Reverse_Start
  1012                           
  1013                           ;Source/main.c: 31:                 Motor_Reverse_Start(Motor_3);
  1014  00CE  30B2               	movlw	(low (_Motor_3| 0))& (0+255)
  1015  00CF  120A  118A  274F  120A  118A  	fcall	_Motor_Reverse_Start
  1016                           
  1017                           ;Source/main.c: 32:                 Motor_Reverse_Start(Motor_4);
  1018  00D4  30A6               	movlw	(low (_Motor_4| 0))& (0+255)
  1019  00D5  120A  118A  274F  120A  118A  	fcall	_Motor_Reverse_Start
  1020                           
  1021                           ;Source/main.c: 33:                 moto = 1;
  1022  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  1023  00DB  01C5               	clrf	main@moto
  1024  00DC  0AC5               	incf	main@moto,f
  1025  00DD  28F7               	goto	l1722
  1026  00DE                     l1716:
  1027                           
  1028                           ;Source/main.c: 37:         {;Source/main.c: 38:             if(moto == 1)
  1029  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  1030  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  1031  00E0  0345               	decf	main@moto,w
  1032  00E1  1D03               	btfss	3,2
  1033  00E2  28F7               	goto	l1722
  1034                           
  1035                           ;Source/main.c: 39:             {;Source/main.c: 41:                 Motor_Forward_Start
      +                          (Motor_2);
  1036  00E3  30BE               	movlw	(low (_Motor_2| 0))& (0+255)
  1037  00E4  120A  118A  2789  120A  118A  	fcall	_Motor_Forward_Start
  1038                           
  1039                           ;Source/main.c: 42:                 Motor_Forward_Start(Motor_3);
  1040  00E9  30B2               	movlw	(low (_Motor_3| 0))& (0+255)
  1041  00EA  120A  118A  2789  120A  118A  	fcall	_Motor_Forward_Start
  1042                           
  1043                           ;Source/main.c: 43:                 Motor_Forward_Start(Motor_4);
  1044  00EF  30A6               	movlw	(low (_Motor_4| 0))& (0+255)
  1045  00F0  120A  118A  2789  120A  118A  	fcall	_Motor_Forward_Start
  1046                           
  1047                           ;Source/main.c: 44:                 moto = 0;
  1048  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  1049  00F6  01C5               	clrf	main@moto
  1050  00F7                     l1722:
  1051                           
  1052                           ;Source/main.c: 47:         if(timeSysTick % 30000 == 0)
  1053  00F7  3000               	movlw	0
  1054  00F8  00F5               	movwf	___llmod@divisor+3
  1055  00F9  3000               	movlw	0
  1056  00FA  00F4               	movwf	___llmod@divisor+2
  1057  00FB  3075               	movlw	117
  1058  00FC  00F3               	movwf	___llmod@divisor+1
  1059  00FD  3030               	movlw	48
  1060  00FE  00F2               	movwf	___llmod@divisor
  1061  00FF  086D               	movf	_timeSysTick+3,w	;volatile
  1062  0100  00F9               	movwf	___llmod@dividend+3
  1063  0101  086C               	movf	_timeSysTick+2,w	;volatile
  1064  0102  00F8               	movwf	___llmod@dividend+2
  1065  0103  086B               	movf	_timeSysTick+1,w	;volatile
  1066  0104  00F7               	movwf	___llmod@dividend+1
  1067  0105  086A               	movf	_timeSysTick,w	;volatile
  1068  0106  00F6               	movwf	___llmod@dividend
  1069  0107  120A  118A  26C7  120A  118A  	fcall	___llmod
  1070  010C  0875               	movf	?___llmod+3,w
  1071  010D  0474               	iorwf	?___llmod+2,w
  1072  010E  0473               	iorwf	?___llmod+1,w
  1073  010F  0472               	iorwf	?___llmod,w
  1074  0110  1D03               	skipz
  1075  0111  291A               	goto	l1726
  1076                           
  1077                           ;Source/main.c: 48:         {;Source/main.c: 50:             systick_flag = timeSysTick;
  1078  0112  086D               	movf	_timeSysTick+3,w	;volatile
  1079  0113  00C4               	movwf	main@systick_flag+3
  1080  0114  086C               	movf	_timeSysTick+2,w	;volatile
  1081  0115  00C3               	movwf	main@systick_flag+2
  1082  0116  086B               	movf	_timeSysTick+1,w	;volatile
  1083  0117  00C2               	movwf	main@systick_flag+1
  1084  0118  086A               	movf	_timeSysTick,w	;volatile
  1085  0119  00C1               	movwf	main@systick_flag
  1086  011A                     l1726:
  1087                           
  1088                           ;Source/main.c: 52:         if(timeSysTick % 5000 <= 100)
  1089  011A  3000               	movlw	0
  1090  011B  00F5               	movwf	___llmod@divisor+3
  1091  011C  3000               	movlw	0
  1092  011D  00F4               	movwf	___llmod@divisor+2
  1093  011E  3013               	movlw	19
  1094  011F  00F3               	movwf	___llmod@divisor+1
  1095  0120  3088               	movlw	136
  1096  0121  00F2               	movwf	___llmod@divisor
  1097  0122  086D               	movf	_timeSysTick+3,w	;volatile
  1098  0123  00F9               	movwf	___llmod@dividend+3
  1099  0124  086C               	movf	_timeSysTick+2,w	;volatile
  1100  0125  00F8               	movwf	___llmod@dividend+2
  1101  0126  086B               	movf	_timeSysTick+1,w	;volatile
  1102  0127  00F7               	movwf	___llmod@dividend+1
  1103  0128  086A               	movf	_timeSysTick,w	;volatile
  1104  0129  00F6               	movwf	___llmod@dividend
  1105  012A  120A  118A  26C7  120A  118A  	fcall	___llmod
  1106  012F  0875               	movf	?___llmod+3,w
  1107  0130  1D03               	btfss	3,2
  1108  0131  29CE               	goto	l1746
  1109  0132  0874               	movf	?___llmod+2,w
  1110  0133  1D03               	btfss	3,2
  1111  0134  29CE               	goto	l1746
  1112  0135  0873               	movf	?___llmod+1,w
  1113  0136  1D03               	btfss	3,2
  1114  0137  29CE               	goto	l1746
  1115  0138  3065               	movlw	101
  1116  0139  0272               	subwf	?___llmod,w
  1117  013A  1D03               	skipz
  1118  013B  293C               	goto	u1443
  1119  013C                     u1443:
  1120  013C  1803               	btfsc	3,0
  1121  013D  29CE               	goto	l1746
  1122                           
  1123                           ;Source/main.c: 53:         {;Source/main.c: 54:             systick_flag = timeSysTick;
  1124  013E  1283               	bcf	3,5	;RP0=0, select bank0
  1125  013F  1303               	bcf	3,6	;RP1=0, select bank0
  1126  0140  086D               	movf	_timeSysTick+3,w	;volatile
  1127  0141  00C4               	movwf	main@systick_flag+3
  1128  0142  086C               	movf	_timeSysTick+2,w	;volatile
  1129  0143  00C3               	movwf	main@systick_flag+2
  1130  0144  086B               	movf	_timeSysTick+1,w	;volatile
  1131  0145  00C2               	movwf	main@systick_flag+1
  1132  0146  086A               	movf	_timeSysTick,w	;volatile
  1133  0147  00C1               	movwf	main@systick_flag
  1134                           
  1135                           ;Source/main.c: 55:             d = UltraSonicSensor_Read(UltraSonic_2, &timeSysTick);
  1136  0148  306A               	movlw	(low (_timeSysTick| 0))& (0+255)
  1137  0149  00B3               	movwf	??_main
  1138  014A  0833               	movf	??_main,w
  1139  014B  00F8               	movwf	UltraSonicSensor_Read@system_tick
  1140  014C  3062               	movlw	(low (_UltraSonic_2| 0))& (0+255)
  1141  014D  120A  118A  2310  120A  118A  	fcall	_UltraSonicSensor_Read
  1142  0152  087B               	movf	?_UltraSonicSensor_Read+3,w
  1143  0153  00C9               	movwf	main@d+3
  1144  0154  087A               	movf	?_UltraSonicSensor_Read+2,w
  1145  0155  00C8               	movwf	main@d+2
  1146  0156  0879               	movf	?_UltraSonicSensor_Read+1,w
  1147  0157  00C7               	movwf	main@d+1
  1148  0158  0878               	movf	?_UltraSonicSensor_Read,w
  1149  0159  00C6               	movwf	main@d
  1150                           
  1151                           ;Source/main.c: 56:             d = d * 2;
  1152  015A  0846               	movf	main@d,w
  1153  015B  00B3               	movwf	??_main
  1154  015C  0847               	movf	main@d+1,w
  1155  015D  00B4               	movwf	??_main+1
  1156  015E  0848               	movf	main@d+2,w
  1157  015F  00B5               	movwf	??_main+2
  1158  0160  0849               	movf	main@d+3,w
  1159  0161  00B6               	movwf	??_main+3
  1160  0162  3001               	movlw	1
  1161  0163                     u1455:
  1162  0163  1003               	clrc
  1163  0164  0DB3               	rlf	??_main,f
  1164  0165  0DB4               	rlf	??_main+1,f
  1165  0166  0DB5               	rlf	??_main+2,f
  1166  0167  0DB6               	rlf	??_main+3,f
  1167  0168  3EFF               	addlw	-1
  1168  0169  1D03               	skipz
  1169  016A  2963               	goto	u1455
  1170  016B  0836               	movf	??_main+3,w
  1171  016C  00C9               	movwf	main@d+3
  1172  016D  0835               	movf	??_main+2,w
  1173  016E  00C8               	movwf	main@d+2
  1174  016F  0834               	movf	??_main+1,w
  1175  0170  00C7               	movwf	main@d+1
  1176  0171  0833               	movf	??_main,w
  1177  0172  00C6               	movwf	main@d
  1178                           
  1179                           ;Source/main.c: 57:             if(d != 0)
  1180  0173  0849               	movf	main@d+3,w
  1181  0174  0448               	iorwf	main@d+2,w
  1182  0175  0447               	iorwf	main@d+1,w
  1183  0176  0446               	iorwf	main@d,w
  1184  0177  1903               	skipnz
  1185  0178  29C0               	goto	l1744
  1186                           
  1187                           ;Source/main.c: 58:             {;Source/main.c: 59:                 sprintf(TX_Str, "D:
      +                          %dcm\n\0", d);
  1188  0179  3017               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1189  017A  00B3               	movwf	??_main
  1190  017B  0833               	movf	??_main,w
  1191  017C  00A4               	movwf	sprintf@f
  1192  017D  0849               	movf	main@d+3,w
  1193  017E  00A8               	movwf	?_sprintf+4
  1194  017F  0848               	movf	main@d+2,w
  1195  0180  00A7               	movwf	?_sprintf+3
  1196  0181  0847               	movf	main@d+1,w
  1197  0182  00A6               	movwf	?_sprintf+2
  1198  0183  0846               	movf	main@d,w
  1199  0184  00A5               	movwf	?_sprintf+1
  1200  0185  3037               	movlw	(low (main@TX_Str| 0))& (0+255)
  1201  0186  120A  118A  240E  120A  118A  	fcall	_sprintf
  1202                           
  1203                           ;Source/main.c: 60:                 UART_Writes(TX_Str, strlen(TX_Str));
  1204  018B  3037               	movlw	(low (main@TX_Str| 0))& (0+255)
  1205  018C  00F6               	movwf	UART_Writes@data
  1206  018D  3000               	movlw	0
  1207  018E  00F7               	movwf	UART_Writes@data+1
  1208  018F  3037               	movlw	(low (main@TX_Str| 0))& (0+255)
  1209  0190  00F2               	movwf	strlen@s
  1210  0191  3000               	movlw	0
  1211  0192  00F3               	movwf	strlen@s+1
  1212  0193  120A  158A  274F  120A  118A  	fcall	_strlen
  1213  0198  0872               	movf	?_strlen,w
  1214  0199  00B3               	movwf	??_main
  1215  019A  0833               	movf	??_main,w
  1216  019B  00F8               	movwf	UART_Writes@len
  1217  019C  120A  158A  2714  120A  118A  	fcall	_UART_Writes
  1218                           
  1219                           ;Source/main.c: 61:                 if(d < 80)
  1220  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1221  01A2  0849               	movf	main@d+3,w
  1222  01A3  1D03               	btfss	3,2
  1223  01A4  29BE               	goto	l1742
  1224  01A5  0848               	movf	main@d+2,w
  1225  01A6  1D03               	btfss	3,2
  1226  01A7  29BE               	goto	l1742
  1227  01A8  0847               	movf	main@d+1,w
  1228  01A9  1D03               	btfss	3,2
  1229  01AA  29BE               	goto	l1742
  1230  01AB  3050               	movlw	80
  1231  01AC  0246               	subwf	main@d,w
  1232  01AD  1D03               	skipz
  1233  01AE  29AF               	goto	u1473
  1234  01AF                     u1473:
  1235  01AF  1803               	btfsc	3,0
  1236  01B0  29BE               	goto	l1742
  1237                           
  1238                           ;Source/main.c: 62:                 {;Source/main.c: 63:                     GPIO_Write(
      +                          LED1.Port, LED1.Pin, 1);
  1239  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  1240  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  1241  01B3  085F               	movf	_LED1,w
  1242  01B4  00F2               	movwf	GPIO_Write@GPIO_Port
  1243  01B5  0860               	movf	_LED1+1,w
  1244  01B6  00F3               	movwf	GPIO_Write@GPIO_Port+1
  1245  01B7  0861               	movf	_LED1+2,w
  1246  01B8  00B3               	movwf	??_main
  1247  01B9  0833               	movf	??_main,w
  1248  01BA  00F4               	movwf	GPIO_Write@Pin
  1249  01BB  01F5               	clrf	GPIO_Write@GPIO_State
  1250  01BC  0AF5               	incf	GPIO_Write@GPIO_State,f
  1251  01BD  29C9               	goto	L1
  1252  01BE                     l1742:	
  1253                           ;Source/main.c: 64:                 }
  1254                           
  1255                           
  1256                           ;Source/main.c: 66:                 {;Source/main.c: 67:                     GPIO_Write(
      +                          LED1.Port, LED1.Pin, 0);
  1257  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  1258  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  1259  01C0                     l1744:
  1260                           
  1261                           ;Source/main.c: 71:             {;Source/main.c: 72:                 GPIO_Write(LED1.Por
      +                          t, LED1.Pin, 0);
  1262  01C0  085F               	movf	_LED1,w
  1263  01C1  00F2               	movwf	GPIO_Write@GPIO_Port
  1264  01C2  0860               	movf	_LED1+1,w
  1265  01C3  00F3               	movwf	GPIO_Write@GPIO_Port+1
  1266  01C4  0861               	movf	_LED1+2,w
  1267  01C5  00B3               	movwf	??_main
  1268  01C6  0833               	movf	??_main,w
  1269  01C7  00F4               	movwf	GPIO_Write@Pin
  1270  01C8  01F5               	clrf	GPIO_Write@GPIO_State
  1271  01C9                     L1:
  1272  01C9  120A  118A  24E2  120A  118A  	fcall	_GPIO_Write
  1273  01CE                     l1746:
  1274  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  1275  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  1276  01D0  086D               	movf	_timeSysTick+3,w	;volatile
  1277  01D1  0644               	xorwf	main@systick_flag+3,w
  1278  01D2  1D03               	skipz
  1279  01D3  29DE               	goto	u1485
  1280  01D4  086C               	movf	_timeSysTick+2,w	;volatile
  1281  01D5  0643               	xorwf	main@systick_flag+2,w
  1282  01D6  1D03               	skipz
  1283  01D7  29DE               	goto	u1485
  1284  01D8  086B               	movf	_timeSysTick+1,w	;volatile
  1285  01D9  0642               	xorwf	main@systick_flag+1,w
  1286  01DA  1D03               	skipz
  1287  01DB  29DE               	goto	u1485
  1288  01DC  086A               	movf	_timeSysTick,w	;volatile
  1289  01DD  0641               	xorwf	main@systick_flag,w
  1290  01DE                     u1485:
  1291  01DE  1903               	skipnz
  1292  01DF  29CE               	goto	l1746
  1293                           
  1294                           ;Source/main.c: 84:         timeReset_flag = 0;
  1295  01E0  01E8               	clrf	_timeReset_flag
  1296  01E1  01E9               	clrf	_timeReset_flag+1
  1297  01E2  286C               	goto	l1700
  1298  01E3                     __end_of_main:
  1299                           
  1300                           	psect	text1
  1301  0F4F                     __ptext1:	
  1302 ;; *************** function _strlen *****************
  1303 ;; Defined at:
  1304 ;;		line 4 in file "E:\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\strlen.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;  s               2    2[COMMON] PTR const unsigned char 
  1307 ;;		 -> main@TX_Str(10), STR_2(12), 
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;  cp              2    4[COMMON] PTR const unsigned char 
  1310 ;;		 -> main@TX_Str(10), STR_2(12), 
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  2    2[COMMON] unsigned int 
  1313 ;; Registers used:
  1314 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1315 ;; Tracked objects:
  1316 ;;		On entry : 200/100
  1317 ;;		On exit  : 300/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1320 ;;      Params:         2       0       0       0       0
  1321 ;;      Locals:         2       0       0       0       0
  1322 ;;      Temps:          0       0       0       0       0
  1323 ;;      Totals:         4       0       0       0       0
  1324 ;;Total ram usage:        4 bytes
  1325 ;; Hardware stack levels used: 2
  1326 ;; Hardware stack levels required when called: 1
  1327 ;; This function calls:
  1328 ;;		Nothing
  1329 ;; This function is called by:
  1330 ;;		_main
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334  0F4F                     _strlen:	
  1335                           ;psect for function _strlen
  1336                           
  1337                           
  1338                           ;incstack = 0
  1339                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1340  0F4F  0872               	movf	strlen@s,w
  1341  0F50  00F4               	movwf	strlen@cp
  1342  0F51  0873               	movf	strlen@s+1,w
  1343  0F52  00F5               	movwf	strlen@cp+1
  1344  0F53                     l1590:
  1345  0F53  0875               	movf	strlen@cp+1,w
  1346  0F54  1283               	bcf	3,5	;RP0=0, select bank0
  1347  0F55  00FF               	movwf	127
  1348  0F56  0874               	movf	strlen@cp,w
  1349  0F57  0084               	movwf	4
  1350  0F58  120A  158A  2000  120A  158A  	fcall	stringtab
  1351  0F5D  3A00               	xorlw	0
  1352  0F5E  1903               	btfsc	3,2
  1353  0F5F  2F67               	goto	l1592
  1354  0F60  3001               	movlw	1
  1355  0F61  07F4               	addwf	strlen@cp,f
  1356  0F62  1803               	skipnc
  1357  0F63  0AF5               	incf	strlen@cp+1,f
  1358  0F64  3000               	movlw	0
  1359  0F65  07F5               	addwf	strlen@cp+1,f
  1360  0F66  2F53               	goto	l1590
  1361  0F67                     l1592:
  1362  0F67  0872               	movf	strlen@s,w
  1363  0F68  0274               	subwf	strlen@cp,w
  1364  0F69  00F2               	movwf	?_strlen
  1365  0F6A  0873               	movf	strlen@s+1,w
  1366  0F6B  1C03               	skipc
  1367  0F6C  0A73               	incf	strlen@s+1,w
  1368  0F6D  0275               	subwf	strlen@cp+1,w
  1369  0F6E  00F3               	movwf	?_strlen+1
  1370  0F6F  0008               	return
  1371  0F70                     __end_of_strlen:
  1372                           
  1373                           	psect	text2
  1374  040E                     __ptext2:	
  1375 ;; *************** function _sprintf *****************
  1376 ;; Defined at:
  1377 ;;		line 505 in file "E:\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;  sp              1    wreg     PTR unsigned char 
  1380 ;;		 -> main@TX_Str(10), 
  1381 ;;  f               1    4[BANK0 ] PTR const unsigned char 
  1382 ;;		 -> STR_3(9), 
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;  sp              1   17[BANK0 ] PTR unsigned char 
  1385 ;;		 -> main@TX_Str(10), 
  1386 ;;  tmpval          4    0        struct .
  1387 ;;  val             2   15[BANK0 ] unsigned int 
  1388 ;;  cp              2    0        PTR const unsigned char 
  1389 ;;  len             2    0        unsigned int 
  1390 ;;  c               1   18[BANK0 ] unsigned char 
  1391 ;;  prec            1   14[BANK0 ] char 
  1392 ;;  flag            1   13[BANK0 ] unsigned char 
  1393 ;;  ap              1   12[BANK0 ] PTR void [1]
  1394 ;;		 -> ?_sprintf(2), 
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  2    4[BANK0 ] int 
  1397 ;; Registers used:
  1398 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1399 ;; Tracked objects:
  1400 ;;		On entry : 300/0
  1401 ;;		On exit  : B00/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1404 ;;      Params:         0       5       0       0       0
  1405 ;;      Locals:         0       7       0       0       0
  1406 ;;      Temps:          0       3       0       0       0
  1407 ;;      Totals:         0      15       0       0       0
  1408 ;;Total ram usage:       15 bytes
  1409 ;; Hardware stack levels used: 1
  1410 ;; Hardware stack levels required when called: 2
  1411 ;; This function calls:
  1412 ;;		___lwdiv
  1413 ;;		___lwmod
  1414 ;; This function is called by:
  1415 ;;		_main
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           
  1419  040E                     _sprintf:	
  1420                           ;psect for function _sprintf
  1421                           
  1422                           
  1423                           ;incstack = 0
  1424                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1425                           ;sprintf@sp stored from wreg
  1426  040E  00B1               	movwf	sprintf@sp
  1427                           
  1428                           ;E:\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);E:\Program Files (x86)\Microchip\xc8\v2.36\pic\sources
      +                          \c90\common\doprnt.c: 506: {;E:\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;E:\Program Files (x86)\Microchip\xc8\v2.36\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;E:\Program Files (x86)\Microchip\xc8\v2.36\pic\sour
      +                          ces\c90\common\doprnt.c: 521:  signed char prec;;E:\Program Files (x86)\Microchip\xc8\v2
      +                          .36\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;
  1429  040F  3025               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1430  0410  00A9               	movwf	??_sprintf
  1431  0411  0829               	movf	??_sprintf,w
  1432  0412  00AC               	movwf	sprintf@ap
  1433  0413                     l1648:	
  1434                           ;E:\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  1435                           
  1436                           
  1437                           ;E:\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  1438  0413  3001               	movlw	1
  1439  0414  07A4               	addwf	sprintf@f,f
  1440  0415  30FF               	movlw	-1
  1441  0416  0724               	addwf	sprintf@f,w
  1442  0417  0084               	movwf	4
  1443  0418  120A  158A  200A  120A  118A  	fcall	stringdir
  1444  041D  00A9               	movwf	??_sprintf
  1445  041E  0829               	movf	??_sprintf,w
  1446  041F  00B2               	movwf	sprintf@c
  1447  0420  0832               	movf	sprintf@c,w
  1448  0421  1903               	btfsc	3,2
  1449  0422  2CDD               	goto	l1650
  1450                           
  1451                           ;E:\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  1452  0423  3025               	movlw	37
  1453  0424  0632               	xorwf	sprintf@c,w
  1454  0425  1903               	btfsc	3,2
  1455  0426  2C33               	goto	l1604
  1456                           
  1457                           ;E:\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 557:   {;E:
      +                          \Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  1458  0427  0832               	movf	sprintf@c,w
  1459  0428  00A9               	movwf	??_sprintf
  1460  0429  0831               	movf	sprintf@sp,w
  1461  042A  0084               	movwf	4
  1462  042B  0829               	movf	??_sprintf,w
  1463  042C  1383               	bcf	3,7	;select IRP bank0
  1464  042D  0080               	movwf	0
  1465  042E  3001               	movlw	1
  1466  042F  00A9               	movwf	??_sprintf
  1467  0430  0829               	movf	??_sprintf,w
  1468  0431  07B1               	addwf	sprintf@sp,f
  1469                           
  1470                           ;E:\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  1471  0432  2C13               	goto	l1648
  1472  0433                     l1604:
  1473                           
  1474                           ;E:\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  1475  0433  01AD               	clrf	sprintf@flag
  1476                           
  1477                           ;E:\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 661:   swit
      +                          ch(c = *f++) {
  1478  0434  3001               	movlw	1
  1479  0435  07A4               	addwf	sprintf@f,f
  1480  0436  30FF               	movlw	-1
  1481  0437  0724               	addwf	sprintf@f,w
  1482  0438  0084               	movwf	4
  1483  0439  120A  158A  200A  120A  118A  	fcall	stringdir
  1484  043E  00B2               	movwf	sprintf@c
  1485  043F  00A9               	movwf	??_sprintf
  1486  0440  01AA               	clrf	??_sprintf+1
  1487                           
  1488                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1489                           ; Switch size 1, requested type "simple"
  1490                           ; Number of cases is 1, Range of values is 0 to 0
  1491                           ; switch strategies available:
  1492                           ; Name         Instructions Cycles
  1493                           ; simple_byte            4     3 (average)
  1494                           ; direct_byte           11     8 (fixed)
  1495                           ; jumptable            260     6 (fixed)
  1496                           ;	Chosen strategy is simple_byte
  1497  0441  082A               	movf	??_sprintf+1,w
  1498  0442  3A00               	xorlw	0	; case 0
  1499  0443  1903               	skipnz
  1500  0444  2C46               	goto	l1800
  1501  0445  2C13               	goto	l1648
  1502  0446                     l1800:
  1503                           
  1504                           ; Switch size 1, requested type "simple"
  1505                           ; Number of cases is 3, Range of values is 0 to 105
  1506                           ; switch strategies available:
  1507                           ; Name         Instructions Cycles
  1508                           ; simple_byte           10     6 (average)
  1509                           ; jumptable            260     6 (fixed)
  1510                           ;	Chosen strategy is simple_byte
  1511  0446  0829               	movf	??_sprintf,w
  1512  0447  3A00               	xorlw	0	; case 0
  1513  0448  1903               	skipnz
  1514  0449  2CDD               	goto	l1650
  1515  044A  3A64               	xorlw	100	; case 100
  1516  044B  1903               	skipnz
  1517  044C  2C51               	goto	l1610
  1518  044D  3A0D               	xorlw	13	; case 105
  1519  044E  1903               	skipnz
  1520  044F  2C51               	goto	l1610
  1521  0450  2C13               	goto	l1648
  1522  0451                     l1610:
  1523                           
  1524                           ;E:\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1279:   {;E
      +                          :\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1285:     val
      +                           = (unsigned int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1525  0451  082C               	movf	sprintf@ap,w
  1526  0452  0084               	movwf	4
  1527  0453  1383               	bcf	3,7	;select IRP bank0
  1528  0454  0800               	movf	0,w
  1529  0455  00AF               	movwf	sprintf@val
  1530  0456  0A84               	incf	4,f
  1531  0457  0800               	movf	0,w
  1532  0458  00B0               	movwf	sprintf@val+1
  1533  0459  3002               	movlw	2
  1534  045A  00A9               	movwf	??_sprintf
  1535  045B  0829               	movf	??_sprintf,w
  1536  045C  07AC               	addwf	sprintf@ap,f
  1537                           
  1538                           ;E:\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1287:    if
      +                          ((int)val < 0) {
  1539  045D  1FB0               	btfss	sprintf@val+1,7
  1540  045E  2C68               	goto	l1620
  1541                           
  1542                           ;E:\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1288:     f
      +                          lag |= 0x03;
  1543  045F  3003               	movlw	3
  1544  0460  00A9               	movwf	??_sprintf
  1545  0461  0829               	movf	??_sprintf,w
  1546  0462  04AD               	iorwf	sprintf@flag,f
  1547                           
  1548                           ;E:\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1289:     v
      +                          al = -val;
  1549  0463  09AF               	comf	sprintf@val,f
  1550  0464  09B0               	comf	sprintf@val+1,f
  1551  0465  0AAF               	incf	sprintf@val,f
  1552  0466  1903               	skipnz
  1553  0467  0AB0               	incf	sprintf@val+1,f
  1554  0468                     l1620:
  1555                           
  1556                           ;E:\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1292:   };E
      +                          :\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1331:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1557  0468  01B2               	clrf	sprintf@c
  1558  0469  0AB2               	incf	sprintf@c,f
  1559  046A                     l1626:
  1560                           
  1561                           ;E:\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1332:     i
      +                          f(val < dpowers[c])
  1562  046A  0832               	movf	sprintf@c,w
  1563  046B  00A9               	movwf	??_sprintf
  1564  046C  0729               	addwf	??_sprintf,w
  1565  046D  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1566  046E  0084               	movwf	4
  1567  046F  120A  158A  200A  120A  118A  	fcall	stringdir
  1568  0474  00AA               	movwf	??_sprintf+1
  1569  0475  120A  158A  200A  120A  118A  	fcall	stringdir
  1570  047A  00AB               	movwf	??_sprintf+2
  1571  047B  082B               	movf	??_sprintf+2,w
  1572  047C  0230               	subwf	sprintf@val+1,w
  1573  047D  1D03               	skipz
  1574  047E  2C81               	goto	u1235
  1575  047F  082A               	movf	??_sprintf+1,w
  1576  0480  022F               	subwf	sprintf@val,w
  1577  0481                     u1235:
  1578  0481  1C03               	btfss	3,0
  1579  0482  2C8B               	goto	l1632
  1580  0483  3001               	movlw	1
  1581  0484  00A9               	movwf	??_sprintf
  1582  0485  0829               	movf	??_sprintf,w
  1583  0486  07B2               	addwf	sprintf@c,f
  1584  0487  3005               	movlw	5
  1585  0488  0632               	xorwf	sprintf@c,w
  1586  0489  1D03               	btfss	3,2
  1587  048A  2C6A               	goto	l1626
  1588  048B                     l1632:
  1589                           
  1590                           ;E:\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1448:   {;E
      +                          :\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1464:    if(f
      +                          lag & 0x03)
  1591  048B  082D               	movf	sprintf@flag,w
  1592  048C  3903               	andlw	3
  1593  048D  1903               	btfsc	3,2
  1594  048E  2C9A               	goto	l1638
  1595                           
  1596                           ;E:\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  1597  048F  302D               	movlw	45
  1598  0490  00A9               	movwf	??_sprintf
  1599  0491  0831               	movf	sprintf@sp,w
  1600  0492  0084               	movwf	4
  1601  0493  0829               	movf	??_sprintf,w
  1602  0494  1383               	bcf	3,7	;select IRP bank0
  1603  0495  0080               	movwf	0
  1604  0496  3001               	movlw	1
  1605  0497  00A9               	movwf	??_sprintf
  1606  0498  0829               	movf	??_sprintf,w
  1607  0499  07B1               	addwf	sprintf@sp,f
  1608  049A                     l1638:
  1609                           
  1610                           ;E:\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1495:   };E
      +                          :\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1498:   prec 
      +                          = c;
  1611  049A  0832               	movf	sprintf@c,w
  1612  049B  00A9               	movwf	??_sprintf
  1613  049C  0829               	movf	??_sprintf,w
  1614  049D  00AE               	movwf	sprintf@prec
  1615  049E                     l1646:	
  1616                           ;E:\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  1617                           
  1618                           
  1619                           ;E:\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  1620  049E  30FF               	movlw	255
  1621  049F  00A9               	movwf	??_sprintf
  1622  04A0  0829               	movf	??_sprintf,w
  1623  04A1  07AE               	addwf	sprintf@prec,f
  1624  04A2  0A2E               	incf	sprintf@prec,w
  1625  04A3  1903               	btfsc	3,2
  1626  04A4  2C13               	goto	l1648
  1627                           
  1628                           ;E:\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1504:    {;
      +                          E:\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1515:     c 
      +                          = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  1629  04A5  300A               	movlw	10
  1630  04A6  00A0               	movwf	___lwmod@divisor
  1631  04A7  3000               	movlw	0
  1632  04A8  00A1               	movwf	___lwmod@divisor+1
  1633  04A9  082E               	movf	sprintf@prec,w
  1634  04AA  00A9               	movwf	??_sprintf
  1635  04AB  0729               	addwf	??_sprintf,w
  1636  04AC  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1637  04AD  0084               	movwf	4
  1638  04AE  120A  158A  200A  120A  118A  	fcall	stringdir
  1639  04B3  00F2               	movwf	___lwdiv@divisor
  1640  04B4  120A  158A  200A  120A  118A  	fcall	stringdir
  1641  04B9  00F3               	movwf	___lwdiv@divisor+1
  1642  04BA  0830               	movf	sprintf@val+1,w
  1643  04BB  00F5               	movwf	___lwdiv@dividend+1
  1644  04BC  082F               	movf	sprintf@val,w
  1645  04BD  00F4               	movwf	___lwdiv@dividend
  1646  04BE  120A  118A  2713  120A  118A  	fcall	___lwdiv
  1647  04C3  0873               	movf	?___lwdiv+1,w
  1648  04C4  00A3               	movwf	___lwmod@dividend+1
  1649  04C5  0872               	movf	?___lwdiv,w
  1650  04C6  00A2               	movwf	___lwmod@dividend
  1651  04C7  120A  158A  27CE  120A  118A  	fcall	___lwmod
  1652  04CC  0820               	movf	?___lwmod,w
  1653  04CD  3E30               	addlw	48
  1654  04CE  00AA               	movwf	??_sprintf+1
  1655  04CF  082A               	movf	??_sprintf+1,w
  1656  04D0  00B2               	movwf	sprintf@c
  1657                           
  1658                           ;E:\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1549:    };
      +                          E:\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1550:    ((*
      +                          sp++ = (c)));
  1659  04D1  0832               	movf	sprintf@c,w
  1660  04D2  00A9               	movwf	??_sprintf
  1661  04D3  0831               	movf	sprintf@sp,w
  1662  04D4  0084               	movwf	4
  1663  04D5  0829               	movf	??_sprintf,w
  1664  04D6  1383               	bcf	3,7	;select IRP bank0
  1665  04D7  0080               	movwf	0
  1666  04D8  3001               	movlw	1
  1667  04D9  00A9               	movwf	??_sprintf
  1668  04DA  0829               	movf	??_sprintf,w
  1669  04DB  07B1               	addwf	sprintf@sp,f
  1670  04DC  2C9E               	goto	l1646
  1671  04DD                     l1650:
  1672                           
  1673                           ;E:\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  1674  04DD  0831               	movf	sprintf@sp,w
  1675  04DE  0084               	movwf	4
  1676  04DF  1383               	bcf	3,7	;select IRP bank0
  1677  04E0  0180               	clrf	0
  1678  04E1  0008               	return
  1679  04E2                     __end_of_sprintf:
  1680                           
  1681                           	psect	text3
  1682  0FCE                     __ptext3:	
  1683 ;; *************** function ___lwmod *****************
  1684 ;; Defined at:
  1685 ;;		line 5 in file "E:\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;  divisor         2    0[BANK0 ] unsigned int 
  1688 ;;  dividend        2    2[BANK0 ] unsigned int 
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;  counter         1   11[COMMON] unsigned char 
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  2    0[BANK0 ] unsigned int 
  1693 ;; Registers used:
  1694 ;;		wreg, status,2, status,0
  1695 ;; Tracked objects:
  1696 ;;		On entry : 300/0
  1697 ;;		On exit  : 300/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1700 ;;      Params:         0       4       0       0       0
  1701 ;;      Locals:         1       0       0       0       0
  1702 ;;      Temps:          1       0       0       0       0
  1703 ;;      Totals:         2       4       0       0       0
  1704 ;;Total ram usage:        6 bytes
  1705 ;; Hardware stack levels used: 1
  1706 ;; Hardware stack levels required when called: 1
  1707 ;; This function calls:
  1708 ;;		Nothing
  1709 ;; This function is called by:
  1710 ;;		_sprintf
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714  0FCE                     ___lwmod:	
  1715                           ;psect for function ___lwmod
  1716                           
  1717                           
  1718                           ;incstack = 0
  1719                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1720  0FCE  0820               	movf	___lwmod@divisor,w
  1721  0FCF  0421               	iorwf	___lwmod@divisor+1,w
  1722  0FD0  1903               	btfsc	3,2
  1723  0FD1  2FFB               	goto	l1508
  1724  0FD2  01FB               	clrf	___lwmod@counter
  1725  0FD3  0AFB               	incf	___lwmod@counter,f
  1726  0FD4                     l1498:
  1727  0FD4  1BA1               	btfsc	___lwmod@divisor+1,7
  1728  0FD5  2FE2               	goto	l1500
  1729  0FD6  3001               	movlw	1
  1730  0FD7                     u1095:
  1731  0FD7  1003               	clrc
  1732  0FD8  0DA0               	rlf	___lwmod@divisor,f
  1733  0FD9  0DA1               	rlf	___lwmod@divisor+1,f
  1734  0FDA  3EFF               	addlw	-1
  1735  0FDB  1D03               	skipz
  1736  0FDC  2FD7               	goto	u1095
  1737  0FDD  3001               	movlw	1
  1738  0FDE  00FA               	movwf	??___lwmod
  1739  0FDF  087A               	movf	??___lwmod,w
  1740  0FE0  07FB               	addwf	___lwmod@counter,f
  1741  0FE1  2FD4               	goto	l1498
  1742  0FE2                     l1500:
  1743  0FE2  0821               	movf	___lwmod@divisor+1,w
  1744  0FE3  0223               	subwf	___lwmod@dividend+1,w
  1745  0FE4  1D03               	skipz
  1746  0FE5  2FE8               	goto	u1115
  1747  0FE6  0820               	movf	___lwmod@divisor,w
  1748  0FE7  0222               	subwf	___lwmod@dividend,w
  1749  0FE8                     u1115:
  1750  0FE8  1C03               	skipc
  1751  0FE9  2FF0               	goto	l1504
  1752  0FEA  0820               	movf	___lwmod@divisor,w
  1753  0FEB  02A2               	subwf	___lwmod@dividend,f
  1754  0FEC  0821               	movf	___lwmod@divisor+1,w
  1755  0FED  1C03               	skipc
  1756  0FEE  03A3               	decf	___lwmod@dividend+1,f
  1757  0FEF  02A3               	subwf	___lwmod@dividend+1,f
  1758  0FF0                     l1504:
  1759  0FF0  3001               	movlw	1
  1760  0FF1                     u1125:
  1761  0FF1  1003               	clrc
  1762  0FF2  0CA1               	rrf	___lwmod@divisor+1,f
  1763  0FF3  0CA0               	rrf	___lwmod@divisor,f
  1764  0FF4  3EFF               	addlw	-1
  1765  0FF5  1D03               	skipz
  1766  0FF6  2FF1               	goto	u1125
  1767  0FF7  3001               	movlw	1
  1768  0FF8  02FB               	subwf	___lwmod@counter,f
  1769  0FF9  1D03               	btfss	3,2
  1770  0FFA  2FE2               	goto	l1500
  1771  0FFB                     l1508:
  1772  0FFB  0823               	movf	___lwmod@dividend+1,w
  1773  0FFC  00A1               	movwf	?___lwmod+1
  1774  0FFD  0822               	movf	___lwmod@dividend,w
  1775  0FFE  00A0               	movwf	?___lwmod
  1776  0FFF  0008               	return
  1777  1000                     __end_of___lwmod:
  1778                           
  1779                           	psect	text4
  1780  0713                     __ptext4:	
  1781 ;; *************** function ___lwdiv *****************
  1782 ;; Defined at:
  1783 ;;		line 5 in file "E:\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\lwdiv.c"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;  divisor         2    2[COMMON] unsigned int 
  1786 ;;  dividend        2    4[COMMON] unsigned int 
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;  quotient        2    7[COMMON] unsigned int 
  1789 ;;  counter         1    9[COMMON] unsigned char 
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  2    2[COMMON] unsigned int 
  1792 ;; Registers used:
  1793 ;;		wreg, status,2, status,0
  1794 ;; Tracked objects:
  1795 ;;		On entry : 300/0
  1796 ;;		On exit  : 300/0
  1797 ;;		Unchanged: 300/0
  1798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1799 ;;      Params:         4       0       0       0       0
  1800 ;;      Locals:         3       0       0       0       0
  1801 ;;      Temps:          1       0       0       0       0
  1802 ;;      Totals:         8       0       0       0       0
  1803 ;;Total ram usage:        8 bytes
  1804 ;; Hardware stack levels used: 1
  1805 ;; Hardware stack levels required when called: 1
  1806 ;; This function calls:
  1807 ;;		Nothing
  1808 ;; This function is called by:
  1809 ;;		_sprintf
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813  0713                     ___lwdiv:	
  1814                           ;psect for function ___lwdiv
  1815                           
  1816                           
  1817                           ;incstack = 0
  1818                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1819  0713  01F7               	clrf	___lwdiv@quotient
  1820  0714  01F8               	clrf	___lwdiv@quotient+1
  1821  0715  0872               	movf	___lwdiv@divisor,w
  1822  0716  0473               	iorwf	___lwdiv@divisor+1,w
  1823  0717  1903               	btfsc	3,2
  1824  0718  2F4A               	goto	l1486
  1825  0719  01F9               	clrf	___lwdiv@counter
  1826  071A  0AF9               	incf	___lwdiv@counter,f
  1827  071B                     l1474:
  1828  071B  1BF3               	btfsc	___lwdiv@divisor+1,7
  1829  071C  2F29               	goto	l1476
  1830  071D  3001               	movlw	1
  1831  071E                     u1025:
  1832  071E  1003               	clrc
  1833  071F  0DF2               	rlf	___lwdiv@divisor,f
  1834  0720  0DF3               	rlf	___lwdiv@divisor+1,f
  1835  0721  3EFF               	addlw	-1
  1836  0722  1D03               	skipz
  1837  0723  2F1E               	goto	u1025
  1838  0724  3001               	movlw	1
  1839  0725  00F6               	movwf	??___lwdiv
  1840  0726  0876               	movf	??___lwdiv,w
  1841  0727  07F9               	addwf	___lwdiv@counter,f
  1842  0728  2F1B               	goto	l1474
  1843  0729                     l1476:
  1844  0729  3001               	movlw	1
  1845  072A                     u1045:
  1846  072A  1003               	clrc
  1847  072B  0DF7               	rlf	___lwdiv@quotient,f
  1848  072C  0DF8               	rlf	___lwdiv@quotient+1,f
  1849  072D  3EFF               	addlw	-1
  1850  072E  1D03               	skipz
  1851  072F  2F2A               	goto	u1045
  1852  0730  0873               	movf	___lwdiv@divisor+1,w
  1853  0731  0275               	subwf	___lwdiv@dividend+1,w
  1854  0732  1D03               	skipz
  1855  0733  2F36               	goto	u1055
  1856  0734  0872               	movf	___lwdiv@divisor,w
  1857  0735  0274               	subwf	___lwdiv@dividend,w
  1858  0736                     u1055:
  1859  0736  1C03               	skipc
  1860  0737  2F3F               	goto	l1482
  1861  0738  0872               	movf	___lwdiv@divisor,w
  1862  0739  02F4               	subwf	___lwdiv@dividend,f
  1863  073A  0873               	movf	___lwdiv@divisor+1,w
  1864  073B  1C03               	skipc
  1865  073C  03F5               	decf	___lwdiv@dividend+1,f
  1866  073D  02F5               	subwf	___lwdiv@dividend+1,f
  1867  073E  1477               	bsf	___lwdiv@quotient,0
  1868  073F                     l1482:
  1869  073F  3001               	movlw	1
  1870  0740                     u1065:
  1871  0740  1003               	clrc
  1872  0741  0CF3               	rrf	___lwdiv@divisor+1,f
  1873  0742  0CF2               	rrf	___lwdiv@divisor,f
  1874  0743  3EFF               	addlw	-1
  1875  0744  1D03               	skipz
  1876  0745  2F40               	goto	u1065
  1877  0746  3001               	movlw	1
  1878  0747  02F9               	subwf	___lwdiv@counter,f
  1879  0748  1D03               	btfss	3,2
  1880  0749  2F29               	goto	l1476
  1881  074A                     l1486:
  1882  074A  0878               	movf	___lwdiv@quotient+1,w
  1883  074B  00F3               	movwf	?___lwdiv+1
  1884  074C  0877               	movf	___lwdiv@quotient,w
  1885  074D  00F2               	movwf	?___lwdiv
  1886  074E  0008               	return
  1887  074F                     __end_of___lwdiv:
  1888                           
  1889                           	psect	text5
  1890  06C7                     __ptext5:	
  1891 ;; *************** function ___llmod *****************
  1892 ;; Defined at:
  1893 ;;		line 5 in file "E:\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\llmod.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;  divisor         4    2[COMMON] unsigned long 
  1896 ;;  dividend        4    6[COMMON] unsigned long 
  1897 ;; Auto vars:     Size  Location     Type
  1898 ;;  counter         1   11[COMMON] unsigned char 
  1899 ;; Return value:  Size  Location     Type
  1900 ;;                  4    2[COMMON] unsigned long 
  1901 ;; Registers used:
  1902 ;;		wreg, status,2, status,0
  1903 ;; Tracked objects:
  1904 ;;		On entry : 300/0
  1905 ;;		On exit  : 300/0
  1906 ;;		Unchanged: 300/0
  1907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1908 ;;      Params:         8       0       0       0       0
  1909 ;;      Locals:         1       0       0       0       0
  1910 ;;      Temps:          1       0       0       0       0
  1911 ;;      Totals:        10       0       0       0       0
  1912 ;;Total ram usage:       10 bytes
  1913 ;; Hardware stack levels used: 1
  1914 ;; Hardware stack levels required when called: 1
  1915 ;; This function calls:
  1916 ;;		Nothing
  1917 ;; This function is called by:
  1918 ;;		_main
  1919 ;; This function uses a non-reentrant model
  1920 ;;
  1921                           
  1922  06C7                     ___llmod:	
  1923                           ;psect for function ___llmod
  1924                           
  1925                           
  1926                           ;incstack = 0
  1927                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  1928  06C7  0875               	movf	___llmod@divisor+3,w
  1929  06C8  0474               	iorwf	___llmod@divisor+2,w
  1930  06C9  0473               	iorwf	___llmod@divisor+1,w
  1931  06CA  0472               	iorwf	___llmod@divisor,w
  1932  06CB  1903               	skipnz
  1933  06CC  2F0A               	goto	l1674
  1934  06CD  01FB               	clrf	___llmod@counter
  1935  06CE  0AFB               	incf	___llmod@counter,f
  1936  06CF                     l1664:
  1937  06CF  1BF5               	btfsc	___llmod@divisor+3,7
  1938  06D0  2EDF               	goto	l1666
  1939  06D1  3001               	movlw	1
  1940  06D2  00FA               	movwf	??___llmod
  1941  06D3                     u1295:
  1942  06D3  1003               	clrc
  1943  06D4  0DF2               	rlf	___llmod@divisor,f
  1944  06D5  0DF3               	rlf	___llmod@divisor+1,f
  1945  06D6  0DF4               	rlf	___llmod@divisor+2,f
  1946  06D7  0DF5               	rlf	___llmod@divisor+3,f
  1947  06D8  0BFA               	decfsz	??___llmod,f
  1948  06D9  2ED3               	goto	u1295
  1949  06DA  3001               	movlw	1
  1950  06DB  00FA               	movwf	??___llmod
  1951  06DC  087A               	movf	??___llmod,w
  1952  06DD  07FB               	addwf	___llmod@counter,f
  1953  06DE  2ECF               	goto	l1664
  1954  06DF                     l1666:
  1955  06DF  0875               	movf	___llmod@divisor+3,w
  1956  06E0  0279               	subwf	___llmod@dividend+3,w
  1957  06E1  1D03               	skipz
  1958  06E2  2EED               	goto	u1315
  1959  06E3  0874               	movf	___llmod@divisor+2,w
  1960  06E4  0278               	subwf	___llmod@dividend+2,w
  1961  06E5  1D03               	skipz
  1962  06E6  2EED               	goto	u1315
  1963  06E7  0873               	movf	___llmod@divisor+1,w
  1964  06E8  0277               	subwf	___llmod@dividend+1,w
  1965  06E9  1D03               	skipz
  1966  06EA  2EED               	goto	u1315
  1967  06EB  0872               	movf	___llmod@divisor,w
  1968  06EC  0276               	subwf	___llmod@dividend,w
  1969  06ED                     u1315:
  1970  06ED  1C03               	skipc
  1971  06EE  2EFD               	goto	l1670
  1972  06EF  0872               	movf	___llmod@divisor,w
  1973  06F0  02F6               	subwf	___llmod@dividend,f
  1974  06F1  0873               	movf	___llmod@divisor+1,w
  1975  06F2  1C03               	skipc
  1976  06F3  0F73               	incfsz	___llmod@divisor+1,w
  1977  06F4  02F7               	subwf	___llmod@dividend+1,f
  1978  06F5  0874               	movf	___llmod@divisor+2,w
  1979  06F6  1C03               	skipc
  1980  06F7  0F74               	incfsz	___llmod@divisor+2,w
  1981  06F8  02F8               	subwf	___llmod@dividend+2,f
  1982  06F9  0875               	movf	___llmod@divisor+3,w
  1983  06FA  1C03               	skipc
  1984  06FB  0F75               	incfsz	___llmod@divisor+3,w
  1985  06FC  02F9               	subwf	___llmod@dividend+3,f
  1986  06FD                     l1670:
  1987  06FD  3001               	movlw	1
  1988  06FE                     u1325:
  1989  06FE  1003               	clrc
  1990  06FF  0CF5               	rrf	___llmod@divisor+3,f
  1991  0700  0CF4               	rrf	___llmod@divisor+2,f
  1992  0701  0CF3               	rrf	___llmod@divisor+1,f
  1993  0702  0CF2               	rrf	___llmod@divisor,f
  1994  0703  3EFF               	addlw	-1
  1995  0704  1D03               	skipz
  1996  0705  2EFE               	goto	u1325
  1997  0706  3001               	movlw	1
  1998  0707  02FB               	subwf	___llmod@counter,f
  1999  0708  1D03               	btfss	3,2
  2000  0709  2EDF               	goto	l1666
  2001  070A                     l1674:
  2002  070A  0879               	movf	___llmod@dividend+3,w
  2003  070B  00F5               	movwf	?___llmod+3
  2004  070C  0878               	movf	___llmod@dividend+2,w
  2005  070D  00F4               	movwf	?___llmod+2
  2006  070E  0877               	movf	___llmod@dividend+1,w
  2007  070F  00F3               	movwf	?___llmod+1
  2008  0710  0876               	movf	___llmod@dividend,w
  2009  0711  00F2               	movwf	?___llmod
  2010  0712  0008               	return
  2011  0713                     __end_of___llmod:
  2012                           
  2013                           	psect	text6
  2014  0310                     __ptext6:	
  2015 ;; *************** function _UltraSonicSensor_Read *****************
  2016 ;; Defined at:
  2017 ;;		line 18 in file "Source/Header/UltraSonicSensor.h"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;  sensor          1    wreg     PTR struct .
  2020 ;;		 -> UltraSonic_2(6), 
  2021 ;;  system_tick     1    8[COMMON] PTR volatile unsigned lo
  2022 ;;		 -> timeSysTick(4), 
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;  sensor          1    8[BANK0 ] PTR struct .
  2025 ;;		 -> UltraSonic_2(6), 
  2026 ;;  buff_time       4    4[BANK0 ] unsigned long 
  2027 ;; Return value:  Size  Location     Type
  2028 ;;                  4    8[COMMON] unsigned long 
  2029 ;; Registers used:
  2030 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2031 ;; Tracked objects:
  2032 ;;		On entry : 300/0
  2033 ;;		On exit  : 300/0
  2034 ;;		Unchanged: 0/0
  2035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2036 ;;      Params:         4       0       0       0       0
  2037 ;;      Locals:         0       5       0       0       0
  2038 ;;      Temps:          0       4       0       0       0
  2039 ;;      Totals:         4       9       0       0       0
  2040 ;;Total ram usage:       13 bytes
  2041 ;; Hardware stack levels used: 1
  2042 ;; Hardware stack levels required when called: 2
  2043 ;; This function calls:
  2044 ;;		_GPIO_Read
  2045 ;;		_GPIO_Write
  2046 ;; This function is called by:
  2047 ;;		_main
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051  0310                     _UltraSonicSensor_Read:	
  2052                           ;psect for function _UltraSonicSensor_Read
  2053                           
  2054                           
  2055                           ;incstack = 0
  2056                           ; Regs used in _UltraSonicSensor_Read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2057                           ;UltraSonicSensor_Read@sensor stored from wreg
  2058  0310  00A8               	movwf	UltraSonicSensor_Read@sensor
  2059                           
  2060                           ;Source/Header/UltraSonicSensor.h: 21:         GPIO_Write(sensor[0].Port, sensor[0].Pin,
      +                           0);
  2061  0311  0828               	movf	UltraSonicSensor_Read@sensor,w
  2062  0312  0084               	movwf	4
  2063  0313  1383               	bcf	3,7	;select IRP bank0
  2064  0314  0800               	movf	0,w
  2065  0315  00F2               	movwf	GPIO_Write@GPIO_Port
  2066  0316  0A84               	incf	4,f
  2067  0317  0800               	movf	0,w
  2068  0318  0384               	decf	4,f
  2069  0319  00F3               	movwf	GPIO_Write@GPIO_Port+1
  2070  031A  0828               	movf	UltraSonicSensor_Read@sensor,w
  2071  031B  3E02               	addlw	2
  2072  031C  0084               	movwf	4
  2073  031D  0800               	movf	0,w
  2074  031E  00A1               	movwf	??_UltraSonicSensor_Read+1
  2075  031F  0821               	movf	??_UltraSonicSensor_Read+1,w
  2076  0320  00F4               	movwf	GPIO_Write@Pin
  2077  0321  01F5               	clrf	GPIO_Write@GPIO_State
  2078  0322  120A  118A  24E2  120A  118A  	fcall	_GPIO_Write
  2079                           
  2080                           ;Source/Header/UltraSonicSensor.h: 22:         _delay((unsigned long)(((unsigned long)2)
      +                          *(20000000/4000000.0)));
  2081  0327  3002               	movlw	2
  2082  0328  1283               	bcf	3,5	;RP0=0, select bank0
  2083  0329  1303               	bcf	3,6	;RP1=0, select bank0
  2084  032A  00A0               	movwf	??_UltraSonicSensor_Read
  2085  032B                     u1507:
  2086  032B  0BA0               	decfsz	??_UltraSonicSensor_Read,f
  2087  032C  2B2B               	goto	u1507
  2088  032D  0000               	nop
  2089                           
  2090                           ;Source/Header/UltraSonicSensor.h: 23:         GPIO_Write(sensor[0].Port, sensor[0].Pin,
      +                           1);
  2091  032E  1283               	bcf	3,5	;RP0=0, select bank0
  2092  032F  1303               	bcf	3,6	;RP1=0, select bank0
  2093  0330  0828               	movf	UltraSonicSensor_Read@sensor,w
  2094  0331  0084               	movwf	4
  2095  0332  1383               	bcf	3,7	;select IRP bank0
  2096  0333  0800               	movf	0,w
  2097  0334  00F2               	movwf	GPIO_Write@GPIO_Port
  2098  0335  0A84               	incf	4,f
  2099  0336  0800               	movf	0,w
  2100  0337  0384               	decf	4,f
  2101  0338  00F3               	movwf	GPIO_Write@GPIO_Port+1
  2102  0339  0828               	movf	UltraSonicSensor_Read@sensor,w
  2103  033A  3E02               	addlw	2
  2104  033B  0084               	movwf	4
  2105  033C  0800               	movf	0,w
  2106  033D  00A1               	movwf	??_UltraSonicSensor_Read+1
  2107  033E  0821               	movf	??_UltraSonicSensor_Read+1,w
  2108  033F  00F4               	movwf	GPIO_Write@Pin
  2109  0340  01F5               	clrf	GPIO_Write@GPIO_State
  2110  0341  0AF5               	incf	GPIO_Write@GPIO_State,f
  2111  0342  120A  118A  24E2  120A  118A  	fcall	_GPIO_Write
  2112                           
  2113                           ;Source/Header/UltraSonicSensor.h: 24:         _delay((unsigned long)(((unsigned long)5)
      +                          *(20000000/4000000.0)));
  2114  0347  3007               	movlw	7
  2115  0348  1283               	bcf	3,5	;RP0=0, select bank0
  2116  0349  1303               	bcf	3,6	;RP1=0, select bank0
  2117  034A  00A0               	movwf	??_UltraSonicSensor_Read
  2118  034B                     u1517:
  2119  034B  0BA0               	decfsz	??_UltraSonicSensor_Read,f
  2120  034C  2B4B               	goto	u1517
  2121  034D  0000               	nop
  2122                           
  2123                           ;Source/Header/UltraSonicSensor.h: 25:         GPIO_Write(sensor[0].Port, sensor[0].Pin,
      +                           0);
  2124  034E  1283               	bcf	3,5	;RP0=0, select bank0
  2125  034F  1303               	bcf	3,6	;RP1=0, select bank0
  2126  0350  0828               	movf	UltraSonicSensor_Read@sensor,w
  2127  0351  0084               	movwf	4
  2128  0352  1383               	bcf	3,7	;select IRP bank0
  2129  0353  0800               	movf	0,w
  2130  0354  00F2               	movwf	GPIO_Write@GPIO_Port
  2131  0355  0A84               	incf	4,f
  2132  0356  0800               	movf	0,w
  2133  0357  0384               	decf	4,f
  2134  0358  00F3               	movwf	GPIO_Write@GPIO_Port+1
  2135  0359  0828               	movf	UltraSonicSensor_Read@sensor,w
  2136  035A  3E02               	addlw	2
  2137  035B  0084               	movwf	4
  2138  035C  0800               	movf	0,w
  2139  035D  00A1               	movwf	??_UltraSonicSensor_Read+1
  2140  035E  0821               	movf	??_UltraSonicSensor_Read+1,w
  2141  035F  00F4               	movwf	GPIO_Write@Pin
  2142  0360  01F5               	clrf	GPIO_Write@GPIO_State
  2143  0361  120A  118A  24E2  120A  118A  	fcall	_GPIO_Write
  2144                           
  2145                           ;Source/Header/UltraSonicSensor.h: 26:         if(!GPIO_Read(sensor[1].Port, sensor[1].P
      +                          in))
  2146  0366  1283               	bcf	3,5	;RP0=0, select bank0
  2147  0367  0828               	movf	UltraSonicSensor_Read@sensor,w
  2148  0368  3E03               	addlw	3
  2149  0369  0084               	movwf	4
  2150  036A  1383               	bcf	3,7	;select IRP bank0
  2151  036B  0800               	movf	0,w
  2152  036C  00F2               	movwf	GPIO_Read@GPIO_Port
  2153  036D  0A84               	incf	4,f
  2154  036E  0800               	movf	0,w
  2155  036F  0384               	decf	4,f
  2156  0370  00F3               	movwf	GPIO_Read@GPIO_Port+1
  2157  0371  0828               	movf	UltraSonicSensor_Read@sensor,w
  2158  0372  3E05               	addlw	5
  2159  0373  0084               	movwf	4
  2160  0374  0800               	movf	0,w
  2161  0375  00A1               	movwf	??_UltraSonicSensor_Read+1
  2162  0376  0821               	movf	??_UltraSonicSensor_Read+1,w
  2163  0377  00F4               	movwf	GPIO_Read@Pin
  2164  0378  120A  158A  26FC  120A  118A  	fcall	_GPIO_Read
  2165  037D  3A00               	xorlw	0
  2166  037E  1D03               	skipz
  2167  037F  2B99               	goto	l1574
  2168  0380                     l1572:
  2169  0380  0828               	movf	UltraSonicSensor_Read@sensor,w
  2170  0381  3E03               	addlw	3
  2171  0382  0084               	movwf	4
  2172  0383  1383               	bcf	3,7	;select IRP bank0
  2173  0384  0800               	movf	0,w
  2174  0385  00F2               	movwf	GPIO_Read@GPIO_Port
  2175  0386  0A84               	incf	4,f
  2176  0387  0800               	movf	0,w
  2177  0388  0384               	decf	4,f
  2178  0389  00F3               	movwf	GPIO_Read@GPIO_Port+1
  2179  038A  0828               	movf	UltraSonicSensor_Read@sensor,w
  2180  038B  3E05               	addlw	5
  2181  038C  0084               	movwf	4
  2182  038D  0800               	movf	0,w
  2183  038E  00A1               	movwf	??_UltraSonicSensor_Read+1
  2184  038F  0821               	movf	??_UltraSonicSensor_Read+1,w
  2185  0390  00F4               	movwf	GPIO_Read@Pin
  2186  0391  120A  158A  26FC  120A  118A  	fcall	_GPIO_Read
  2187  0396  3A00               	xorlw	0
  2188  0397  1903               	skipnz
  2189  0398  2B80               	goto	l1572
  2190  0399                     l1574:
  2191                           
  2192                           ;Source/Header/UltraSonicSensor.h: 30:         buff_time = *system_tick;
  2193  0399  0878               	movf	UltraSonicSensor_Read@system_tick,w
  2194  039A  0084               	movwf	4
  2195  039B  1383               	bcf	3,7	;select IRP bank0
  2196  039C  0800               	movf	0,w
  2197  039D  00A4               	movwf	UltraSonicSensor_Read@buff_time
  2198  039E  0A84               	incf	4,f
  2199  039F  0800               	movf	0,w
  2200  03A0  00A5               	movwf	UltraSonicSensor_Read@buff_time+1
  2201  03A1  0A84               	incf	4,f
  2202  03A2  0800               	movf	0,w
  2203  03A3  00A6               	movwf	UltraSonicSensor_Read@buff_time+2
  2204  03A4  0A84               	incf	4,f
  2205  03A5  0800               	movf	0,w
  2206  03A6  00A7               	movwf	UltraSonicSensor_Read@buff_time+3
  2207  03A7                     l1576:	
  2208                           ;Source/Header/UltraSonicSensor.h: 31:         while(GPIO_Read(sensor[1].Port, sensor[1]
      +                          .Pin));
  2209                           
  2210  03A7  0828               	movf	UltraSonicSensor_Read@sensor,w
  2211  03A8  3E03               	addlw	3
  2212  03A9  0084               	movwf	4
  2213  03AA  1383               	bcf	3,7	;select IRP bank0
  2214  03AB  0800               	movf	0,w
  2215  03AC  00F2               	movwf	GPIO_Read@GPIO_Port
  2216  03AD  0A84               	incf	4,f
  2217  03AE  0800               	movf	0,w
  2218  03AF  0384               	decf	4,f
  2219  03B0  00F3               	movwf	GPIO_Read@GPIO_Port+1
  2220  03B1  0828               	movf	UltraSonicSensor_Read@sensor,w
  2221  03B2  3E05               	addlw	5
  2222  03B3  0084               	movwf	4
  2223  03B4  0800               	movf	0,w
  2224  03B5  00A1               	movwf	??_UltraSonicSensor_Read+1
  2225  03B6  0821               	movf	??_UltraSonicSensor_Read+1,w
  2226  03B7  00F4               	movwf	GPIO_Read@Pin
  2227  03B8  120A  158A  26FC  120A  118A  	fcall	_GPIO_Read
  2228  03BD  3A00               	xorlw	0
  2229  03BE  1D03               	skipz
  2230  03BF  2BA7               	goto	l1576
  2231                           
  2232                           ;Source/Header/UltraSonicSensor.h: 33:         buff_time = *system_tick - buff_time;
  2233  03C0  0878               	movf	UltraSonicSensor_Read@system_tick,w
  2234  03C1  0084               	movwf	4
  2235  03C2  1383               	bcf	3,7	;select IRP bank0
  2236  03C3  0800               	movf	0,w
  2237  03C4  00A0               	movwf	??_UltraSonicSensor_Read
  2238  03C5  0A84               	incf	4,f
  2239  03C6  0800               	movf	0,w
  2240  03C7  00A1               	movwf	??_UltraSonicSensor_Read+1
  2241  03C8  0A84               	incf	4,f
  2242  03C9  0800               	movf	0,w
  2243  03CA  00A2               	movwf	??_UltraSonicSensor_Read+2
  2244  03CB  0A84               	incf	4,f
  2245  03CC  0800               	movf	0,w
  2246  03CD  00A3               	movwf	??_UltraSonicSensor_Read+3
  2247  03CE  0824               	movf	UltraSonicSensor_Read@buff_time,w
  2248  03CF  02A0               	subwf	??_UltraSonicSensor_Read,f
  2249  03D0  0825               	movf	UltraSonicSensor_Read@buff_time+1,w
  2250  03D1  1C03               	skipc
  2251  03D2  0F25               	incfsz	UltraSonicSensor_Read@buff_time+1,w
  2252  03D3  2BD5               	goto	u1181
  2253  03D4  2BD6               	goto	u1182
  2254  03D5                     u1181:
  2255  03D5  02A1               	subwf	??_UltraSonicSensor_Read+1,f
  2256  03D6                     u1182:
  2257  03D6  0826               	movf	UltraSonicSensor_Read@buff_time+2,w
  2258  03D7  1C03               	skipc
  2259  03D8  0F26               	incfsz	UltraSonicSensor_Read@buff_time+2,w
  2260  03D9  2BDB               	goto	u1183
  2261  03DA  2BDC               	goto	u1184
  2262  03DB                     u1183:
  2263  03DB  02A2               	subwf	??_UltraSonicSensor_Read+2,f
  2264  03DC                     u1184:
  2265  03DC  0827               	movf	UltraSonicSensor_Read@buff_time+3,w
  2266  03DD  1C03               	skipc
  2267  03DE  0F27               	incfsz	UltraSonicSensor_Read@buff_time+3,w
  2268  03DF  2BE1               	goto	u1185
  2269  03E0  2BE2               	goto	u1186
  2270  03E1                     u1185:
  2271  03E1  02A3               	subwf	??_UltraSonicSensor_Read+3,f
  2272  03E2                     u1186:
  2273  03E2  0823               	movf	??_UltraSonicSensor_Read+3,w
  2274  03E3  00A7               	movwf	UltraSonicSensor_Read@buff_time+3
  2275  03E4  0822               	movf	??_UltraSonicSensor_Read+2,w
  2276  03E5  00A6               	movwf	UltraSonicSensor_Read@buff_time+2
  2277  03E6  0821               	movf	??_UltraSonicSensor_Read+1,w
  2278  03E7  00A5               	movwf	UltraSonicSensor_Read@buff_time+1
  2279  03E8  0820               	movf	??_UltraSonicSensor_Read,w
  2280  03E9  00A4               	movwf	UltraSonicSensor_Read@buff_time
  2281                           
  2282                           ;Source/Header/UltraSonicSensor.h: 34:         if (buff_time > 150)
  2283  03EA  0827               	movf	UltraSonicSensor_Read@buff_time+3,w
  2284  03EB  1D03               	btfss	3,2
  2285  03EC  2BF9               	goto	l1582
  2286  03ED  0826               	movf	UltraSonicSensor_Read@buff_time+2,w
  2287  03EE  1D03               	btfss	3,2
  2288  03EF  2BF9               	goto	l1582
  2289  03F0  0825               	movf	UltraSonicSensor_Read@buff_time+1,w
  2290  03F1  1D03               	btfss	3,2
  2291  03F2  2BF9               	goto	l1582
  2292  03F3  3097               	movlw	151
  2293  03F4  0224               	subwf	UltraSonicSensor_Read@buff_time,w
  2294  03F5  1D03               	skipz
  2295  03F6  2BF7               	goto	u1193
  2296  03F7                     u1193:
  2297  03F7  1C03               	btfss	3,0
  2298  03F8  2C03               	goto	l238
  2299  03F9                     l1582:
  2300                           
  2301                           ;Source/Header/UltraSonicSensor.h: 35:         {;Source/Header/UltraSonicSensor.h: 36:  
      +                                     buff_time = 0;
  2302  03F9  3000               	movlw	0
  2303  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2304  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  2305  03FC  00A7               	movwf	UltraSonicSensor_Read@buff_time+3
  2306  03FD  3000               	movlw	0
  2307  03FE  00A6               	movwf	UltraSonicSensor_Read@buff_time+2
  2308  03FF  3000               	movlw	0
  2309  0400  00A5               	movwf	UltraSonicSensor_Read@buff_time+1
  2310  0401  3000               	movlw	0
  2311  0402  00A4               	movwf	UltraSonicSensor_Read@buff_time
  2312  0403                     l238:	
  2313                           ;Source/Header/UltraSonicSensor.h: 37:         }
  2314                           
  2315                           
  2316                           ;Source/Header/UltraSonicSensor.h: 38:         return buff_time;
  2317  0403  1283               	bcf	3,5	;RP0=0, select bank0
  2318  0404  1303               	bcf	3,6	;RP1=0, select bank0
  2319  0405  0827               	movf	UltraSonicSensor_Read@buff_time+3,w
  2320  0406  00FB               	movwf	?_UltraSonicSensor_Read+3
  2321  0407  0826               	movf	UltraSonicSensor_Read@buff_time+2,w
  2322  0408  00FA               	movwf	?_UltraSonicSensor_Read+2
  2323  0409  0825               	movf	UltraSonicSensor_Read@buff_time+1,w
  2324  040A  00F9               	movwf	?_UltraSonicSensor_Read+1
  2325  040B  0824               	movf	UltraSonicSensor_Read@buff_time,w
  2326  040C  00F8               	movwf	?_UltraSonicSensor_Read
  2327  040D  0008               	return
  2328  040E                     __end_of_UltraSonicSensor_Read:
  2329                           
  2330                           	psect	text7
  2331  0EFC                     __ptext7:	
  2332 ;; *************** function _GPIO_Read *****************
  2333 ;; Defined at:
  2334 ;;		line 48 in file "Source/Header/GPIO.h"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;  GPIO_Port       2    2[COMMON] PTR volatile unsigned ch
  2337 ;;		 -> PORTA(1), PORTE(1), PORTD(1), PORTC(1), 
  2338 ;;		 -> PORTB(1), 
  2339 ;;  Pin             1    4[COMMON] unsigned char 
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;  GPIO_State      1    6[COMMON] unsigned char 
  2342 ;; Return value:  Size  Location     Type
  2343 ;;                  1    wreg      unsigned char 
  2344 ;; Registers used:
  2345 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2346 ;; Tracked objects:
  2347 ;;		On entry : 300/0
  2348 ;;		On exit  : 300/0
  2349 ;;		Unchanged: 300/0
  2350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2351 ;;      Params:         3       0       0       0       0
  2352 ;;      Locals:         1       0       0       0       0
  2353 ;;      Temps:          1       0       0       0       0
  2354 ;;      Totals:         5       0       0       0       0
  2355 ;;Total ram usage:        5 bytes
  2356 ;; Hardware stack levels used: 1
  2357 ;; Hardware stack levels required when called: 1
  2358 ;; This function calls:
  2359 ;;		Nothing
  2360 ;; This function is called by:
  2361 ;;		_UltraSonicSensor_Read
  2362 ;;		_main
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366  0EFC                     _GPIO_Read:	
  2367                           ;psect for function _GPIO_Read
  2368                           
  2369                           
  2370                           ;Source/Header/GPIO.h: 52:         if(*GPIO_Port & (1 << Pin))
  2371                           
  2372                           ;incstack = 0
  2373                           ; Regs used in _GPIO_Read: [wreg-fsr0h+status,2+status,0]
  2374  0EFC  0872               	movf	GPIO_Read@GPIO_Port,w
  2375  0EFD  0084               	movwf	4
  2376  0EFE  1783               	bsf	3,7
  2377  0EFF  1C73               	btfss	GPIO_Read@GPIO_Port+1,0
  2378  0F00  1383               	bcf	3,7
  2379  0F01  3001               	movlw	1
  2380  0F02  00F5               	movwf	??_GPIO_Read
  2381  0F03  0A74               	incf	GPIO_Read@Pin,w
  2382  0F04  2F07               	goto	u964
  2383  0F05                     u965:
  2384  0F05  1003               	clrc
  2385  0F06  0DF5               	rlf	??_GPIO_Read,f
  2386  0F07                     u964:
  2387  0F07  3EFF               	addlw	-1
  2388  0F08  1D03               	skipz
  2389  0F09  2F05               	goto	u965
  2390  0F0A  0875               	movf	??_GPIO_Read,w
  2391  0F0B  0500               	andwf	0,w
  2392  0F0C  1903               	btfsc	3,2
  2393  0F0D  2F11               	goto	l1426
  2394                           
  2395                           ;Source/Header/GPIO.h: 53:         {;Source/Header/GPIO.h: 54:             GPIO_State = 
      +                          1;
  2396  0F0E  01F6               	clrf	GPIO_Read@GPIO_State
  2397  0F0F  0AF6               	incf	GPIO_Read@GPIO_State,f
  2398                           
  2399                           ;Source/Header/GPIO.h: 55:         }
  2400  0F10  2F12               	goto	l1428
  2401  0F11                     l1426:
  2402                           
  2403                           ;Source/Header/GPIO.h: 57:         {;Source/Header/GPIO.h: 58:             GPIO_State = 
      +                          0;
  2404  0F11  01F6               	clrf	GPIO_Read@GPIO_State
  2405  0F12                     l1428:
  2406                           
  2407                           ;Source/Header/GPIO.h: 60:         return GPIO_State;
  2408  0F12  0876               	movf	GPIO_Read@GPIO_State,w
  2409  0F13  0008               	return
  2410  0F14                     __end_of_GPIO_Read:
  2411                           
  2412                           	psect	text8
  2413  0F14                     __ptext8:	
  2414 ;; *************** function _UART_Writes *****************
  2415 ;; Defined at:
  2416 ;;		line 30 in file "Source/Header/UART.h"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;  data            2    6[COMMON] PTR unsigned char 
  2419 ;;		 -> main@TX_Str(10), STR_1(12), 
  2420 ;;  len             1    8[COMMON] unsigned char 
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;  i               1   10[COMMON] unsigned char 
  2423 ;; Return value:  Size  Location     Type
  2424 ;;                  1    wreg      void 
  2425 ;; Registers used:
  2426 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2427 ;; Tracked objects:
  2428 ;;		On entry : 300/0
  2429 ;;		On exit  : 200/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2432 ;;      Params:         3       0       0       0       0
  2433 ;;      Locals:         1       0       0       0       0
  2434 ;;      Temps:          1       0       0       0       0
  2435 ;;      Totals:         5       0       0       0       0
  2436 ;;Total ram usage:        5 bytes
  2437 ;; Hardware stack levels used: 1
  2438 ;; Hardware stack levels required when called: 2
  2439 ;; This function calls:
  2440 ;;		_UART_WriteChar
  2441 ;; This function is called by:
  2442 ;;		_main
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446  0F14                     _UART_Writes:	
  2447                           ;psect for function _UART_Writes
  2448                           
  2449                           
  2450                           ;Source/Header/UART.h: 30:     void UART_Writes(char *data, unsigned char len);Source/He
      +                          ader/UART.h: 31:     {;Source/Header/UART.h: 32:         unsigned char i = 0;
  2451                           
  2452                           ;incstack = 0
  2453                           ; Regs used in _UART_Writes: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2454  0F14  01FA               	clrf	UART_Writes@i
  2455                           
  2456                           ;Source/Header/UART.h: 33:         for(i = 0; i <= len; i++)
  2457  0F15  01FA               	clrf	UART_Writes@i
  2458  0F16                     l1518:
  2459  0F16  087A               	movf	UART_Writes@i,w
  2460  0F17  0278               	subwf	UART_Writes@len,w
  2461  0F18  1C03               	btfss	3,0
  2462  0F19  0008               	return
  2463                           
  2464                           ;Source/Header/UART.h: 34:         {;Source/Header/UART.h: 35:             UART_WriteCha
      +                          r(data[i]);
  2465  0F1A  087A               	movf	UART_Writes@i,w
  2466  0F1B  0776               	addwf	UART_Writes@data,w
  2467  0F1C  0084               	movwf	4
  2468  0F1D  0877               	movf	UART_Writes@data+1,w
  2469  0F1E  1803               	skipnc
  2470  0F1F  0A77               	incf	UART_Writes@data+1,w
  2471  0F20  1283               	bcf	3,5	;RP0=0, select bank0
  2472  0F21  00FF               	movwf	127
  2473  0F22  120A  158A  2000  120A  158A  	fcall	stringtab
  2474  0F27  120A  158A  26D5  120A  158A  	fcall	_UART_WriteChar
  2475                           
  2476                           ;Source/Header/UART.h: 36:         }
  2477  0F2C  3001               	movlw	1
  2478  0F2D  00F9               	movwf	??_UART_Writes
  2479  0F2E  0879               	movf	??_UART_Writes,w
  2480  0F2F  07FA               	addwf	UART_Writes@i,f
  2481  0F30  2F16               	goto	l1518
  2482  0F31                     __end_of_UART_Writes:
  2483                           
  2484                           	psect	text9
  2485  0ED5                     __ptext9:	
  2486 ;; *************** function _UART_WriteChar *****************
  2487 ;; Defined at:
  2488 ;;		line 23 in file "Source/Header/UART.h"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;  data            1    wreg     unsigned char 
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;  data            1    2[COMMON] unsigned char 
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  1    wreg      void 
  2495 ;; Registers used:
  2496 ;;		wreg
  2497 ;; Tracked objects:
  2498 ;;		On entry : 300/0
  2499 ;;		On exit  : 300/100
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2502 ;;      Params:         0       0       0       0       0
  2503 ;;      Locals:         1       0       0       0       0
  2504 ;;      Temps:          0       0       0       0       0
  2505 ;;      Totals:         1       0       0       0       0
  2506 ;;Total ram usage:        1 bytes
  2507 ;; Hardware stack levels used: 1
  2508 ;; Hardware stack levels required when called: 1
  2509 ;; This function calls:
  2510 ;;		Nothing
  2511 ;; This function is called by:
  2512 ;;		_UART_Writes
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516  0ED5                     _UART_WriteChar:	
  2517                           ;psect for function _UART_WriteChar
  2518                           
  2519                           
  2520                           ;incstack = 0
  2521                           ; Regs used in _UART_WriteChar: [wreg]
  2522                           ;UART_WriteChar@data stored from wreg
  2523  0ED5  00F2               	movwf	UART_WriteChar@data
  2524                           
  2525                           ;Source/Header/UART.h: 23:     void UART_WriteChar(char data);Source/Header/UART.h: 24: 
      +                              {;Source/Header/UART.h: 25:         TXREG = data;
  2526  0ED6  0872               	movf	UART_WriteChar@data,w
  2527  0ED7  0099               	movwf	25	;volatile
  2528  0ED8                     l190:	
  2529                           ;Source/Header/UART.h: 26:         while(TXIF == 0);
  2530                           
  2531  0ED8  1E0C               	btfss	12,4	;volatile
  2532  0ED9  2ED8               	goto	l190
  2533                           
  2534                           ;Source/Header/UART.h: 27:         TXIF = 0;
  2535  0EDA  120C               	bcf	12,4	;volatile
  2536  0EDB                     l193:	
  2537                           ;Source/Header/UART.h: 28:         while(TRMT != 1);
  2538                           
  2539  0EDB  1683               	bsf	3,5	;RP0=1, select bank1
  2540  0EDC  1898               	btfsc	24,1	;volatile
  2541  0EDD  0008               	return
  2542  0EDE  2EDB               	goto	l193
  2543  0EDF                     __end_of_UART_WriteChar:
  2544                           
  2545                           	psect	text10
  2546  074F                     __ptext10:	
  2547 ;; *************** function _Motor_Reverse_Start *****************
  2548 ;; Defined at:
  2549 ;;		line 40 in file "Source/Header/HBrightCtrl.h"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;  motor_handle    1    wreg     PTR struct .
  2552 ;;		 -> Motor_4(12), Motor_3(12), Motor_2(12), Motor_1(12), 
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;  motor_handle    1    2[BANK0 ] PTR struct .
  2555 ;;		 -> Motor_4(12), Motor_3(12), Motor_2(12), Motor_1(12), 
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  1    wreg      void 
  2558 ;; Registers used:
  2559 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2560 ;; Tracked objects:
  2561 ;;		On entry : 200/0
  2562 ;;		On exit  : 300/100
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2565 ;;      Params:         0       0       0       0       0
  2566 ;;      Locals:         0       1       0       0       0
  2567 ;;      Temps:          0       2       0       0       0
  2568 ;;      Totals:         0       3       0       0       0
  2569 ;;Total ram usage:        3 bytes
  2570 ;; Hardware stack levels used: 1
  2571 ;; Hardware stack levels required when called: 3
  2572 ;; This function calls:
  2573 ;;		_GPIO_Write
  2574 ;;		_Motor_Stop
  2575 ;; This function is called by:
  2576 ;;		_main
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580  074F                     _Motor_Reverse_Start:	
  2581                           ;psect for function _Motor_Reverse_Start
  2582                           
  2583                           
  2584                           ;incstack = 0
  2585                           ; Regs used in _Motor_Reverse_Start: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2586                           ;Motor_Reverse_Start@motor_handle stored from wreg
  2587  074F  1283               	bcf	3,5	;RP0=0, select bank0
  2588  0750  00A2               	movwf	Motor_Reverse_Start@motor_handle
  2589                           
  2590                           ;Source/Header/HBrightCtrl.h: 40:     void Motor_Reverse_Start(Peripheral_Pin *motor_han
      +                          dle);Source/Header/HBrightCtrl.h: 41:     {;Source/Header/HBrightCtrl.h: 43:         Mot
      +                          or_Stop(motor_handle);
  2591  0751  0822               	movf	Motor_Reverse_Start@motor_handle,w
  2592  0752  120A  118A  258F  120A  118A  	fcall	_Motor_Stop
  2593                           
  2594                           ;Source/Header/HBrightCtrl.h: 45:         GPIO_Write(motor_handle[1].Port, motor_handle[
      +                          1].Pin, 1);
  2595  0757  1283               	bcf	3,5	;RP0=0, select bank0
  2596  0758  1303               	bcf	3,6	;RP1=0, select bank0
  2597  0759  0822               	movf	Motor_Reverse_Start@motor_handle,w
  2598  075A  3E03               	addlw	3
  2599  075B  0084               	movwf	4
  2600  075C  1383               	bcf	3,7	;select IRP bank0
  2601  075D  0800               	movf	0,w
  2602  075E  00F2               	movwf	GPIO_Write@GPIO_Port
  2603  075F  0A84               	incf	4,f
  2604  0760  0800               	movf	0,w
  2605  0761  0384               	decf	4,f
  2606  0762  00F3               	movwf	GPIO_Write@GPIO_Port+1
  2607  0763  0822               	movf	Motor_Reverse_Start@motor_handle,w
  2608  0764  3E05               	addlw	5
  2609  0765  0084               	movwf	4
  2610  0766  0800               	movf	0,w
  2611  0767  00A1               	movwf	??_Motor_Reverse_Start+1
  2612  0768  0821               	movf	??_Motor_Reverse_Start+1,w
  2613  0769  00F4               	movwf	GPIO_Write@Pin
  2614  076A  01F5               	clrf	GPIO_Write@GPIO_State
  2615  076B  0AF5               	incf	GPIO_Write@GPIO_State,f
  2616  076C  120A  118A  24E2  120A  118A  	fcall	_GPIO_Write
  2617                           
  2618                           ;Source/Header/HBrightCtrl.h: 46:         GPIO_Write(motor_handle[3].Port, motor_handle[
      +                          3].Pin, 1);
  2619  0771  1283               	bcf	3,5	;RP0=0, select bank0
  2620  0772  0822               	movf	Motor_Reverse_Start@motor_handle,w
  2621  0773  3E09               	addlw	9
  2622  0774  0084               	movwf	4
  2623  0775  1383               	bcf	3,7	;select IRP bank0
  2624  0776  0800               	movf	0,w
  2625  0777  00F2               	movwf	GPIO_Write@GPIO_Port
  2626  0778  0A84               	incf	4,f
  2627  0779  0800               	movf	0,w
  2628  077A  0384               	decf	4,f
  2629  077B  00F3               	movwf	GPIO_Write@GPIO_Port+1
  2630  077C  0822               	movf	Motor_Reverse_Start@motor_handle,w
  2631  077D  3E0B               	addlw	11
  2632  077E  0084               	movwf	4
  2633  077F  0800               	movf	0,w
  2634  0780  00A1               	movwf	??_Motor_Reverse_Start+1
  2635  0781  0821               	movf	??_Motor_Reverse_Start+1,w
  2636  0782  00F4               	movwf	GPIO_Write@Pin
  2637  0783  01F5               	clrf	GPIO_Write@GPIO_State
  2638  0784  0AF5               	incf	GPIO_Write@GPIO_State,f
  2639  0785  120A  118A  24E2   	fcall	_GPIO_Write
  2640  0788  0008               	return
  2641  0789                     __end_of_Motor_Reverse_Start:
  2642                           
  2643                           	psect	text11
  2644  0789                     __ptext11:	
  2645 ;; *************** function _Motor_Forward_Start *****************
  2646 ;; Defined at:
  2647 ;;		line 32 in file "Source/Header/HBrightCtrl.h"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;  motor_handle    1    wreg     PTR struct .
  2650 ;;		 -> Motor_4(12), Motor_3(12), Motor_2(12), Motor_1(12), 
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;  motor_handle    1    2[BANK0 ] PTR struct .
  2653 ;;		 -> Motor_4(12), Motor_3(12), Motor_2(12), Motor_1(12), 
  2654 ;; Return value:  Size  Location     Type
  2655 ;;                  1    wreg      void 
  2656 ;; Registers used:
  2657 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2658 ;; Tracked objects:
  2659 ;;		On entry : 200/0
  2660 ;;		On exit  : 300/100
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2663 ;;      Params:         0       0       0       0       0
  2664 ;;      Locals:         0       1       0       0       0
  2665 ;;      Temps:          0       2       0       0       0
  2666 ;;      Totals:         0       3       0       0       0
  2667 ;;Total ram usage:        3 bytes
  2668 ;; Hardware stack levels used: 1
  2669 ;; Hardware stack levels required when called: 3
  2670 ;; This function calls:
  2671 ;;		_GPIO_Write
  2672 ;;		_Motor_Stop
  2673 ;; This function is called by:
  2674 ;;		_main
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678  0789                     _Motor_Forward_Start:	
  2679                           ;psect for function _Motor_Forward_Start
  2680                           
  2681                           
  2682                           ;incstack = 0
  2683                           ; Regs used in _Motor_Forward_Start: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2684                           ;Motor_Forward_Start@motor_handle stored from wreg
  2685  0789  1283               	bcf	3,5	;RP0=0, select bank0
  2686  078A  00A2               	movwf	Motor_Forward_Start@motor_handle
  2687                           
  2688                           ;Source/Header/HBrightCtrl.h: 32:     void Motor_Forward_Start(Peripheral_Pin *motor_han
      +                          dle);Source/Header/HBrightCtrl.h: 33:     {;Source/Header/HBrightCtrl.h: 35:         Mot
      +                          or_Stop(motor_handle);
  2689  078B  0822               	movf	Motor_Forward_Start@motor_handle,w
  2690  078C  120A  118A  258F  120A  118A  	fcall	_Motor_Stop
  2691                           
  2692                           ;Source/Header/HBrightCtrl.h: 37:         GPIO_Write(motor_handle[0].Port, motor_handle[
      +                          0].Pin, 1);
  2693  0791  1283               	bcf	3,5	;RP0=0, select bank0
  2694  0792  1303               	bcf	3,6	;RP1=0, select bank0
  2695  0793  0822               	movf	Motor_Forward_Start@motor_handle,w
  2696  0794  0084               	movwf	4
  2697  0795  1383               	bcf	3,7	;select IRP bank0
  2698  0796  0800               	movf	0,w
  2699  0797  00F2               	movwf	GPIO_Write@GPIO_Port
  2700  0798  0A84               	incf	4,f
  2701  0799  0800               	movf	0,w
  2702  079A  0384               	decf	4,f
  2703  079B  00F3               	movwf	GPIO_Write@GPIO_Port+1
  2704  079C  0822               	movf	Motor_Forward_Start@motor_handle,w
  2705  079D  3E02               	addlw	2
  2706  079E  0084               	movwf	4
  2707  079F  0800               	movf	0,w
  2708  07A0  00A1               	movwf	??_Motor_Forward_Start+1
  2709  07A1  0821               	movf	??_Motor_Forward_Start+1,w
  2710  07A2  00F4               	movwf	GPIO_Write@Pin
  2711  07A3  01F5               	clrf	GPIO_Write@GPIO_State
  2712  07A4  0AF5               	incf	GPIO_Write@GPIO_State,f
  2713  07A5  120A  118A  24E2  120A  118A  	fcall	_GPIO_Write
  2714                           
  2715                           ;Source/Header/HBrightCtrl.h: 38:         GPIO_Write(motor_handle[2].Port, motor_handle[
      +                          2].Pin, 1);
  2716  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  2717  07AB  0822               	movf	Motor_Forward_Start@motor_handle,w
  2718  07AC  3E06               	addlw	6
  2719  07AD  0084               	movwf	4
  2720  07AE  1383               	bcf	3,7	;select IRP bank0
  2721  07AF  0800               	movf	0,w
  2722  07B0  00F2               	movwf	GPIO_Write@GPIO_Port
  2723  07B1  0A84               	incf	4,f
  2724  07B2  0800               	movf	0,w
  2725  07B3  0384               	decf	4,f
  2726  07B4  00F3               	movwf	GPIO_Write@GPIO_Port+1
  2727  07B5  0822               	movf	Motor_Forward_Start@motor_handle,w
  2728  07B6  3E08               	addlw	8
  2729  07B7  0084               	movwf	4
  2730  07B8  0800               	movf	0,w
  2731  07B9  00A1               	movwf	??_Motor_Forward_Start+1
  2732  07BA  0821               	movf	??_Motor_Forward_Start+1,w
  2733  07BB  00F4               	movwf	GPIO_Write@Pin
  2734  07BC  01F5               	clrf	GPIO_Write@GPIO_State
  2735  07BD  0AF5               	incf	GPIO_Write@GPIO_State,f
  2736  07BE  120A  118A  24E2   	fcall	_GPIO_Write
  2737  07C1  0008               	return
  2738  07C2                     __end_of_Motor_Forward_Start:
  2739                           
  2740                           	psect	text12
  2741  058F                     __ptext12:	
  2742 ;; *************** function _Motor_Stop *****************
  2743 ;; Defined at:
  2744 ;;		line 20 in file "Source/Header/HBrightCtrl.h"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;  motor_handle    1    wreg     PTR struct .
  2747 ;;		 -> Motor_4(12), Motor_3(12), Motor_2(12), Motor_1(12), 
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;  motor_handle    1   11[COMMON] PTR struct .
  2750 ;;		 -> Motor_4(12), Motor_3(12), Motor_2(12), Motor_1(12), 
  2751 ;; Return value:  Size  Location     Type
  2752 ;;                  1    wreg      void 
  2753 ;; Registers used:
  2754 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2755 ;; Tracked objects:
  2756 ;;		On entry : 300/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2760 ;;      Params:         0       0       0       0       0
  2761 ;;      Locals:         1       0       0       0       0
  2762 ;;      Temps:          3       0       0       0       0
  2763 ;;      Totals:         4       0       0       0       0
  2764 ;;Total ram usage:        4 bytes
  2765 ;; Hardware stack levels used: 1
  2766 ;; Hardware stack levels required when called: 2
  2767 ;; This function calls:
  2768 ;;		_GPIO_Write
  2769 ;; This function is called by:
  2770 ;;		_Motor_Forward_Start
  2771 ;;		_Motor_Reverse_Start
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           
  2775  058F                     _Motor_Stop:	
  2776                           ;psect for function _Motor_Stop
  2777                           
  2778                           
  2779                           ;incstack = 0
  2780                           ; Regs used in _Motor_Stop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2781                           ;Motor_Stop@motor_handle stored from wreg
  2782  058F  00FB               	movwf	Motor_Stop@motor_handle
  2783                           
  2784                           ;Source/Header/HBrightCtrl.h: 20:     void Motor_Stop(Peripheral_Pin *motor_handle);Sour
      +                          ce/Header/HBrightCtrl.h: 21:     {;Source/Header/HBrightCtrl.h: 22:         GPIO_Write(m
      +                          otor_handle[2].Port, motor_handle[2].Pin, 0);
  2785  0590  087B               	movf	Motor_Stop@motor_handle,w
  2786  0591  3E06               	addlw	6
  2787  0592  0084               	movwf	4
  2788  0593  1383               	bcf	3,7	;select IRP bank0
  2789  0594  0800               	movf	0,w
  2790  0595  00F2               	movwf	GPIO_Write@GPIO_Port
  2791  0596  0A84               	incf	4,f
  2792  0597  0800               	movf	0,w
  2793  0598  0384               	decf	4,f
  2794  0599  00F3               	movwf	GPIO_Write@GPIO_Port+1
  2795  059A  087B               	movf	Motor_Stop@motor_handle,w
  2796  059B  3E08               	addlw	8
  2797  059C  0084               	movwf	4
  2798  059D  0800               	movf	0,w
  2799  059E  00F9               	movwf	??_Motor_Stop+1
  2800  059F  0879               	movf	??_Motor_Stop+1,w
  2801  05A0  00F4               	movwf	GPIO_Write@Pin
  2802  05A1  01F5               	clrf	GPIO_Write@GPIO_State
  2803  05A2  120A  118A  24E2  120A  118A  	fcall	_GPIO_Write
  2804                           
  2805                           ;Source/Header/HBrightCtrl.h: 23:         GPIO_Write(motor_handle[3].Port, motor_handle[
      +                          3].Pin, 0);
  2806  05A7  087B               	movf	Motor_Stop@motor_handle,w
  2807  05A8  3E09               	addlw	9
  2808  05A9  0084               	movwf	4
  2809  05AA  1383               	bcf	3,7	;select IRP bank0
  2810  05AB  0800               	movf	0,w
  2811  05AC  00F2               	movwf	GPIO_Write@GPIO_Port
  2812  05AD  0A84               	incf	4,f
  2813  05AE  0800               	movf	0,w
  2814  05AF  0384               	decf	4,f
  2815  05B0  00F3               	movwf	GPIO_Write@GPIO_Port+1
  2816  05B1  087B               	movf	Motor_Stop@motor_handle,w
  2817  05B2  3E0B               	addlw	11
  2818  05B3  0084               	movwf	4
  2819  05B4  0800               	movf	0,w
  2820  05B5  00F9               	movwf	??_Motor_Stop+1
  2821  05B6  0879               	movf	??_Motor_Stop+1,w
  2822  05B7  00F4               	movwf	GPIO_Write@Pin
  2823  05B8  01F5               	clrf	GPIO_Write@GPIO_State
  2824  05B9  120A  118A  24E2  120A  118A  	fcall	_GPIO_Write
  2825                           
  2826                           ;Source/Header/HBrightCtrl.h: 24:         _delay((unsigned long)(((unsigned long)20)*(20
      +                          000000/4000.0)));
  2827  05BE  3082               	movlw	130
  2828  05BF  00F9               	movwf	??_Motor_Stop+1
  2829  05C0  30DD               	movlw	221
  2830  05C1  00F8               	movwf	??_Motor_Stop
  2831  05C2                     u1527:
  2832  05C2  0BF8               	decfsz	??_Motor_Stop,f
  2833  05C3  2DC2               	goto	u1527
  2834  05C4  0BF9               	decfsz	??_Motor_Stop+1,f
  2835  05C5  2DC2               	goto	u1527
  2836  05C6  2DC7               	nop2
  2837                           
  2838                           ;Source/Header/HBrightCtrl.h: 25:         GPIO_Write(motor_handle[0].Port, motor_handle[
      +                          0].Pin, 1);
  2839  05C7  087B               	movf	Motor_Stop@motor_handle,w
  2840  05C8  0084               	movwf	4
  2841  05C9  1383               	bcf	3,7	;select IRP bank0
  2842  05CA  0800               	movf	0,w
  2843  05CB  00F2               	movwf	GPIO_Write@GPIO_Port
  2844  05CC  0A84               	incf	4,f
  2845  05CD  0800               	movf	0,w
  2846  05CE  0384               	decf	4,f
  2847  05CF  00F3               	movwf	GPIO_Write@GPIO_Port+1
  2848  05D0  087B               	movf	Motor_Stop@motor_handle,w
  2849  05D1  3E02               	addlw	2
  2850  05D2  0084               	movwf	4
  2851  05D3  0800               	movf	0,w
  2852  05D4  00F9               	movwf	??_Motor_Stop+1
  2853  05D5  0879               	movf	??_Motor_Stop+1,w
  2854  05D6  00F4               	movwf	GPIO_Write@Pin
  2855  05D7  01F5               	clrf	GPIO_Write@GPIO_State
  2856  05D8  0AF5               	incf	GPIO_Write@GPIO_State,f
  2857  05D9  120A  118A  24E2  120A  118A  	fcall	_GPIO_Write
  2858                           
  2859                           ;Source/Header/HBrightCtrl.h: 26:         GPIO_Write(motor_handle[1].Port, motor_handle[
      +                          1].Pin, 1);
  2860  05DE  087B               	movf	Motor_Stop@motor_handle,w
  2861  05DF  3E03               	addlw	3
  2862  05E0  0084               	movwf	4
  2863  05E1  1383               	bcf	3,7	;select IRP bank0
  2864  05E2  0800               	movf	0,w
  2865  05E3  00F2               	movwf	GPIO_Write@GPIO_Port
  2866  05E4  0A84               	incf	4,f
  2867  05E5  0800               	movf	0,w
  2868  05E6  0384               	decf	4,f
  2869  05E7  00F3               	movwf	GPIO_Write@GPIO_Port+1
  2870  05E8  087B               	movf	Motor_Stop@motor_handle,w
  2871  05E9  3E05               	addlw	5
  2872  05EA  0084               	movwf	4
  2873  05EB  0800               	movf	0,w
  2874  05EC  00F9               	movwf	??_Motor_Stop+1
  2875  05ED  0879               	movf	??_Motor_Stop+1,w
  2876  05EE  00F4               	movwf	GPIO_Write@Pin
  2877  05EF  01F5               	clrf	GPIO_Write@GPIO_State
  2878  05F0  0AF5               	incf	GPIO_Write@GPIO_State,f
  2879  05F1  120A  118A  24E2  120A  118A  	fcall	_GPIO_Write
  2880                           
  2881                           ;Source/Header/HBrightCtrl.h: 27:         _delay((unsigned long)(((unsigned long)20)*(20
      +                          000000/4000.0)));
  2882  05F6  3082               	movlw	130
  2883  05F7  00F9               	movwf	??_Motor_Stop+1
  2884  05F8  30DD               	movlw	221
  2885  05F9  00F8               	movwf	??_Motor_Stop
  2886  05FA                     u1537:
  2887  05FA  0BF8               	decfsz	??_Motor_Stop,f
  2888  05FB  2DFA               	goto	u1537
  2889  05FC  0BF9               	decfsz	??_Motor_Stop+1,f
  2890  05FD  2DFA               	goto	u1537
  2891  05FE  2DFF               	nop2
  2892                           
  2893                           ;Source/Header/HBrightCtrl.h: 28:         GPIO_Write(motor_handle[0].Port, motor_handle[
      +                          0].Pin, 0);
  2894  05FF  087B               	movf	Motor_Stop@motor_handle,w
  2895  0600  0084               	movwf	4
  2896  0601  1383               	bcf	3,7	;select IRP bank0
  2897  0602  0800               	movf	0,w
  2898  0603  00F2               	movwf	GPIO_Write@GPIO_Port
  2899  0604  0A84               	incf	4,f
  2900  0605  0800               	movf	0,w
  2901  0606  0384               	decf	4,f
  2902  0607  00F3               	movwf	GPIO_Write@GPIO_Port+1
  2903  0608  087B               	movf	Motor_Stop@motor_handle,w
  2904  0609  3E02               	addlw	2
  2905  060A  0084               	movwf	4
  2906  060B  0800               	movf	0,w
  2907  060C  00F9               	movwf	??_Motor_Stop+1
  2908  060D  0879               	movf	??_Motor_Stop+1,w
  2909  060E  00F4               	movwf	GPIO_Write@Pin
  2910  060F  01F5               	clrf	GPIO_Write@GPIO_State
  2911  0610  120A  118A  24E2  120A  118A  	fcall	_GPIO_Write
  2912                           
  2913                           ;Source/Header/HBrightCtrl.h: 29:         GPIO_Write(motor_handle[1].Port, motor_handle[
      +                          1].Pin, 0);
  2914  0615  087B               	movf	Motor_Stop@motor_handle,w
  2915  0616  3E03               	addlw	3
  2916  0617  0084               	movwf	4
  2917  0618  1383               	bcf	3,7	;select IRP bank0
  2918  0619  0800               	movf	0,w
  2919  061A  00F2               	movwf	GPIO_Write@GPIO_Port
  2920  061B  0A84               	incf	4,f
  2921  061C  0800               	movf	0,w
  2922  061D  0384               	decf	4,f
  2923  061E  00F3               	movwf	GPIO_Write@GPIO_Port+1
  2924  061F  087B               	movf	Motor_Stop@motor_handle,w
  2925  0620  3E05               	addlw	5
  2926  0621  0084               	movwf	4
  2927  0622  0800               	movf	0,w
  2928  0623  00F9               	movwf	??_Motor_Stop+1
  2929  0624  0879               	movf	??_Motor_Stop+1,w
  2930  0625  00F4               	movwf	GPIO_Write@Pin
  2931  0626  01F5               	clrf	GPIO_Write@GPIO_State
  2932  0627  120A  118A  24E2  120A  118A  	fcall	_GPIO_Write
  2933                           
  2934                           ;Source/Header/HBrightCtrl.h: 30:         _delay((unsigned long)(((unsigned long)400)*(2
      +                          0000000/4000.0)));
  2935  062C  300B               	movlw	11
  2936  062D  00FA               	movwf	??_Motor_Stop+2
  2937  062E  3026               	movlw	38
  2938  062F  00F9               	movwf	??_Motor_Stop+1
  2939  0630  305D               	movlw	93
  2940  0631  00F8               	movwf	??_Motor_Stop
  2941  0632                     u1547:
  2942  0632  0BF8               	decfsz	??_Motor_Stop,f
  2943  0633  2E32               	goto	u1547
  2944  0634  0BF9               	decfsz	??_Motor_Stop+1,f
  2945  0635  2E32               	goto	u1547
  2946  0636  0BFA               	decfsz	??_Motor_Stop+2,f
  2947  0637  2E32               	goto	u1547
  2948  0638  2E39               	nop2
  2949  0639  0008               	return
  2950  063A                     __end_of_Motor_Stop:
  2951                           
  2952                           	psect	text13
  2953  01E3                     __ptext13:	
  2954 ;; *************** function _MCU_Config *****************
  2955 ;; Defined at:
  2956 ;;		line 15 in file "Source/Header/Configuration.h"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;		None
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;		None
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  1    wreg      void 
  2963 ;; Registers used:
  2964 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2965 ;; Tracked objects:
  2966 ;;		On entry : B00/0
  2967 ;;		On exit  : 300/100
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2970 ;;      Params:         0       0       0       0       0
  2971 ;;      Locals:         0       0       0       0       0
  2972 ;;      Temps:          0       3       0       0       0
  2973 ;;      Totals:         0       3       0       0       0
  2974 ;;Total ram usage:        3 bytes
  2975 ;; Hardware stack levels used: 1
  2976 ;; Hardware stack levels required when called: 3
  2977 ;; This function calls:
  2978 ;;		_GPIO_Write
  2979 ;;		_Timer2_Interrupt_Init
  2980 ;;		_UART_BASE_Init
  2981 ;; This function is called by:
  2982 ;;		_main
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986  01E3                     _MCU_Config:	
  2987                           ;psect for function _MCU_Config
  2988                           
  2989                           
  2990                           ;Source/Header/Configuration.h: 19:     GPIO_Write(LED2.Port, LED2.Pin, 1);
  2991                           
  2992                           ;incstack = 0
  2993                           ; Regs used in _MCU_Config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2994  01E3  085C               	movf	_LED2,w
  2995  01E4  00F2               	movwf	GPIO_Write@GPIO_Port
  2996  01E5  085D               	movf	_LED2+1,w
  2997  01E6  00F3               	movwf	GPIO_Write@GPIO_Port+1
  2998  01E7  085E               	movf	_LED2+2,w
  2999  01E8  00AE               	movwf	??_MCU_Config
  3000  01E9  082E               	movf	??_MCU_Config,w
  3001  01EA  00F4               	movwf	GPIO_Write@Pin
  3002  01EB  01F5               	clrf	GPIO_Write@GPIO_State
  3003  01EC  0AF5               	incf	GPIO_Write@GPIO_State,f
  3004  01ED  120A  118A  24E2  120A  118A  	fcall	_GPIO_Write
  3005                           
  3006                           ;Source/Header/Configuration.h: 21:     GPIO_Write(BUZZER.Port, BUZZER.Pin, 1);
  3007  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  3008  01F3  0859               	movf	_BUZZER,w
  3009  01F4  00F2               	movwf	GPIO_Write@GPIO_Port
  3010  01F5  085A               	movf	_BUZZER+1,w
  3011  01F6  00F3               	movwf	GPIO_Write@GPIO_Port+1
  3012  01F7  085B               	movf	_BUZZER+2,w
  3013  01F8  00AE               	movwf	??_MCU_Config
  3014  01F9  082E               	movf	??_MCU_Config,w
  3015  01FA  00F4               	movwf	GPIO_Write@Pin
  3016  01FB  01F5               	clrf	GPIO_Write@GPIO_State
  3017  01FC  0AF5               	incf	GPIO_Write@GPIO_State,f
  3018  01FD  120A  118A  24E2  120A  118A  	fcall	_GPIO_Write
  3019                           
  3020                           ;Source/Header/Configuration.h: 22:     _delay((unsigned long)(((unsigned long)100)*(200
      +                          00000/4000.0)));
  3021  0202  3003               	movlw	3
  3022  0203  1283               	bcf	3,5	;RP0=0, select bank0
  3023  0204  1303               	bcf	3,6	;RP1=0, select bank0
  3024  0205  00B0               	movwf	??_MCU_Config+2
  3025  0206  308A               	movlw	138
  3026  0207  00AF               	movwf	??_MCU_Config+1
  3027  0208  3055               	movlw	85
  3028  0209  00AE               	movwf	??_MCU_Config
  3029  020A                     u1557:
  3030  020A  0BAE               	decfsz	??_MCU_Config,f
  3031  020B  2A0A               	goto	u1557
  3032  020C  0BAF               	decfsz	??_MCU_Config+1,f
  3033  020D  2A0A               	goto	u1557
  3034  020E  0BB0               	decfsz	??_MCU_Config+2,f
  3035  020F  2A0A               	goto	u1557
  3036                           
  3037                           ;Source/Header/Configuration.h: 23:     GPIO_Write(BUZZER.Port, BUZZER.Pin, 0);
  3038  0210  1283               	bcf	3,5	;RP0=0, select bank0
  3039  0211  1303               	bcf	3,6	;RP1=0, select bank0
  3040  0212  0859               	movf	_BUZZER,w
  3041  0213  00F2               	movwf	GPIO_Write@GPIO_Port
  3042  0214  085A               	movf	_BUZZER+1,w
  3043  0215  00F3               	movwf	GPIO_Write@GPIO_Port+1
  3044  0216  085B               	movf	_BUZZER+2,w
  3045  0217  00AE               	movwf	??_MCU_Config
  3046  0218  082E               	movf	??_MCU_Config,w
  3047  0219  00F4               	movwf	GPIO_Write@Pin
  3048  021A  01F5               	clrf	GPIO_Write@GPIO_State
  3049  021B  120A  118A  24E2  120A  118A  	fcall	_GPIO_Write
  3050                           
  3051                           ;Source/Header/Configuration.h: 24:     _delay((unsigned long)(((unsigned long)100)*(200
      +                          00000/4000.0)));
  3052  0220  3003               	movlw	3
  3053  0221  1283               	bcf	3,5	;RP0=0, select bank0
  3054  0222  1303               	bcf	3,6	;RP1=0, select bank0
  3055  0223  00B0               	movwf	??_MCU_Config+2
  3056  0224  308A               	movlw	138
  3057  0225  00AF               	movwf	??_MCU_Config+1
  3058  0226  3055               	movlw	85
  3059  0227  00AE               	movwf	??_MCU_Config
  3060  0228                     u1567:
  3061  0228  0BAE               	decfsz	??_MCU_Config,f
  3062  0229  2A28               	goto	u1567
  3063  022A  0BAF               	decfsz	??_MCU_Config+1,f
  3064  022B  2A28               	goto	u1567
  3065  022C  0BB0               	decfsz	??_MCU_Config+2,f
  3066  022D  2A28               	goto	u1567
  3067                           
  3068                           ;Source/Header/Configuration.h: 25:     GPIO_Write(BUZZER.Port, BUZZER.Pin, 1);
  3069  022E  1283               	bcf	3,5	;RP0=0, select bank0
  3070  022F  1303               	bcf	3,6	;RP1=0, select bank0
  3071  0230  0859               	movf	_BUZZER,w
  3072  0231  00F2               	movwf	GPIO_Write@GPIO_Port
  3073  0232  085A               	movf	_BUZZER+1,w
  3074  0233  00F3               	movwf	GPIO_Write@GPIO_Port+1
  3075  0234  085B               	movf	_BUZZER+2,w
  3076  0235  00AE               	movwf	??_MCU_Config
  3077  0236  082E               	movf	??_MCU_Config,w
  3078  0237  00F4               	movwf	GPIO_Write@Pin
  3079  0238  01F5               	clrf	GPIO_Write@GPIO_State
  3080  0239  0AF5               	incf	GPIO_Write@GPIO_State,f
  3081  023A  120A  118A  24E2  120A  118A  	fcall	_GPIO_Write
  3082                           
  3083                           ;Source/Header/Configuration.h: 26:     _delay((unsigned long)(((unsigned long)100)*(200
      +                          00000/4000.0)));
  3084  023F  3003               	movlw	3
  3085  0240  1283               	bcf	3,5	;RP0=0, select bank0
  3086  0241  1303               	bcf	3,6	;RP1=0, select bank0
  3087  0242  00B0               	movwf	??_MCU_Config+2
  3088  0243  308A               	movlw	138
  3089  0244  00AF               	movwf	??_MCU_Config+1
  3090  0245  3055               	movlw	85
  3091  0246  00AE               	movwf	??_MCU_Config
  3092  0247                     u1577:
  3093  0247  0BAE               	decfsz	??_MCU_Config,f
  3094  0248  2A47               	goto	u1577
  3095  0249  0BAF               	decfsz	??_MCU_Config+1,f
  3096  024A  2A47               	goto	u1577
  3097  024B  0BB0               	decfsz	??_MCU_Config+2,f
  3098  024C  2A47               	goto	u1577
  3099                           
  3100                           ;Source/Header/Configuration.h: 27:     GPIO_Write(BUZZER.Port, BUZZER.Pin, 0);
  3101  024D  1283               	bcf	3,5	;RP0=0, select bank0
  3102  024E  1303               	bcf	3,6	;RP1=0, select bank0
  3103  024F  0859               	movf	_BUZZER,w
  3104  0250  00F2               	movwf	GPIO_Write@GPIO_Port
  3105  0251  085A               	movf	_BUZZER+1,w
  3106  0252  00F3               	movwf	GPIO_Write@GPIO_Port+1
  3107  0253  085B               	movf	_BUZZER+2,w
  3108  0254  00AE               	movwf	??_MCU_Config
  3109  0255  082E               	movf	??_MCU_Config,w
  3110  0256  00F4               	movwf	GPIO_Write@Pin
  3111  0257  01F5               	clrf	GPIO_Write@GPIO_State
  3112  0258  120A  118A  24E2  120A  118A  	fcall	_GPIO_Write
  3113                           
  3114                           ;Source/Header/Configuration.h: 28:     _delay((unsigned long)(((unsigned long)100)*(200
      +                          00000/4000.0)));
  3115  025D  3003               	movlw	3
  3116  025E  1283               	bcf	3,5	;RP0=0, select bank0
  3117  025F  1303               	bcf	3,6	;RP1=0, select bank0
  3118  0260  00B0               	movwf	??_MCU_Config+2
  3119  0261  308A               	movlw	138
  3120  0262  00AF               	movwf	??_MCU_Config+1
  3121  0263  3055               	movlw	85
  3122  0264  00AE               	movwf	??_MCU_Config
  3123  0265                     u1587:
  3124  0265  0BAE               	decfsz	??_MCU_Config,f
  3125  0266  2A65               	goto	u1587
  3126  0267  0BAF               	decfsz	??_MCU_Config+1,f
  3127  0268  2A65               	goto	u1587
  3128  0269  0BB0               	decfsz	??_MCU_Config+2,f
  3129  026A  2A65               	goto	u1587
  3130                           
  3131                           ;Source/Header/Configuration.h: 29:     GPIO_Write(BUZZER.Port, BUZZER.Pin, 1);
  3132  026B  1283               	bcf	3,5	;RP0=0, select bank0
  3133  026C  1303               	bcf	3,6	;RP1=0, select bank0
  3134  026D  0859               	movf	_BUZZER,w
  3135  026E  00F2               	movwf	GPIO_Write@GPIO_Port
  3136  026F  085A               	movf	_BUZZER+1,w
  3137  0270  00F3               	movwf	GPIO_Write@GPIO_Port+1
  3138  0271  085B               	movf	_BUZZER+2,w
  3139  0272  00AE               	movwf	??_MCU_Config
  3140  0273  082E               	movf	??_MCU_Config,w
  3141  0274  00F4               	movwf	GPIO_Write@Pin
  3142  0275  01F5               	clrf	GPIO_Write@GPIO_State
  3143  0276  0AF5               	incf	GPIO_Write@GPIO_State,f
  3144  0277  120A  118A  24E2  120A  118A  	fcall	_GPIO_Write
  3145                           
  3146                           ;Source/Header/Configuration.h: 30:     _delay((unsigned long)(((unsigned long)100)*(200
      +                          00000/4000.0)));
  3147  027C  3003               	movlw	3
  3148  027D  1283               	bcf	3,5	;RP0=0, select bank0
  3149  027E  1303               	bcf	3,6	;RP1=0, select bank0
  3150  027F  00B0               	movwf	??_MCU_Config+2
  3151  0280  308A               	movlw	138
  3152  0281  00AF               	movwf	??_MCU_Config+1
  3153  0282  3055               	movlw	85
  3154  0283  00AE               	movwf	??_MCU_Config
  3155  0284                     u1597:
  3156  0284  0BAE               	decfsz	??_MCU_Config,f
  3157  0285  2A84               	goto	u1597
  3158  0286  0BAF               	decfsz	??_MCU_Config+1,f
  3159  0287  2A84               	goto	u1597
  3160  0288  0BB0               	decfsz	??_MCU_Config+2,f
  3161  0289  2A84               	goto	u1597
  3162                           
  3163                           ;Source/Header/Configuration.h: 31:     GPIO_Write(BUZZER.Port, BUZZER.Pin, 0);
  3164  028A  1283               	bcf	3,5	;RP0=0, select bank0
  3165  028B  1303               	bcf	3,6	;RP1=0, select bank0
  3166  028C  0859               	movf	_BUZZER,w
  3167  028D  00F2               	movwf	GPIO_Write@GPIO_Port
  3168  028E  085A               	movf	_BUZZER+1,w
  3169  028F  00F3               	movwf	GPIO_Write@GPIO_Port+1
  3170  0290  085B               	movf	_BUZZER+2,w
  3171  0291  00AE               	movwf	??_MCU_Config
  3172  0292  082E               	movf	??_MCU_Config,w
  3173  0293  00F4               	movwf	GPIO_Write@Pin
  3174  0294  01F5               	clrf	GPIO_Write@GPIO_State
  3175  0295  120A  118A  24E2  120A  118A  	fcall	_GPIO_Write
  3176                           
  3177                           ;Source/Header/Configuration.h: 32:     _delay((unsigned long)(((unsigned long)100)*(200
      +                          00000/4000.0)));
  3178  029A  3003               	movlw	3
  3179  029B  1283               	bcf	3,5	;RP0=0, select bank0
  3180  029C  1303               	bcf	3,6	;RP1=0, select bank0
  3181  029D  00B0               	movwf	??_MCU_Config+2
  3182  029E  308A               	movlw	138
  3183  029F  00AF               	movwf	??_MCU_Config+1
  3184  02A0  3055               	movlw	85
  3185  02A1  00AE               	movwf	??_MCU_Config
  3186  02A2                     u1607:
  3187  02A2  0BAE               	decfsz	??_MCU_Config,f
  3188  02A3  2AA2               	goto	u1607
  3189  02A4  0BAF               	decfsz	??_MCU_Config+1,f
  3190  02A5  2AA2               	goto	u1607
  3191  02A6  0BB0               	decfsz	??_MCU_Config+2,f
  3192  02A7  2AA2               	goto	u1607
  3193                           
  3194                           ;Source/Header/Configuration.h: 33:     GPIO_Write(BUZZER.Port, BUZZER.Pin, 1);
  3195  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  3196  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  3197  02AA  0859               	movf	_BUZZER,w
  3198  02AB  00F2               	movwf	GPIO_Write@GPIO_Port
  3199  02AC  085A               	movf	_BUZZER+1,w
  3200  02AD  00F3               	movwf	GPIO_Write@GPIO_Port+1
  3201  02AE  085B               	movf	_BUZZER+2,w
  3202  02AF  00AE               	movwf	??_MCU_Config
  3203  02B0  082E               	movf	??_MCU_Config,w
  3204  02B1  00F4               	movwf	GPIO_Write@Pin
  3205  02B2  01F5               	clrf	GPIO_Write@GPIO_State
  3206  02B3  0AF5               	incf	GPIO_Write@GPIO_State,f
  3207  02B4  120A  118A  24E2  120A  118A  	fcall	_GPIO_Write
  3208                           
  3209                           ;Source/Header/Configuration.h: 34:     _delay((unsigned long)(((unsigned long)1000)*(20
      +                          000000/4000.0)));
  3210  02B9  301A               	movlw	26
  3211  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  3212  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  3213  02BC  00B0               	movwf	??_MCU_Config+2
  3214  02BD  305E               	movlw	94
  3215  02BE  00AF               	movwf	??_MCU_Config+1
  3216  02BF  306D               	movlw	109
  3217  02C0  00AE               	movwf	??_MCU_Config
  3218  02C1                     u1617:
  3219  02C1  0BAE               	decfsz	??_MCU_Config,f
  3220  02C2  2AC1               	goto	u1617
  3221  02C3  0BAF               	decfsz	??_MCU_Config+1,f
  3222  02C4  2AC1               	goto	u1617
  3223  02C5  0BB0               	decfsz	??_MCU_Config+2,f
  3224  02C6  2AC1               	goto	u1617
  3225  02C7  2AC8               	nop2
  3226                           
  3227                           ;Source/Header/Configuration.h: 35:     GPIO_Write(BUZZER.Port, BUZZER.Pin, 0);
  3228  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  3229  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  3230  02CA  0859               	movf	_BUZZER,w
  3231  02CB  00F2               	movwf	GPIO_Write@GPIO_Port
  3232  02CC  085A               	movf	_BUZZER+1,w
  3233  02CD  00F3               	movwf	GPIO_Write@GPIO_Port+1
  3234  02CE  085B               	movf	_BUZZER+2,w
  3235  02CF  00AE               	movwf	??_MCU_Config
  3236  02D0  082E               	movf	??_MCU_Config,w
  3237  02D1  00F4               	movwf	GPIO_Write@Pin
  3238  02D2  01F5               	clrf	GPIO_Write@GPIO_State
  3239  02D3  120A  118A  24E2  120A  118A  	fcall	_GPIO_Write
  3240                           
  3241                           ;Source/Header/Configuration.h: 36:     _delay((unsigned long)(((unsigned long)100)*(200
      +                          00000/4000.0)));
  3242  02D8  3003               	movlw	3
  3243  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  3244  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  3245  02DB  00B0               	movwf	??_MCU_Config+2
  3246  02DC  308A               	movlw	138
  3247  02DD  00AF               	movwf	??_MCU_Config+1
  3248  02DE  3055               	movlw	85
  3249  02DF  00AE               	movwf	??_MCU_Config
  3250  02E0                     u1627:
  3251  02E0  0BAE               	decfsz	??_MCU_Config,f
  3252  02E1  2AE0               	goto	u1627
  3253  02E2  0BAF               	decfsz	??_MCU_Config+1,f
  3254  02E3  2AE0               	goto	u1627
  3255  02E4  0BB0               	decfsz	??_MCU_Config+2,f
  3256  02E5  2AE0               	goto	u1627
  3257                           
  3258                           ;Source/Header/Configuration.h: 37:     Timer2_Interrupt_Init();
  3259  02E6  120A  158A  26DF  120A  118A  	fcall	_Timer2_Interrupt_Init
  3260                           
  3261                           ;Source/Header/Configuration.h: 40:     ADCON0 = 0x00;
  3262  02EB  019F               	clrf	31	;volatile
  3263                           
  3264                           ;Source/Header/Configuration.h: 41:     ADCON1 = 0x00;
  3265  02EC  1683               	bsf	3,5	;RP0=1, select bank1
  3266  02ED  019F               	clrf	31	;volatile
  3267                           
  3268                           ;Source/Header/Configuration.h: 43:     ADCON1 |= (7 << 0);
  3269  02EE  3007               	movlw	7
  3270  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  3271  02F0  00AE               	movwf	??_MCU_Config
  3272  02F1  082E               	movf	??_MCU_Config,w
  3273  02F2  1683               	bsf	3,5	;RP0=1, select bank1
  3274  02F3  049F               	iorwf	31,f	;volatile
  3275                           
  3276                           ;Source/Header/Configuration.h: 46:     UART_BASE_Init(9600);
  3277  02F4  3000               	movlw	0
  3278  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  3279  02F6  00A9               	movwf	UART_BASE_Init@baud+3
  3280  02F7  3000               	movlw	0
  3281  02F8  00A8               	movwf	UART_BASE_Init@baud+2
  3282  02F9  3025               	movlw	37
  3283  02FA  00A7               	movwf	UART_BASE_Init@baud+1
  3284  02FB  3080               	movlw	128
  3285  02FC  00A6               	movwf	UART_BASE_Init@baud
  3286  02FD  120A  158A  279D  120A  118A  	fcall	_UART_BASE_Init
  3287                           
  3288                           ;Source/Header/Configuration.h: 48:     GPIO_Write(LED2.Port, LED2.Pin, 0);
  3289  0302  1283               	bcf	3,5	;RP0=0, select bank0
  3290  0303  085C               	movf	_LED2,w
  3291  0304  00F2               	movwf	GPIO_Write@GPIO_Port
  3292  0305  085D               	movf	_LED2+1,w
  3293  0306  00F3               	movwf	GPIO_Write@GPIO_Port+1
  3294  0307  085E               	movf	_LED2+2,w
  3295  0308  00AE               	movwf	??_MCU_Config
  3296  0309  082E               	movf	??_MCU_Config,w
  3297  030A  00F4               	movwf	GPIO_Write@Pin
  3298  030B  01F5               	clrf	GPIO_Write@GPIO_State
  3299  030C  120A  118A  24E2   	fcall	_GPIO_Write
  3300  030F  0008               	return
  3301  0310                     __end_of_MCU_Config:
  3302                           
  3303                           	psect	text14
  3304  0F9D                     __ptext14:	
  3305 ;; *************** function _UART_BASE_Init *****************
  3306 ;; Defined at:
  3307 ;;		line 15 in file "Source/Header/UART.h"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;  baud            4    6[BANK0 ] long 
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;		None
  3312 ;; Return value:  Size  Location     Type
  3313 ;;                  1    wreg      void 
  3314 ;; Registers used:
  3315 ;;		wreg, status,2, status,0, pclath, cstack
  3316 ;; Tracked objects:
  3317 ;;		On entry : 300/0
  3318 ;;		On exit  : 300/100
  3319 ;;		Unchanged: 0/0
  3320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3321 ;;      Params:         0       4       0       0       0
  3322 ;;      Locals:         0       0       0       0       0
  3323 ;;      Temps:          0       4       0       0       0
  3324 ;;      Totals:         0       8       0       0       0
  3325 ;;Total ram usage:        8 bytes
  3326 ;; Hardware stack levels used: 1
  3327 ;; Hardware stack levels required when called: 2
  3328 ;; This function calls:
  3329 ;;		___aldiv
  3330 ;; This function is called by:
  3331 ;;		_MCU_Config
  3332 ;; This function uses a non-reentrant model
  3333 ;;
  3334                           
  3335  0F9D                     _UART_BASE_Init:	
  3336                           ;psect for function _UART_BASE_Init
  3337                           
  3338                           
  3339                           ;Source/Header/UART.h: 15:     void UART_BASE_Init(long baud);Source/Header/UART.h: 16: 
      +                              {;Source/Header/UART.h: 17:         TRISC = 0X80;
  3340                           
  3341                           ;incstack = 0
  3342                           ; Regs used in _UART_BASE_Init: [wreg+status,2+status,0+pclath+cstack]
  3343  0F9D  3080               	movlw	128
  3344  0F9E  1683               	bsf	3,5	;RP0=1, select bank1
  3345  0F9F  0087               	movwf	7	;volatile
  3346                           
  3347                           ;Source/Header/UART.h: 18:         TXSTA = 0X24;
  3348  0FA0  3024               	movlw	36
  3349  0FA1  0098               	movwf	24	;volatile
  3350                           
  3351                           ;Source/Header/UART.h: 19:         RCSTA = 0X90;
  3352  0FA2  3090               	movlw	144
  3353  0FA3  1283               	bcf	3,5	;RP0=0, select bank0
  3354  0FA4  0098               	movwf	24	;volatile
  3355                           
  3356                           ;Source/Header/UART.h: 20:         SPBRG = (20000000 / (long)(16UL * baud)) - 1;
  3357  0FA5  0826               	movf	UART_BASE_Init@baud,w
  3358  0FA6  00AA               	movwf	??_UART_BASE_Init
  3359  0FA7  0827               	movf	UART_BASE_Init@baud+1,w
  3360  0FA8  00AB               	movwf	??_UART_BASE_Init+1
  3361  0FA9  0828               	movf	UART_BASE_Init@baud+2,w
  3362  0FAA  00AC               	movwf	??_UART_BASE_Init+2
  3363  0FAB  0829               	movf	UART_BASE_Init@baud+3,w
  3364  0FAC  00AD               	movwf	??_UART_BASE_Init+3
  3365  0FAD  3004               	movlw	4
  3366  0FAE                     u985:
  3367  0FAE  1003               	clrc
  3368  0FAF  0DAA               	rlf	??_UART_BASE_Init,f
  3369  0FB0  0DAB               	rlf	??_UART_BASE_Init+1,f
  3370  0FB1  0DAC               	rlf	??_UART_BASE_Init+2,f
  3371  0FB2  0DAD               	rlf	??_UART_BASE_Init+3,f
  3372  0FB3  3EFF               	addlw	-1
  3373  0FB4  1D03               	skipz
  3374  0FB5  2FAE               	goto	u985
  3375  0FB6  082D               	movf	??_UART_BASE_Init+3,w
  3376  0FB7  00F5               	movwf	___aldiv@divisor+3
  3377  0FB8  082C               	movf	??_UART_BASE_Init+2,w
  3378  0FB9  00F4               	movwf	___aldiv@divisor+2
  3379  0FBA  082B               	movf	??_UART_BASE_Init+1,w
  3380  0FBB  00F3               	movwf	___aldiv@divisor+1
  3381  0FBC  082A               	movf	??_UART_BASE_Init,w
  3382  0FBD  00F2               	movwf	___aldiv@divisor
  3383  0FBE  3001               	movlw	1
  3384  0FBF  00F9               	movwf	___aldiv@dividend+3
  3385  0FC0  3031               	movlw	49
  3386  0FC1  00F8               	movwf	___aldiv@dividend+2
  3387  0FC2  302D               	movlw	45
  3388  0FC3  00F7               	movwf	___aldiv@dividend+1
  3389  0FC4  3000               	movlw	0
  3390  0FC5  00F6               	movwf	___aldiv@dividend
  3391  0FC6  120A  118A  263A   	fcall	___aldiv
  3392  0FC9  0872               	movf	?___aldiv,w
  3393  0FCA  3EFF               	addlw	255
  3394  0FCB  1683               	bsf	3,5	;RP0=1, select bank1
  3395  0FCC  0099               	movwf	25	;volatile
  3396  0FCD  0008               	return
  3397  0FCE                     __end_of_UART_BASE_Init:
  3398                           
  3399                           	psect	text15
  3400  063A                     __ptext15:	
  3401 ;; *************** function ___aldiv *****************
  3402 ;; Defined at:
  3403 ;;		line 5 in file "E:\Program Files (x86)\Microchip\xc8\v2.36\pic\sources\c90\common\aldiv.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;  divisor         4    2[COMMON] long 
  3406 ;;  dividend        4    6[COMMON] long 
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;  quotient        4    2[BANK0 ] long 
  3409 ;;  sign            1    1[BANK0 ] unsigned char 
  3410 ;;  counter         1    0[BANK0 ] unsigned char 
  3411 ;; Return value:  Size  Location     Type
  3412 ;;                  4    2[COMMON] long 
  3413 ;; Registers used:
  3414 ;;		wreg, status,2, status,0
  3415 ;; Tracked objects:
  3416 ;;		On entry : 300/0
  3417 ;;		On exit  : 300/0
  3418 ;;		Unchanged: 0/0
  3419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3420 ;;      Params:         8       0       0       0       0
  3421 ;;      Locals:         0       6       0       0       0
  3422 ;;      Temps:          1       0       0       0       0
  3423 ;;      Totals:         9       6       0       0       0
  3424 ;;Total ram usage:       15 bytes
  3425 ;; Hardware stack levels used: 1
  3426 ;; Hardware stack levels required when called: 1
  3427 ;; This function calls:
  3428 ;;		Nothing
  3429 ;; This function is called by:
  3430 ;;		_UART_BASE_Init
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433                           
  3434  063A                     ___aldiv:	
  3435                           ;psect for function ___aldiv
  3436                           
  3437                           
  3438                           ;incstack = 0
  3439                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3440  063A  01A1               	clrf	___aldiv@sign
  3441  063B  1FF5               	btfss	___aldiv@divisor+3,7
  3442  063C  2E4A               	goto	l445
  3443  063D  09F2               	comf	___aldiv@divisor,f
  3444  063E  09F3               	comf	___aldiv@divisor+1,f
  3445  063F  09F4               	comf	___aldiv@divisor+2,f
  3446  0640  09F5               	comf	___aldiv@divisor+3,f
  3447  0641  0AF2               	incf	___aldiv@divisor,f
  3448  0642  1903               	skipnz
  3449  0643  0AF3               	incf	___aldiv@divisor+1,f
  3450  0644  1903               	skipnz
  3451  0645  0AF4               	incf	___aldiv@divisor+2,f
  3452  0646  1903               	skipnz
  3453  0647  0AF5               	incf	___aldiv@divisor+3,f
  3454  0648  01A1               	clrf	___aldiv@sign
  3455  0649  0AA1               	incf	___aldiv@sign,f
  3456  064A                     l445:
  3457  064A  1FF9               	btfss	___aldiv@dividend+3,7
  3458  064B  2E5B               	goto	l1390
  3459  064C  09F6               	comf	___aldiv@dividend,f
  3460  064D  09F7               	comf	___aldiv@dividend+1,f
  3461  064E  09F8               	comf	___aldiv@dividend+2,f
  3462  064F  09F9               	comf	___aldiv@dividend+3,f
  3463  0650  0AF6               	incf	___aldiv@dividend,f
  3464  0651  1903               	skipnz
  3465  0652  0AF7               	incf	___aldiv@dividend+1,f
  3466  0653  1903               	skipnz
  3467  0654  0AF8               	incf	___aldiv@dividend+2,f
  3468  0655  1903               	skipnz
  3469  0656  0AF9               	incf	___aldiv@dividend+3,f
  3470  0657  3001               	movlw	1
  3471  0658  00FA               	movwf	??___aldiv
  3472  0659  087A               	movf	??___aldiv,w
  3473  065A  06A1               	xorwf	___aldiv@sign,f
  3474  065B                     l1390:
  3475  065B  3000               	movlw	0
  3476  065C  00A5               	movwf	___aldiv@quotient+3
  3477  065D  3000               	movlw	0
  3478  065E  00A4               	movwf	___aldiv@quotient+2
  3479  065F  3000               	movlw	0
  3480  0660  00A3               	movwf	___aldiv@quotient+1
  3481  0661  3000               	movlw	0
  3482  0662  00A2               	movwf	___aldiv@quotient
  3483  0663  0875               	movf	___aldiv@divisor+3,w
  3484  0664  0474               	iorwf	___aldiv@divisor+2,w
  3485  0665  0473               	iorwf	___aldiv@divisor+1,w
  3486  0666  0472               	iorwf	___aldiv@divisor,w
  3487  0667  1903               	skipnz
  3488  0668  2EB0               	goto	l1412
  3489  0669  01A0               	clrf	___aldiv@counter
  3490  066A  0AA0               	incf	___aldiv@counter,f
  3491  066B                     l1398:
  3492  066B  1BF5               	btfsc	___aldiv@divisor+3,7
  3493  066C  2E7B               	goto	l1400
  3494  066D  3001               	movlw	1
  3495  066E  00FA               	movwf	??___aldiv
  3496  066F                     u895:
  3497  066F  1003               	clrc
  3498  0670  0DF2               	rlf	___aldiv@divisor,f
  3499  0671  0DF3               	rlf	___aldiv@divisor+1,f
  3500  0672  0DF4               	rlf	___aldiv@divisor+2,f
  3501  0673  0DF5               	rlf	___aldiv@divisor+3,f
  3502  0674  0BFA               	decfsz	??___aldiv,f
  3503  0675  2E6F               	goto	u895
  3504  0676  3001               	movlw	1
  3505  0677  00FA               	movwf	??___aldiv
  3506  0678  087A               	movf	??___aldiv,w
  3507  0679  07A0               	addwf	___aldiv@counter,f
  3508  067A  2E6B               	goto	l1398
  3509  067B                     l1400:
  3510  067B  3001               	movlw	1
  3511  067C  00FA               	movwf	??___aldiv
  3512  067D                     u915:
  3513  067D  1003               	clrc
  3514  067E  0DA2               	rlf	___aldiv@quotient,f
  3515  067F  0DA3               	rlf	___aldiv@quotient+1,f
  3516  0680  0DA4               	rlf	___aldiv@quotient+2,f
  3517  0681  0DA5               	rlf	___aldiv@quotient+3,f
  3518  0682  0BFA               	decfsz	??___aldiv,f
  3519  0683  2E7D               	goto	u915
  3520  0684  0875               	movf	___aldiv@divisor+3,w
  3521  0685  0279               	subwf	___aldiv@dividend+3,w
  3522  0686  1D03               	skipz
  3523  0687  2E92               	goto	u925
  3524  0688  0874               	movf	___aldiv@divisor+2,w
  3525  0689  0278               	subwf	___aldiv@dividend+2,w
  3526  068A  1D03               	skipz
  3527  068B  2E92               	goto	u925
  3528  068C  0873               	movf	___aldiv@divisor+1,w
  3529  068D  0277               	subwf	___aldiv@dividend+1,w
  3530  068E  1D03               	skipz
  3531  068F  2E92               	goto	u925
  3532  0690  0872               	movf	___aldiv@divisor,w
  3533  0691  0276               	subwf	___aldiv@dividend,w
  3534  0692                     u925:
  3535  0692  1C03               	skipc
  3536  0693  2EA3               	goto	l1408
  3537  0694  0872               	movf	___aldiv@divisor,w
  3538  0695  02F6               	subwf	___aldiv@dividend,f
  3539  0696  0873               	movf	___aldiv@divisor+1,w
  3540  0697  1C03               	skipc
  3541  0698  0F73               	incfsz	___aldiv@divisor+1,w
  3542  0699  02F7               	subwf	___aldiv@dividend+1,f
  3543  069A  0874               	movf	___aldiv@divisor+2,w
  3544  069B  1C03               	skipc
  3545  069C  0F74               	incfsz	___aldiv@divisor+2,w
  3546  069D  02F8               	subwf	___aldiv@dividend+2,f
  3547  069E  0875               	movf	___aldiv@divisor+3,w
  3548  069F  1C03               	skipc
  3549  06A0  0F75               	incfsz	___aldiv@divisor+3,w
  3550  06A1  02F9               	subwf	___aldiv@dividend+3,f
  3551  06A2  1422               	bsf	___aldiv@quotient,0
  3552  06A3                     l1408:
  3553  06A3  3001               	movlw	1
  3554  06A4                     u935:
  3555  06A4  1003               	clrc
  3556  06A5  0CF5               	rrf	___aldiv@divisor+3,f
  3557  06A6  0CF4               	rrf	___aldiv@divisor+2,f
  3558  06A7  0CF3               	rrf	___aldiv@divisor+1,f
  3559  06A8  0CF2               	rrf	___aldiv@divisor,f
  3560  06A9  3EFF               	addlw	-1
  3561  06AA  1D03               	skipz
  3562  06AB  2EA4               	goto	u935
  3563  06AC  3001               	movlw	1
  3564  06AD  02A0               	subwf	___aldiv@counter,f
  3565  06AE  1D03               	btfss	3,2
  3566  06AF  2E7B               	goto	l1400
  3567  06B0                     l1412:
  3568  06B0  0821               	movf	___aldiv@sign,w
  3569  06B1  1903               	btfsc	3,2
  3570  06B2  2EBE               	goto	l1416
  3571  06B3  09A2               	comf	___aldiv@quotient,f
  3572  06B4  09A3               	comf	___aldiv@quotient+1,f
  3573  06B5  09A4               	comf	___aldiv@quotient+2,f
  3574  06B6  09A5               	comf	___aldiv@quotient+3,f
  3575  06B7  0AA2               	incf	___aldiv@quotient,f
  3576  06B8  1903               	skipnz
  3577  06B9  0AA3               	incf	___aldiv@quotient+1,f
  3578  06BA  1903               	skipnz
  3579  06BB  0AA4               	incf	___aldiv@quotient+2,f
  3580  06BC  1903               	skipnz
  3581  06BD  0AA5               	incf	___aldiv@quotient+3,f
  3582  06BE                     l1416:
  3583  06BE  0825               	movf	___aldiv@quotient+3,w
  3584  06BF  00F5               	movwf	?___aldiv+3
  3585  06C0  0824               	movf	___aldiv@quotient+2,w
  3586  06C1  00F4               	movwf	?___aldiv+2
  3587  06C2  0823               	movf	___aldiv@quotient+1,w
  3588  06C3  00F3               	movwf	?___aldiv+1
  3589  06C4  0822               	movf	___aldiv@quotient,w
  3590  06C5  00F2               	movwf	?___aldiv
  3591  06C6  0008               	return
  3592  06C7                     __end_of___aldiv:
  3593                           
  3594                           	psect	text16
  3595  0EDF                     __ptext16:	
  3596 ;; *************** function _Timer2_Interrupt_Init *****************
  3597 ;; Defined at:
  3598 ;;		line 224 in file "Source/Header/Timer.h"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;		None
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;		None
  3603 ;; Return value:  Size  Location     Type
  3604 ;;                  1    wreg      void 
  3605 ;; Registers used:
  3606 ;;		status,2
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/100
  3609 ;;		On exit  : 300/0
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3612 ;;      Params:         0       0       0       0       0
  3613 ;;      Locals:         0       0       0       0       0
  3614 ;;      Temps:          0       0       0       0       0
  3615 ;;      Totals:         0       0       0       0       0
  3616 ;;Total ram usage:        0 bytes
  3617 ;; Hardware stack levels used: 1
  3618 ;; Hardware stack levels required when called: 1
  3619 ;; This function calls:
  3620 ;;		Nothing
  3621 ;; This function is called by:
  3622 ;;		_MCU_Config
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626  0EDF                     _Timer2_Interrupt_Init:	
  3627                           ;psect for function _Timer2_Interrupt_Init
  3628                           
  3629                           
  3630                           ;Source/Header/Timer.h: 226:         T2CON = 0x00;
  3631                           
  3632                           ;incstack = 0
  3633                           ; Regs used in _Timer2_Interrupt_Init: [status,2]
  3634  0EDF  1283               	bcf	3,5	;RP0=0, select bank0
  3635  0EE0  1303               	bcf	3,6	;RP1=0, select bank0
  3636  0EE1  0192               	clrf	18	;volatile
  3637                           
  3638                           ;Source/Header/Timer.h: 232:         TMR2ON = 1;
  3639  0EE2  1512               	bsf	18,2	;volatile
  3640                           
  3641                           ;Source/Header/Timer.h: 239:         T2CKPS1 = 1;
  3642  0EE3  1492               	bsf	18,1	;volatile
  3643                           
  3644                           ;Source/Header/Timer.h: 247:         INTCON |= (1 << 7);
  3645  0EE4  178B               	bsf	11,7	;volatile
  3646                           
  3647                           ;Source/Header/Timer.h: 253:         INTCON |= (1 << 6);
  3648  0EE5  170B               	bsf	11,6	;volatile
  3649                           
  3650                           ;Source/Header/Timer.h: 259:         TMR2IE = 1;
  3651  0EE6  1683               	bsf	3,5	;RP0=1, select bank1
  3652  0EE7  148C               	bsf	12,1	;volatile
  3653                           
  3654                           ;Source/Header/Timer.h: 265:         TMR2IF = 0;
  3655  0EE8  1283               	bcf	3,5	;RP0=0, select bank0
  3656  0EE9  108C               	bcf	12,1	;volatile
  3657  0EEA  0008               	return
  3658  0EEB                     __end_of_Timer2_Interrupt_Init:
  3659                           
  3660                           	psect	text17
  3661  04E2                     __ptext17:	
  3662 ;; *************** function _GPIO_Write *****************
  3663 ;; Defined at:
  3664 ;;		line 12 in file "Source/Header/GPIO.h"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;  GPIO_Port       2    2[COMMON] PTR volatile unsigned ch
  3667 ;;		 -> PORTA(1), PORTE(1), PORTD(1), PORTC(1), 
  3668 ;;		 -> PORTB(1), 
  3669 ;;  Pin             1    4[COMMON] unsigned char 
  3670 ;;  GPIO_State      1    5[COMMON] unsigned char 
  3671 ;; Auto vars:     Size  Location     Type
  3672 ;;		None
  3673 ;; Return value:  Size  Location     Type
  3674 ;;                  1    wreg      void 
  3675 ;; Registers used:
  3676 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3677 ;; Tracked objects:
  3678 ;;		On entry : 0/0
  3679 ;;		On exit  : 300/100
  3680 ;;		Unchanged: 0/0
  3681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3682 ;;      Params:         4       0       0       0       0
  3683 ;;      Locals:         0       0       0       0       0
  3684 ;;      Temps:          2       0       0       0       0
  3685 ;;      Totals:         6       0       0       0       0
  3686 ;;Total ram usage:        6 bytes
  3687 ;; Hardware stack levels used: 1
  3688 ;; Hardware stack levels required when called: 1
  3689 ;; This function calls:
  3690 ;;		Nothing
  3691 ;; This function is called by:
  3692 ;;		_MCU_Config
  3693 ;;		_Motor_Stop
  3694 ;;		_Motor_Forward_Start
  3695 ;;		_Motor_Reverse_Start
  3696 ;;		_UltraSonicSensor_Read
  3697 ;;		_main
  3698 ;; This function uses a non-reentrant model
  3699 ;;
  3700                           
  3701  04E2                     _GPIO_Write:	
  3702                           ;psect for function _GPIO_Write
  3703                           
  3704                           
  3705                           ;Source/Header/GPIO.h: 12:     void GPIO_Write(volatile unsigned char *GPIO_Port, unsign
      +                          ed char Pin, unsigned char GPIO_State);Source/Header/GPIO.h: 13:     {;Source/Header/GPI
      +                          O.h: 14:         if(GPIO_Port == &PORTA)
  3706                           
  3707                           ;incstack = 0
  3708                           ; Regs used in _GPIO_Write: [wreg-fsr0h+status,2+status,0]
  3709  04E2  3000               	movlw	0
  3710  04E3  0673               	xorwf	GPIO_Write@GPIO_Port+1,w
  3711  04E4  1D03               	skipz
  3712  04E5  2CE8               	goto	u755
  3713  04E6  3005               	movlw	5
  3714  04E7  0672               	xorwf	GPIO_Write@GPIO_Port,w
  3715  04E8                     u755:
  3716  04E8  1D03               	skipz
  3717  04E9  2CFB               	goto	l1350
  3718                           
  3719                           ;Source/Header/GPIO.h: 15:         {;Source/Header/GPIO.h: 16:             TRISA &= ~(1 
      +                          << Pin);
  3720  04EA  3001               	movlw	1
  3721  04EB  00F6               	movwf	??_GPIO_Write
  3722  04EC  0A74               	incf	GPIO_Write@Pin,w
  3723  04ED  2CF0               	goto	u764
  3724  04EE                     u765:
  3725  04EE  1003               	clrc
  3726  04EF  0DF6               	rlf	??_GPIO_Write,f
  3727  04F0                     u764:
  3728  04F0  3EFF               	addlw	-1
  3729  04F1  1D03               	skipz
  3730  04F2  2CEE               	goto	u765
  3731  04F3  0876               	movf	??_GPIO_Write,w
  3732  04F4  3AFF               	xorlw	255
  3733  04F5  00F7               	movwf	??_GPIO_Write+1
  3734  04F6  0877               	movf	??_GPIO_Write+1,w
  3735  04F7  1683               	bsf	3,5	;RP0=1, select bank1
  3736  04F8  1303               	bcf	3,6	;RP1=0, select bank1
  3737  04F9  0585               	andwf	5,f	;volatile
  3738                           
  3739                           ;Source/Header/GPIO.h: 17:         }
  3740  04FA  2D7E               	goto	l1372
  3741  04FB                     l1350:
  3742  04FB  3000               	movlw	0
  3743  04FC  0673               	xorwf	GPIO_Write@GPIO_Port+1,w
  3744  04FD  1D03               	skipz
  3745  04FE  2D01               	goto	u775
  3746  04FF  3006               	movlw	6
  3747  0500  0672               	xorwf	GPIO_Write@GPIO_Port,w
  3748  0501                     u775:
  3749  0501  1D03               	skipz
  3750  0502  2D14               	goto	l1354
  3751                           
  3752                           ;Source/Header/GPIO.h: 19:         {;Source/Header/GPIO.h: 20:             TRISB &= ~(1 
      +                          << Pin);
  3753  0503  3001               	movlw	1
  3754  0504  00F6               	movwf	??_GPIO_Write
  3755  0505  0A74               	incf	GPIO_Write@Pin,w
  3756  0506  2D09               	goto	u784
  3757  0507                     u785:
  3758  0507  1003               	clrc
  3759  0508  0DF6               	rlf	??_GPIO_Write,f
  3760  0509                     u784:
  3761  0509  3EFF               	addlw	-1
  3762  050A  1D03               	skipz
  3763  050B  2D07               	goto	u785
  3764  050C  0876               	movf	??_GPIO_Write,w
  3765  050D  3AFF               	xorlw	255
  3766  050E  00F7               	movwf	??_GPIO_Write+1
  3767  050F  0877               	movf	??_GPIO_Write+1,w
  3768  0510  1683               	bsf	3,5	;RP0=1, select bank1
  3769  0511  1303               	bcf	3,6	;RP1=0, select bank1
  3770  0512  0586               	andwf	6,f	;volatile
  3771                           
  3772                           ;Source/Header/GPIO.h: 21:         }
  3773  0513  2D7E               	goto	l1372
  3774  0514                     l1354:
  3775  0514  3000               	movlw	0
  3776  0515  0673               	xorwf	GPIO_Write@GPIO_Port+1,w
  3777  0516  1D03               	skipz
  3778  0517  2D1A               	goto	u795
  3779  0518  3007               	movlw	7
  3780  0519  0672               	xorwf	GPIO_Write@GPIO_Port,w
  3781  051A                     u795:
  3782  051A  1D03               	skipz
  3783  051B  2D2D               	goto	l1358
  3784                           
  3785                           ;Source/Header/GPIO.h: 23:         {;Source/Header/GPIO.h: 24:             TRISC &= ~(1 
      +                          << Pin);
  3786  051C  3001               	movlw	1
  3787  051D  00F6               	movwf	??_GPIO_Write
  3788  051E  0A74               	incf	GPIO_Write@Pin,w
  3789  051F  2D22               	goto	u804
  3790  0520                     u805:
  3791  0520  1003               	clrc
  3792  0521  0DF6               	rlf	??_GPIO_Write,f
  3793  0522                     u804:
  3794  0522  3EFF               	addlw	-1
  3795  0523  1D03               	skipz
  3796  0524  2D20               	goto	u805
  3797  0525  0876               	movf	??_GPIO_Write,w
  3798  0526  3AFF               	xorlw	255
  3799  0527  00F7               	movwf	??_GPIO_Write+1
  3800  0528  0877               	movf	??_GPIO_Write+1,w
  3801  0529  1683               	bsf	3,5	;RP0=1, select bank1
  3802  052A  1303               	bcf	3,6	;RP1=0, select bank1
  3803  052B  0587               	andwf	7,f	;volatile
  3804                           
  3805                           ;Source/Header/GPIO.h: 25:         }
  3806  052C  2D7E               	goto	l1372
  3807  052D                     l1358:
  3808  052D  3000               	movlw	0
  3809  052E  0673               	xorwf	GPIO_Write@GPIO_Port+1,w
  3810  052F  1D03               	skipz
  3811  0530  2D33               	goto	u815
  3812  0531  3008               	movlw	8
  3813  0532  0672               	xorwf	GPIO_Write@GPIO_Port,w
  3814  0533                     u815:
  3815  0533  1D03               	skipz
  3816  0534  2D46               	goto	l1362
  3817                           
  3818                           ;Source/Header/GPIO.h: 27:         {;Source/Header/GPIO.h: 28:             TRISD &= ~(1 
      +                          << Pin);
  3819  0535  3001               	movlw	1
  3820  0536  00F6               	movwf	??_GPIO_Write
  3821  0537  0A74               	incf	GPIO_Write@Pin,w
  3822  0538  2D3B               	goto	u824
  3823  0539                     u825:
  3824  0539  1003               	clrc
  3825  053A  0DF6               	rlf	??_GPIO_Write,f
  3826  053B                     u824:
  3827  053B  3EFF               	addlw	-1
  3828  053C  1D03               	skipz
  3829  053D  2D39               	goto	u825
  3830  053E  0876               	movf	??_GPIO_Write,w
  3831  053F  3AFF               	xorlw	255
  3832  0540  00F7               	movwf	??_GPIO_Write+1
  3833  0541  0877               	movf	??_GPIO_Write+1,w
  3834  0542  1683               	bsf	3,5	;RP0=1, select bank1
  3835  0543  1303               	bcf	3,6	;RP1=0, select bank1
  3836  0544  0588               	andwf	8,f	;volatile
  3837                           
  3838                           ;Source/Header/GPIO.h: 29:         }
  3839  0545  2D7E               	goto	l1372
  3840  0546                     l1362:
  3841                           
  3842                           ;Source/Header/GPIO.h: 31:         {;Source/Header/GPIO.h: 32:             TRISE &= ~(1 
      +                          << Pin);
  3843  0546  3001               	movlw	1
  3844  0547  00F6               	movwf	??_GPIO_Write
  3845  0548  0A74               	incf	GPIO_Write@Pin,w
  3846  0549  2D4C               	goto	u834
  3847  054A                     u835:
  3848  054A  1003               	clrc
  3849  054B  0DF6               	rlf	??_GPIO_Write,f
  3850  054C                     u834:
  3851  054C  3EFF               	addlw	-1
  3852  054D  1D03               	skipz
  3853  054E  2D4A               	goto	u835
  3854  054F  0876               	movf	??_GPIO_Write,w
  3855  0550  3AFF               	xorlw	255
  3856  0551  00F7               	movwf	??_GPIO_Write+1
  3857  0552  0877               	movf	??_GPIO_Write+1,w
  3858  0553  1683               	bsf	3,5	;RP0=1, select bank1
  3859  0554  1303               	bcf	3,6	;RP1=0, select bank1
  3860  0555  0589               	andwf	9,f	;volatile
  3861  0556  2D7E               	goto	l1372
  3862  0557                     l1364:
  3863                           
  3864                           ;Source/Header/GPIO.h: 37:                 *GPIO_Port |= (unsigned char)(1 << Pin);
  3865  0557  3001               	movlw	1
  3866  0558  00F6               	movwf	??_GPIO_Write
  3867  0559  0A74               	incf	GPIO_Write@Pin,w
  3868  055A  2D5D               	goto	u844
  3869  055B                     u845:
  3870  055B  1003               	clrc
  3871  055C  0DF6               	rlf	??_GPIO_Write,f
  3872  055D                     u844:
  3873  055D  3EFF               	addlw	-1
  3874  055E  1D03               	skipz
  3875  055F  2D5B               	goto	u845
  3876  0560  0876               	movf	??_GPIO_Write,w
  3877  0561  00F7               	movwf	??_GPIO_Write+1
  3878  0562  0872               	movf	GPIO_Write@GPIO_Port,w
  3879  0563  0084               	movwf	4
  3880  0564  1783               	bsf	3,7
  3881  0565  1C73               	btfss	GPIO_Write@GPIO_Port+1,0
  3882  0566  1383               	bcf	3,7
  3883  0567  0877               	movf	??_GPIO_Write+1,w
  3884  0568  0480               	iorwf	0,f
  3885                           
  3886                           ;Source/Header/GPIO.h: 38:                 break;
  3887  0569  0008               	return
  3888  056A                     l1366:
  3889                           
  3890                           ;Source/Header/GPIO.h: 40:                 *GPIO_Port &= ~(1 << Pin);
  3891  056A  3001               	movlw	1
  3892  056B  00F6               	movwf	??_GPIO_Write
  3893  056C  0A74               	incf	GPIO_Write@Pin,w
  3894  056D  2D70               	goto	u854
  3895  056E                     u855:
  3896  056E  1003               	clrc
  3897  056F  0DF6               	rlf	??_GPIO_Write,f
  3898  0570                     u854:
  3899  0570  3EFF               	addlw	-1
  3900  0571  1D03               	skipz
  3901  0572  2D6E               	goto	u855
  3902  0573  0876               	movf	??_GPIO_Write,w
  3903  0574  3AFF               	xorlw	255
  3904  0575  00F7               	movwf	??_GPIO_Write+1
  3905  0576  0872               	movf	GPIO_Write@GPIO_Port,w
  3906  0577  0084               	movwf	4
  3907  0578  1783               	bsf	3,7
  3908  0579  1C73               	btfss	GPIO_Write@GPIO_Port+1,0
  3909  057A  1383               	bcf	3,7
  3910  057B  0877               	movf	??_GPIO_Write+1,w
  3911  057C  0580               	andwf	0,f
  3912                           
  3913                           ;Source/Header/GPIO.h: 41:                 break;
  3914  057D  0008               	return
  3915  057E                     l1372:
  3916  057E  0875               	movf	GPIO_Write@GPIO_State,w
  3917  057F  00F6               	movwf	??_GPIO_Write
  3918  0580  01F7               	clrf	??_GPIO_Write+1
  3919                           
  3920                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3921                           ; Switch size 1, requested type "simple"
  3922                           ; Number of cases is 1, Range of values is 0 to 0
  3923                           ; switch strategies available:
  3924                           ; Name         Instructions Cycles
  3925                           ; simple_byte            4     3 (average)
  3926                           ; direct_byte           11     8 (fixed)
  3927                           ; jumptable            260     6 (fixed)
  3928                           ;	Chosen strategy is simple_byte
  3929  0581  0877               	movf	??_GPIO_Write+1,w
  3930  0582  3A00               	xorlw	0	; case 0
  3931  0583  1903               	skipnz
  3932  0584  2D86               	goto	l1802
  3933  0585  2D6A               	goto	l1366
  3934  0586                     l1802:
  3935                           
  3936                           ; Switch size 1, requested type "simple"
  3937                           ; Number of cases is 2, Range of values is 0 to 1
  3938                           ; switch strategies available:
  3939                           ; Name         Instructions Cycles
  3940                           ; simple_byte            7     4 (average)
  3941                           ; direct_byte           14     8 (fixed)
  3942                           ; jumptable            260     6 (fixed)
  3943                           ;	Chosen strategy is simple_byte
  3944  0586  0876               	movf	??_GPIO_Write,w
  3945  0587  3A00               	xorlw	0	; case 0
  3946  0588  1903               	skipnz
  3947  0589  2D6A               	goto	l1366
  3948  058A  3A01               	xorlw	1	; case 1
  3949  058B  1903               	skipnz
  3950  058C  2D57               	goto	l1364
  3951  058D  2D6A               	goto	l1366
  3952  058E  0008               	return
  3953  058F                     __end_of_GPIO_Write:
  3954                           
  3955                           	psect	text18
  3956  0F70                     __ptext18:	
  3957 ;; *************** function _TIM2 *****************
  3958 ;; Defined at:
  3959 ;;		line 19 in file "Source/Header/Interrupts.h"
  3960 ;; Parameters:    Size  Location     Type
  3961 ;;		None
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;		None
  3964 ;; Return value:  Size  Location     Type
  3965 ;;                  1    wreg      void 
  3966 ;; Registers used:
  3967 ;;		wreg
  3968 ;; Tracked objects:
  3969 ;;		On entry : 0/0
  3970 ;;		On exit  : 0/0
  3971 ;;		Unchanged: 0/0
  3972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3973 ;;      Params:         0       0       0       0       0
  3974 ;;      Locals:         0       0       0       0       0
  3975 ;;      Temps:          2       0       0       0       0
  3976 ;;      Totals:         2       0       0       0       0
  3977 ;;Total ram usage:        2 bytes
  3978 ;; Hardware stack levels used: 1
  3979 ;; This function calls:
  3980 ;;		Nothing
  3981 ;; This function is called by:
  3982 ;;		Interrupt level 1
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           
  3986  0F70                     _TIM2:	
  3987                           ;psect for function _TIM2
  3988                           
  3989                           
  3990                           ;Source/Header/Interrupts.h: 30:     if(PIE1 & (1 << 1) && PIR1 & (1 << 1))
  3991  0F70  1683               	bsf	3,5	;RP0=1, select bank1
  3992  0F71  1303               	bcf	3,6	;RP1=0, select bank1
  3993  0F72  1C8C               	btfss	12,1	;volatile
  3994  0F73  2F8E               	goto	i1l226
  3995  0F74  1283               	bcf	3,5	;RP0=0, select bank0
  3996  0F75  1C8C               	btfss	12,1	;volatile
  3997  0F76  2F8E               	goto	i1l226
  3998                           
  3999                           ;Source/Header/Interrupts.h: 31:     {;Source/Header/Interrupts.h: 32:         timeReset
      +                          _flag++;
  4000  0F77  3001               	movlw	1
  4001  0F78  07E8               	addwf	_timeReset_flag,f
  4002  0F79  1803               	skipnc
  4003  0F7A  0AE9               	incf	_timeReset_flag+1,f
  4004  0F7B  3000               	movlw	0
  4005  0F7C  07E9               	addwf	_timeReset_flag+1,f
  4006                           
  4007                           ;Source/Header/Interrupts.h: 33:         timeSysTick += 1;
  4008  0F7D  3001               	movlw	1
  4009  0F7E  07EA               	addwf	_timeSysTick,f	;volatile
  4010  0F7F  3000               	movlw	0
  4011  0F80  1803               	skipnc
  4012  0F81  3001               	movlw	1
  4013  0F82  07EB               	addwf	_timeSysTick+1,f	;volatile
  4014  0F83  3000               	movlw	0
  4015  0F84  1803               	skipnc
  4016  0F85  3001               	movlw	1
  4017  0F86  07EC               	addwf	_timeSysTick+2,f	;volatile
  4018  0F87  3000               	movlw	0
  4019  0F88  1803               	skipnc
  4020  0F89  3001               	movlw	1
  4021  0F8A  07ED               	addwf	_timeSysTick+3,f	;volatile
  4022                           
  4023                           ;Source/Header/Interrupts.h: 34:         TMR2 = 225;
  4024  0F8B  30E1               	movlw	225
  4025  0F8C  0091               	movwf	17	;volatile
  4026                           
  4027                           ;Source/Header/Interrupts.h: 35:         TMR2IF = 0;
  4028  0F8D  108C               	bcf	12,1	;volatile
  4029  0F8E                     i1l226:	
  4030                           ;Source/Header/Interrupts.h: 36:     }
  4031                           
  4032                           
  4033                           ;Source/Header/Interrupts.h: 37:     if (timeReset_flag < 5000)
  4034  0F8E  3013               	movlw	19
  4035  0F8F  1283               	bcf	3,5	;RP0=0, select bank0
  4036  0F90  0269               	subwf	_timeReset_flag+1,w
  4037  0F91  3088               	movlw	136
  4038  0F92  1903               	skipnz
  4039  0F93  0268               	subwf	_timeReset_flag,w
  4040  0F94  1C03               	btfss	3,0
  4041  0F95  0064               	clrwdt	;# 
  4042  0F96  0871               	movf	??_TIM2+1,w
  4043  0F97  008A               	movwf	10
  4044  0F98  0E70               	swapf	??_TIM2,w
  4045  0F99  0083               	movwf	3
  4046  0F9A  0EFE               	swapf	126,f
  4047  0F9B  0E7E               	swapf	126,w
  4048  0F9C  0009               	retfie
  4049  0F9D                     __end_of_TIM2:
  4050  007E                     btemp	set	126	;btemp
  4051  007E                     wtemp0	set	126
  4052                           
  4053                           	psect	intentry
  4054  0004                     __pintentry:	
  4055                           ;incstack = 0
  4056                           ; Regs used in _TIM2: [wreg]
  4057                           
  4058  0004                     interrupt_function:
  4059  007E                     saved_w	set	btemp
  4060  0004  00FE               	movwf	btemp
  4061  0005  0E03               	swapf	3,w
  4062  0006  00F0               	movwf	??_TIM2
  4063  0007  080A               	movf	10,w
  4064  0008  00F1               	movwf	??_TIM2+1
  4065  0009  120A  158A  2F70   	ljmp	_TIM2
  4066                           
  4067                           	psect	config
  4068                           
  4069                           ;Config register CONFIG @ 0x2007
  4070                           ;	Oscillator Selection bits
  4071                           ;	FOSC = HS, HS oscillator
  4072                           ;	Watchdog Timer Enable bit
  4073                           ;	WDTE = ON, WDT enabled
  4074                           ;	Power-up Timer Enable bit
  4075                           ;	PWRTE = OFF, PWRT disabled
  4076                           ;	Brown-out Reset Enable bit
  4077                           ;	BOREN = OFF, BOR disabled
  4078                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4079                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4080                           ;	Data EEPROM Memory Code Protection bit
  4081                           ;	CPD = OFF, Data EEPROM code protection off
  4082                           ;	Flash Program Memory Write Enable bits
  4083                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4084                           ;	In-Circuit Debugger Mode bit
  4085                           ;	DEBUG = 0x1, unprogrammed default
  4086                           ;	Flash Program Memory Code Protection bit
  4087                           ;	CP = OFF, Code protection off
  4088  2007                     	org	8199
  4089  2007  3F3E               	dw	16190

Data Sizes:
    Strings     21
    Constant    10
    Data        84
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     42      78
    BANK1            80      0      64
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 12
		 -> main@TX_Str(BANK0[10]), STR_2(CODE[12]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> main@TX_Str(BANK0[10]), STR_2(CODE[12]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_3(CODE[9]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> main@TX_Str(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UltraSonicSensor_Read@system_tick	PTR volatile unsigned long  size(1) Largest target is 4
		 -> timeSysTick(BANK0[4]), 

    UltraSonicSensor_Read@sensor.Port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTE(SFR0[1]), PORTD(SFR0[1]), PORTC(SFR0[1]), 
		 -> PORTB(SFR0[1]), 

    UltraSonicSensor_Read@sensor	PTR struct . size(1) Largest target is 6
		 -> UltraSonic_2(BANK0[6]), 

    Motor_Reverse_Start@motor_handle.Port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTE(SFR0[1]), PORTD(SFR0[1]), PORTC(SFR0[1]), 
		 -> PORTB(SFR0[1]), 

    Motor_Reverse_Start@motor_handle	PTR struct . size(1) Largest target is 12
		 -> Motor_4(BANK1[12]), Motor_3(BANK1[12]), Motor_2(BANK1[12]), Motor_1(BANK1[12]), 

    Motor_Forward_Start@motor_handle.Port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTE(SFR0[1]), PORTD(SFR0[1]), PORTC(SFR0[1]), 
		 -> PORTB(SFR0[1]), 

    Motor_Forward_Start@motor_handle	PTR struct . size(1) Largest target is 12
		 -> Motor_4(BANK1[12]), Motor_3(BANK1[12]), Motor_2(BANK1[12]), Motor_1(BANK1[12]), 

    Motor_Stop@motor_handle.Port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTE(SFR0[1]), PORTD(SFR0[1]), PORTC(SFR0[1]), 
		 -> PORTB(SFR0[1]), 

    Motor_Stop@motor_handle	PTR struct . size(1) Largest target is 12
		 -> Motor_4(BANK1[12]), Motor_3(BANK1[12]), Motor_2(BANK1[12]), Motor_1(BANK1[12]), 

    UART_Writes@data	PTR unsigned char  size(2) Largest target is 12
		 -> main@TX_Str(BANK0[10]), STR_1(CODE[12]), 

    GPIO_Read@GPIO_Port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTE(SFR0[1]), PORTD(SFR0[1]), PORTC(SFR0[1]), 
		 -> PORTB(SFR0[1]), 

    GPIO_Write@GPIO_Port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTE(SFR0[1]), PORTD(SFR0[1]), PORTC(SFR0[1]), 
		 -> PORTB(SFR0[1]), 

    SW2.Port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTE(SFR0[1]), PORTD(SFR0[1]), PORTC(SFR0[1]), 
		 -> PORTB(SFR0[1]), 

    SW1.Port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTE(SFR0[1]), PORTD(SFR0[1]), PORTC(SFR0[1]), 
		 -> PORTB(SFR0[1]), 

    IR_Sensor_2.Port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTE(SFR0[1]), PORTD(SFR0[1]), PORTC(SFR0[1]), 
		 -> PORTB(SFR0[1]), 

    IR_Sensor_1.Port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTE(SFR0[1]), PORTD(SFR0[1]), PORTC(SFR0[1]), 
		 -> PORTB(SFR0[1]), 

    UltraSonic_2.Port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTE(SFR0[1]), PORTD(SFR0[1]), PORTC(SFR0[1]), 
		 -> PORTB(SFR0[1]), 

    UltraSonic_1.Port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTE(SFR0[1]), PORTD(SFR0[1]), PORTC(SFR0[1]), 
		 -> PORTB(SFR0[1]), 

    Motor_4.Port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTE(SFR0[1]), PORTD(SFR0[1]), PORTC(SFR0[1]), 
		 -> PORTB(SFR0[1]), 

    Motor_3.Port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTE(SFR0[1]), PORTD(SFR0[1]), PORTC(SFR0[1]), 
		 -> PORTB(SFR0[1]), 

    Motor_2.Port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTE(SFR0[1]), PORTD(SFR0[1]), PORTC(SFR0[1]), 
		 -> PORTB(SFR0[1]), 

    Motor_1.Port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTE(SFR0[1]), PORTD(SFR0[1]), PORTC(SFR0[1]), 
		 -> PORTB(SFR0[1]), 

    Motor_0.Port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTE(SFR0[1]), PORTD(SFR0[1]), PORTC(SFR0[1]), 
		 -> PORTB(SFR0[1]), 

    BUZZER.Port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTE(SFR0[1]), PORTD(SFR0[1]), PORTC(SFR0[1]), 
		 -> PORTB(SFR0[1]), 

    LED2.Port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTE(SFR0[1]), PORTD(SFR0[1]), PORTC(SFR0[1]), 
		 -> PORTB(SFR0[1]), 

    S22$Port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTE(SFR0[1]), PORTD(SFR0[1]), PORTC(SFR0[1]), 
		 -> PORTB(SFR0[1]), 

    LED1.Port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTE(SFR0[1]), PORTD(SFR0[1]), PORTC(SFR0[1]), 
		 -> PORTB(SFR0[1]), 


Critical Paths under _main in COMMON

    _main->_UltraSonicSensor_Read
    _main->___llmod
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _UltraSonicSensor_Read->_GPIO_Write
    _UART_Writes->_strlen
    _Motor_Reverse_Start->_Motor_Stop
    _Motor_Forward_Start->_Motor_Stop
    _Motor_Stop->_GPIO_Write
    _UART_BASE_Init->___aldiv

Critical Paths under _TIM2 in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    _MCU_Config->_UART_BASE_Init
    _UART_BASE_Init->___aldiv

Critical Paths under _TIM2 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TIM2 in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIM2 in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIM2 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0   53422
                                             19 BANK0     23    23      0
                          _GPIO_Read
                         _GPIO_Write
                         _MCU_Config
                _Motor_Forward_Start
                _Motor_Reverse_Start
                        _UART_Writes
              _UltraSonicSensor_Read
                            ___llmod
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     242
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    18      5    1211
                                              4 BANK0     15    10      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                             10 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) ___llmod                                             10     2      8     615
                                              2 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (1) _UltraSonicSensor_Read                               13     9      4    8100
                                              8 COMMON     4     0      4
                                              0 BANK0      9     9      0
                          _GPIO_Read
                         _GPIO_Write
 ---------------------------------------------------------------------------------
 (2) _GPIO_Read                                            5     2      3     955
                                              2 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (1) _UART_Writes                                          5     2      3     417
                                              6 COMMON     5     2      3
                     _UART_WriteChar
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _UART_WriteChar                                       1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Motor_Reverse_Start                                  3     3      0   13888
                                              0 BANK0      3     3      0
                         _GPIO_Write
                         _Motor_Stop
 ---------------------------------------------------------------------------------
 (1) _Motor_Forward_Start                                  3     3      0   13888
                                              0 BANK0      3     3      0
                         _GPIO_Write
                         _Motor_Stop
 ---------------------------------------------------------------------------------
 (2) _Motor_Stop                                           4     4      0    6988
                                              8 COMMON     4     4      0
                         _GPIO_Write
 ---------------------------------------------------------------------------------
 (1) _MCU_Config                                           3     3      0    7208
                                             14 BANK0      3     3      0
                         _GPIO_Write
              _Timer2_Interrupt_Init
                     _UART_BASE_Init
 ---------------------------------------------------------------------------------
 (2) _UART_BASE_Init                                       8     4      4     550
                                              6 BANK0      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     452
                                              2 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _Timer2_Interrupt_Init                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GPIO_Write                                           6     2      4    6658
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _TIM2                                                 2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPIO_Read
   _GPIO_Write
   _MCU_Config
     _GPIO_Write
     _Timer2_Interrupt_Init
     _UART_BASE_Init
       ___aldiv
   _Motor_Forward_Start
     _GPIO_Write
     _Motor_Stop
       _GPIO_Write
   _Motor_Reverse_Start
     _GPIO_Write
     _Motor_Stop
   _UART_Writes
     _UART_WriteChar
     _strlen (ARG)
   _UltraSonicSensor_Read
     _GPIO_Read
     _GPIO_Write
   ___llmod
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _strlen

 _TIM2 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      40       7       80.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2A      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      9A      12        0.0%
ABS                  0      0      9A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Apr 18 23:36:23 2022

                               pc 0002                      _UltraSonic_1 00A0                      _UltraSonic_2 0062  
                              fsr 0004                       ?_GPIO_Write 0072                               l190 0ED8  
                             l238 0403                               l193 0EDB                               l445 064A  
                             u804 0522                               u805 0520                               u815 0533  
                             u824 053B                               u825 0539                               u834 054C  
                             u835 054A                               u755 04E8                               u915 067D  
                             _SW1 004D                               u844 055D                               u764 04F0  
                             _SW2 004A                               u845 055B                               u765 04EE  
                             u925 0692                               u854 0570                               u855 056E  
                             u775 0501                               u935 06A4                               u784 0509  
                             u785 0507                               u795 051A                               u964 0F07  
                             u965 0F05                               u895 066F                               u985 0FAE  
          ?_Timer2_Interrupt_Init 0070                               fsr0 0004                               indf 0000  
                            l1400 067B                              l1412 06B0                              l1500 0FE2  
                            l1350 04FB                              l1416 06BE                              l1408 06A3  
                            l1504 0FF0                              l1362 0546                              l1354 0514  
                            l1426 0F11                              l1610 0451                              l1364 0557  
                            l1372 057E                              l1428 0F12                              l1508 0FFB  
                            l1620 0468                              l1604 0433                              l1700 006C  
                            l1366 056A                              l1358 052D                              l1390 065B  
                            l1518 0F16                              l1632 048B                              l1800 0446  
                            l1704 007D                              l1802 0586                              l1482 073F  
                            l1474 071B                              l1626 046A                              l1650 04DD  
                            l1722 00F7                              l1706 008C                              l1572 0380  
                            l1476 0729                              l1716 00DE                              l1708 009E  
                            l1398 066B                              l1582 03F9                              l1574 0399  
                            l1670 06FD                              l1486 074A                              l1646 049E  
                            l1638 049A                              l1590 0F53                              l1742 01BE  
                            l1726 011A                              l1576 03A7                              l1664 06CF  
                            l1648 0413                              l1592 0F67                              l1744 01C0  
                            l1666 06DF                              l1674 070A                              l1498 0FD4  
                            l1746 01CE                              STR_1 081A                              STR_2 081A  
                            STR_3 0826                              _LED1 005F                              _LED2 005C  
                            u1025 071E                              u1115 0FE8                              u1045 072A  
                            u1125 0FF1                              u1055 0736                              u1065 0740  
                            u1315 06ED                              u1235 0481                              u1403 00C1  
                            u1181 03D5                              u1325 06FE                              u1182 03D6  
                            u1183 03DB                              u1095 0FD7                              u1184 03DC  
                            u1193 03F7                              u1185 03E1                              u1186 03E2  
                            u1370 0067                              u1507 032B                              u1443 013C  
                            u1517 034B                              u1607 02A2                              u1527 05C2  
                            u1295 06D3                              u1455 0163                              u1617 02C1  
                            u1537 05FA                              u1473 01AF                              u1627 02E0  
                            u1547 0632                              u1557 020A                              u1485 01DE  
                            u1567 0228                              _PIE1 008C                              u1577 0247  
                            u1497 0085                              u1587 0265                              u1597 0284  
                            _PIR1 000C                              _TIM2 0F70                              _TMR2 0011  
                            _TRMT 04C1                              _TXIF 0064                       ?_MCU_Config 0070  
                            _main 003E                              btemp 007E                              start 000C  
                           ?_TIM2 0070   Motor_Forward_Start@motor_handle 0022                   __end_of___aldiv 06C7  
                           ?_main 0070                   __end_of___llmod 0713                             _T2CON 0012  
  UltraSonicSensor_Read@buff_time 0024                   __end_of___lwdiv 074F                             i1l226 0F8E  
                 __end_of___lwmod 1000                             _RCSTA 0018                             _SPBRG 0099  
                           _PORTA 0005                             _PORTB 0006                             _PORTC 0007  
                           _PORTD 0008                             _PORTE 0009                             _TRISA 0085  
                           _TRISB 0086                             _TRISC 0087                             _TRISD 0088  
                           _TRISE 0089                             _TXREG 0019                             _TXSTA 0098  
                 __end_of_dpowers 081A                             main@d 0046                             pclath 000A  
                           status 0003                             wtemp0 007E                   __end_of_sprintf 04E2  
              UART_BASE_Init@baud 0026                      __end_of_TIM2 0F9D                   __initialization 000F  
                    __end_of_main 01E3                  main@systick_flag 0041       UltraSonicSensor_Read@sensor 0028  
                          ??_TIM2 0070                            ??_main 0033                 __end_of_GPIO_Read 0F14  
                          _ADCON0 001F                            _ADCON1 009F               GPIO_Write@GPIO_Port 0072  
                ___llmod@dividend 0076                            _INTCON 000B                            _BUZZER 0059  
           _UltraSonicSensor_Read 0310                            _TMR2IE 0461                            _TMR2IF 0061  
                          _TMR2ON 0092                      ?_UART_Writes 0076                      GPIO_Read@Pin 0074  
                      _Motor_Stop 058F                         ??___aldiv 007A                         ??___llmod 007A  
                       ??___lwdiv 0076                         ??___lwmod 007A                            _strlen 0F4F  
                          saved_w 007E                    _UART_BASE_Init 0F9D                         ??_sprintf 0029  
         __end_of__initialization 003A       __end_of_Motor_Reverse_Start 0789                    __pcstackCOMMON 0070  
                    __pidataBANK0 0F31                      __pidataBANK1 07C2           ??_Timer2_Interrupt_Init 0072  
                    ??_GPIO_Write 0076            __end_of_UART_BASE_Init 0FCE                        __pbssBANK0 0068  
                      __pbssBANK1 00D6            ?_UltraSonicSensor_Read 0078                      ??_MCU_Config 002E  
              __end_of_GPIO_Write 058F            Motor_Stop@motor_handle 007B                        __pmaintext 003E  
                     ?_Motor_Stop 0070                        __pintentry 0004              GPIO_Write@GPIO_State 0075  
                         ?_strlen 0072                           _T2CKPS1 0091                __end_of_MCU_Config 0310  
                 ?_UART_BASE_Init 0026               _Motor_Forward_Start 0789                        __stringtab 0800  
                         _Motor_0 0056                           _Motor_1 00CA                           _Motor_2 00BE  
                         _Motor_3 00B2                           _Motor_4 00A6              ?_Motor_Forward_Start 0070  
                         ___aldiv 063A                           ___llmod 06C7                           ___lwdiv 0713  
                         ___lwmod 0FCE                           __ptext1 0F4F                           __ptext2 040E  
                         __ptext3 0FCE                           __ptext4 0713                           __ptext5 06C7  
                         __ptext6 0310                           __ptext7 0EFC                           __ptext8 0F14  
                         __ptext9 0ED5                           _dpowers 0810                  ___aldiv@dividend 0076  
                         _sprintf 040E                         _GPIO_Read 0EFC              end_of_initialization 003A  
             GPIO_Read@GPIO_State 0076             ??_Motor_Forward_Start 0020                  ___aldiv@quotient 0022  
                   GPIO_Write@Pin 0074                    _UART_WriteChar 0ED5                           strlen@s 0072  
                  UART_Writes@len 0078                        main@TX_Str 0037                        ?_GPIO_Read 0072  
          __end_of_UART_WriteChar 0EDF                    _timeReset_flag 0068     __end_of_Timer2_Interrupt_Init 0EEB  
                  __end_of_strlen 0F70               start_initialization 000F           ??_UltraSonicSensor_Read 0020  
                 ___llmod@divisor 0072                   ___llmod@counter 007B                   ?_UART_WriteChar 0070  
                    ??_Motor_Stop 0078                        init_fetch0 0EEB                       __pdataBANK0 004A  
                     __pdataBANK1 00A0                  ??_UART_BASE_Init 002A                          ??_strlen 0074  
                       ___latbits 0002                     __pcstackBANK0 0020                       ??_GPIO_Read 0075  
              __end_of_Motor_Stop 063A                       sprintf@flag 002D                       sprintf@prec 002E  
                ___lwdiv@dividend 0074                          ?___aldiv 0072                          ?___llmod 0072  
                        ?___lwdiv 0072                          ?___lwmod 0020                         __pstrings 0800  
                ___lwdiv@quotient 0077                          ?_sprintf 0024                   ___aldiv@divisor 0072  
               interrupt_function 0004                   ___aldiv@counter 0020                GPIO_Read@GPIO_Port 0072  
                   ??_UART_Writes 0079                         main@F1081 00D6                       __stringbase 080F  
     __end_of_Motor_Forward_Start 07C2               __end_of_UART_Writes 0F31                __end_of__stringtab 0810  
                      sprintf@val 002F                UART_WriteChar@data 0072                   ___lwdiv@divisor 0072  
                 ___lwdiv@counter 0079               _Motor_Reverse_Start 074F                          __ptext10 074F  
                        __ptext11 0789                          __ptext12 058F                          __ptext13 01E3  
                        __ptext14 0F9D                          __ptext15 063A                          __ptext16 0EDF  
                        __ptext17 04E2                          __ptext18 0F70     __end_of_UltraSonicSensor_Read 040E  
                ??_UART_WriteChar 0072   Motor_Reverse_Start@motor_handle 0022              ?_Motor_Reverse_Start 0070  
                    UART_Writes@i 007A                          main@moto 0045                        _GPIO_Write 04E2  
           _Timer2_Interrupt_Init 0EDF                          init_ram0 0EEF                          intlevel1 0000  
                       sprintf@ap 002C                         sprintf@sp 0031                        _MCU_Config 01E3  
                ___lwmod@dividend 0022                         stringcode 080A             ??_Motor_Reverse_Start 0020  
                     _UART_Writes 0F14  UltraSonicSensor_Read@system_tick 0078                       _IR_Sensor_1 0053  
                     _IR_Sensor_2 0050                       _timeSysTick 006A                          sprintf@c 0032  
                        sprintf@f 0024                   ___lwmod@divisor 0020                          strlen@cp 0074  
                 ___lwmod@counter 007B                          stringdir 080A                          stringtab 0800  
                    ___aldiv@sign 0021                   UART_Writes@data 0076  
